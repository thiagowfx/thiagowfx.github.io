<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selfhosted on not just serendipity</title><link>https://perrotta.dev/tags/selfhosted/</link><description>Recent content in Selfhosted on not just serendipity</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright © 2021 - 2025 [Thiago Perrotta](mailto:tbperrotta@gmail.com) · [RSS](/index.xml) · a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Fri, 06 Sep 2024 19:21:22 +0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/selfhosted/index.xml" rel="self" type="application/rss+xml"/><item><title>Wi-Fi QR code generator</title><link>https://perrotta.dev/2024/09/wi-fi-qr-code-generator/</link><pubDate>Fri, 06 Sep 2024 19:21:22 +0200</pubDate><guid>https://perrotta.dev/2024/09/wi-fi-qr-code-generator/</guid><description>&lt;p>&lt;a href="https://qifi.org/">https://qifi.org/&lt;/a> is a pure JS Wi-Fi QR Code generator.&lt;/p>
&lt;p>&lt;strong>Input&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>SSID&lt;/li>
&lt;li>Passphrase&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Output&lt;/strong>: QR Code with the appropriate information your friends can use from
Android / iOS to log into your Wi-Fi.&lt;/p>
&lt;p>Preferably use this for your guest network for better isolation / security.&lt;/p></description></item><item><title>Pipes: RSS Manipulation</title><link>https://perrotta.dev/2024/07/pipes-rss-manipulation/</link><pubDate>Wed, 03 Jul 2024 21:50:24 +0200</pubDate><guid>https://perrotta.dev/2024/07/pipes-rss-manipulation/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes&lt;/a> is not around
anymore, however there is a modern replacement for it: &lt;a href="https://www.pipes.digital/">https://www.pipes.digital/&lt;/a>.&lt;/p>
&lt;p>It was on Hacker News recently: &lt;a href="https://news.ycombinator.com/item?id=40841980">https://news.ycombinator.com/item?id=40841980&lt;/a>&lt;/p>
&lt;p>Here is a practical use case for it: to filter out unwanted episodes from
podcast RSS feeds.&lt;/p>
&lt;p>I follow &lt;a href="https://jovemnerd.com.br/podcasts/nerdcast">Jovem Nerd - Nerdcasts&lt;/a>.
They are a Brazilian podcast.&lt;/p>
&lt;p>However, in the recent years, they added a lot of other (unrelated) podcasts
from their network to the main NerdCast feed, effectively polluting it. The
cleaner and elegant action to do would have been to publish individual RSS feeds
for each of their podcast series, and perhaps an additional one to contain all
of them, for those who would like to subscribe to everything. But that&amp;rsquo;s not
what they do.&lt;/p></description></item><item><title>New domain</title><link>https://perrotta.dev/2024/02/new-domain/</link><pubDate>Sun, 04 Feb 2024 23:27:09 -0300</pubDate><guid>https://perrotta.dev/2024/02/new-domain/</guid><description>&lt;p>I got a new domain! This blog is now available on &lt;a href="https://www.perrotta.dev/">https://www.perrotta.dev/&lt;/a>.
There&amp;rsquo;s also a redirect to it from &lt;a href="https://blog.perrotta.dev/">https://blog.perrotta.dev/&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Update (2024-12-21)&lt;/strong>: The canonical URL is now simply &lt;a href="https://perrotta.dev/">https://perrotta.dev/&lt;/a>.&lt;/p>
&lt;p>I don&amp;rsquo;t know which one I like best, so &lt;code>www&lt;/code> is the canonical subdomain for now.
Feel free to update the RSS in your feed reader, although
&lt;a href="https://thiagowfx.github.io/">https://thiagowfx.github.io/&lt;/a> should keep working for a little longer, until (if
ever) I decide to migrate the static hosting off Github Pages.&lt;/p></description></item><item><title>WHOIS</title><link>https://perrotta.dev/2024/02/whois/</link><pubDate>Sun, 04 Feb 2024 00:20:15 -0300</pubDate><guid>https://perrotta.dev/2024/02/whois/</guid><description>&lt;p>I got myself a brand new domain! As I play with it, expect documentation to
be added.&lt;/p>
&lt;p>&lt;strong>How to query the WHOIS for the domain?&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>From the command line: &lt;code>$ whois &amp;lt;domain&amp;gt;&lt;/code>&lt;/li>
&lt;li>From the registrar WHOIS, e.g. &lt;a href="https://porkbun.com/whois">https://porkbun.com/whois&lt;/a>, &lt;a href="https://www.gandi.net/en/domain/p/whois">https://www.gandi.net/en/domain/p/whois&lt;/a>&lt;/li>
&lt;li>From the registry WHOIS, e.g. &lt;a href="https://lookup.icann.org/">https://lookup.icann.org/&lt;/a>, &lt;a href="https://www.registry.google/whois-lookup/">https://www.registry.google/whois-lookup/&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>It&amp;rsquo;s a good idea to set up WHOIS privacy, so that your domain registration
details stay private. Some registrars such as Porkbun and NearlyFreeSpeech will
gladly offer an option for that, either for free or at a low cost, respectively.&lt;/p></description></item><item><title>★ Integrating terraform with ansible</title><link>https://perrotta.dev/2024/02/integrating-terraform-with-ansible/</link><pubDate>Thu, 01 Feb 2024 14:02:28 -0300</pubDate><guid>https://perrotta.dev/2024/02/integrating-terraform-with-ansible/</guid><description>&lt;p>This post is a follow-up of &lt;a href="https://perrotta.dev/2024/01/terraforming-a-linode-hello-world/">Terraforming a Linode: hello world&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>In a future post, we will continue from here by using Ansible to install and
set up Miniflux in our new Linode.&lt;/p>
&lt;/blockquote>
&lt;p>Before we extensively use Ansible to configure our VPS instance, first let&amp;rsquo;s
set up a basic integration between Terraform and Ansible.&lt;/p>
&lt;p>First of all, here&amp;rsquo;s an overview of where I stopped last time. There were a
couple of lightweight modifications since then. I&amp;rsquo;ll explain some of them
below.&lt;/p></description></item><item><title>★ Terraforming a Linode: hello world</title><link>https://perrotta.dev/2024/01/terraforming-a-linode-hello-world/</link><pubDate>Tue, 23 Jan 2024 23:27:04 -0300</pubDate><guid>https://perrotta.dev/2024/01/terraforming-a-linode-hello-world/</guid><description>&lt;p>I host my own &lt;a href="https://miniflux.app/">Miniflux&lt;/a> instance, which happens to be
my favorite RSS reader. Currently it is hosted on Linode (Akamai Cloud)
running &lt;a href="https://www.alpinelinux.org/">Alpine Linux&lt;/a>.&lt;/p>
&lt;p>My current setup was performed manually. I was thinking that, for fun, it would
be cool to fully automate it under the principles of
&lt;a href="https://en.wikipedia.org/wiki/Infrastructure_as_code">IaC&lt;/a>.&lt;/p>
&lt;p>The current setup does not use any containers. I had proudly made it as KISS as
possible at the time:&lt;/p>
&lt;ol>
&lt;li>Linode is a very beginner-friendly (and cheap) VPS&lt;/li>
&lt;li>Alpine Linux is a first-class citizen on Linode&lt;/li>
&lt;li>There&amp;rsquo;s an &lt;code>apk&lt;/code> &lt;a href="https://pkgs.alpinelinux.org/packages?name=miniflux">package&lt;/a> for &lt;code>miniflux&lt;/code>&lt;/li>
&lt;li>There&amp;rsquo;s an OpenRC&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> script for &lt;code>miniflux&lt;/code> (so that it can be controlled via &lt;code>service&lt;/code>)&lt;/li>
&lt;/ol>
&lt;p>For the first part of this automation we will look into provisioning a Linode
with an Alpine Linux installation. In order to do so we will use HashiCorp
&lt;a href="https://www.terraform.io/">Terraform&lt;/a>.&lt;/p></description></item><item><title>Start an HTTP server ASAP</title><link>https://perrotta.dev/2024/01/start-an-http-server-asap/</link><pubDate>Wed, 17 Jan 2024 16:41:41 -0300</pubDate><guid>https://perrotta.dev/2024/01/start-an-http-server-asap/</guid><description>&lt;p>Sometimes I need to start a local HTTP server for a quick one-off task, often
just to serve static content. It is not important which one it is, so long as I
can do it quickly.&lt;/p>
&lt;h2 id="option-1-use-python">Option #1: use &lt;code>python&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% python3 -m http.server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Serving HTTP on :: port &lt;span style="color:#ae81ff">8000&lt;/span> &lt;span style="color:#f92672">(&lt;/span>http://&lt;span style="color:#f92672">[&lt;/span>::&lt;span style="color:#f92672">]&lt;/span>:8000/&lt;span style="color:#f92672">)&lt;/span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is often the most universal and convenient option, as &lt;code>python&lt;/code> is widely
available out-of-the-box.&lt;/p>
&lt;h2 id="option-2-use-darkhttpd">Option #2: use &lt;code>darkhttpd&lt;/code>&lt;/h2>
&lt;p>&lt;a href="https://unix4lyfe.org/darkhttpd/">&lt;code>darkhttpd&lt;/code>&lt;/a> is available &lt;a href="https://repology.org/project/darkhttpd/versions">almost
everywhere&lt;/a>.&lt;/p></description></item><item><title>Miniflux v2.0.36 is out</title><link>https://perrotta.dev/2022/03/miniflux-v2.0.36-is-out/</link><pubDate>Fri, 11 Mar 2022 10:30:18 -0500</pubDate><guid>https://perrotta.dev/2022/03/miniflux-v2.0.36-is-out/</guid><description>&lt;p>Miniflux &lt;a href="https://miniflux.app/releases/2.0.36.html">2.0.36&lt;/a> has been released this week. This is a dear release to me because I was responsible for many of its changes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ PAGER&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;cat&amp;#34;&lt;/span> git shortlog --author&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Thiago Perrotta&amp;#34;&lt;/span> 2.0.35..2.0.36
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Thiago Perrotta &lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add pagination on top of all entries. Closes &lt;span style="color:#75715e">#1305.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add links to scraper/rewrite/filtering docs when editing feeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add several icons to menus according to their roles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add new keyboard shortcut: &lt;span style="color:#e6db74">&amp;#39;M&amp;#39;&lt;/span> - toggle read/unread, go to prev item
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> refactor handleEntryStatus / goToNextListItem / goToPrevListItem
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add &lt;span style="color:#f92672">(&lt;/span>+&lt;span style="color:#f92672">)&lt;/span> action next to Feeds to quickly add new feeds
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add &lt;span style="color:#e6db74">&amp;#39;+&amp;#39;&lt;/span> shortcut &lt;span style="color:#66d9ef">for&lt;/span> new subscription page
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Gray out pagination buttons when they are not applicable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is the first open source project I self-host in a serious manner that I am contributing back to. It is very exciting and fulfilling, and it sparks a lot of joy in my heart.&lt;/p></description></item><item><title>Praise for blog aggregators</title><link>https://perrotta.dev/2022/02/praise-for-blog-aggregators/</link><pubDate>Thu, 17 Feb 2022 21:21:23 -0500</pubDate><guid>https://perrotta.dev/2022/02/praise-for-blog-aggregators/</guid><description>&lt;p>As much as I love my &lt;a href="https://miniflux.app/">Miniflux&lt;/a> setup, I&amp;rsquo;ve also come to
appreciate some indie blog aggregators. They are especially handy when I feel
like breaking out of my own bubble and/or getting the occasional serendipity dose
to discover new blogs to follow.&lt;/p>
&lt;p>Here&amp;rsquo;s a non-exhaustive list in alphabetical order:&lt;/p>
&lt;p>(i) Aggregation of blogs, acts as poor man&amp;rsquo;s RSS feed readers that someone else manages:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://blogsurf.io/">Blog Surf&lt;/a>, by &lt;a href="https://dkb.io/">DKB&lt;/a>: See &lt;a href="https://blogsurf.io/about/">about&lt;/a>.&lt;/li>
&lt;li>&lt;a href="https://diff.blog/">Diff Blog&lt;/a>: See &lt;a href="https://diff.blog/FAQ/">FAQ&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>(ii) Article submission websites, where their users can submit articles which are then upvoted (or not) by other users (&lt;em>wisdom of the crowds&lt;/em>):&lt;/p></description></item><item><title>RSS: bridging the gap</title><link>https://perrotta.dev/2022/02/rss-bridging-the-gap/</link><pubDate>Wed, 09 Feb 2022 22:17:52 -0500</pubDate><guid>https://perrotta.dev/2022/02/rss-bridging-the-gap/</guid><description>&lt;p>Not everything is available via RSS. However, there are some decent workarounds in a few situations.&lt;/p>
&lt;h2 id="newsletters">Newsletters&lt;/h2>
&lt;p>Some blogs and authors refuse to provide RSS feeds to their websites. Instead, they will only provide newsletters.
This is very hostile to the open web, and the main reason why it&amp;rsquo;s done is so that these authors can own a direct channel to reach out to their audience directly,
which is better for (their) business, making it easier for them to push sponsored and promoted content and measure engagement metrics and analytics.&lt;/p></description></item><item><title>Thoughts on Gemini</title><link>https://perrotta.dev/2022/02/thoughts-on-gemini/</link><pubDate>Tue, 08 Feb 2022 11:40:00 -0500</pubDate><guid>https://perrotta.dev/2022/02/thoughts-on-gemini/</guid><description>&lt;p>From the &lt;a href="https://gemini.circumlunar.space">homepage&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Gemini is a new internet protocol which:&lt;/p>
&lt;ul>
&lt;li>Is heavier than gopher&lt;/li>
&lt;li>Is lighter than the web&lt;/li>
&lt;li>Will not replace either&lt;/li>
&lt;li>Strives for maximum power to weight ratio&lt;/li>
&lt;li>Takes user privacy very seriously&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s too abstract though. I prefer the way &lt;a href="https://kevq.uk/gemini-isnt-the-solution-to-the-broken-web/">Kev Quirk&lt;/a> puts it:&lt;/p>
&lt;blockquote>
&lt;p>To put that into human-digestible form; Gemini is basically a very light, text-only alternative to HTML.&lt;/p>
&lt;/blockquote>
&lt;p>Gemini aims to replace &amp;ldquo;lightweight HTML&amp;rdquo;, but it already starts with a big barrier for entry and adoption: It&amp;rsquo;s not obvious what it is by just reading its project homepage alone. This in my opinion comes off as elitist.&lt;/p></description></item><item><title>Google and Duckduckgo</title><link>https://perrotta.dev/2022/02/google-and-duckduckgo/</link><pubDate>Wed, 02 Feb 2022 18:51:00 -0500</pubDate><guid>https://perrotta.dev/2022/02/google-and-duckduckgo/</guid><description>&lt;p>My search engine of choice is &lt;a href="https://google.com/">Google&lt;/a>, nonetheless I still enjoy &lt;a href="https://duckduckgo.com/">DuckDuckGo&lt;/a> occasionally.&lt;/p>
&lt;p>The main reason to stick with Google is its superior quality, by the means of better search results. 20 years later, it&amp;rsquo;s still arguably the best search engine. Of course, part of the reason for that is contingent upon how much data it collects, but that&amp;rsquo;s a topic for another day&amp;hellip;&lt;/p>
&lt;p>There are at least three reasons to use DuckDuckGo as an &lt;em>alternative&lt;/em>:&lt;/p></description></item><item><title>Pihole: Add custom DNS mappings</title><link>https://perrotta.dev/2022/01/pihole-add-custom-dns-mappings/</link><pubDate>Tue, 25 Jan 2022 21:50:53 -0500</pubDate><guid>https://perrotta.dev/2022/01/pihole-add-custom-dns-mappings/</guid><description>&lt;p>This post covers how to add DNS entries / mappings to a local network managed
with &lt;a href="https://pi-hole.net/">pihole&lt;/a>.&lt;/p>
&lt;p>There are several ways to do so:&lt;/p>
&lt;h2 id="1-the-cli-way-etcpihole">1. The CLI way: &lt;code>/etc/pihole/&lt;/code>&lt;/h2>
&lt;p>Edit &lt;code>/etc/pihole/custom.list&lt;/code>, set one mapping per line, just as you would for
&lt;code>/etc/hosts&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ cat /etc/pihole/custom.list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1 localhost.corp.google.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>192.168.1.75 myhostname.home.arpa
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This works because &lt;code>/etc/dnsmasq.d/01-pihole.conf&lt;/code> contains
&lt;code>addn-hosts=/etc/pihole/custom.list&lt;/code> by default.&lt;/p>
&lt;p>From &lt;a href="https://wiki.gentoo.org/wiki/Dnsmasq#Additional_hosts_file">Gentoo Wiki&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>It is possible to refer to an (additional) hosts file to use as source for
DNS queries. To do so, add the -H /path/to/hostsfile
(&amp;ndash;addn-hosts=/path/to/hostsfile) command line option. It is also possible to
pass a directory; in that case, all files inside that directory will be
treated as additional hosts files.&lt;/p></description></item><item><title>Introspect the local network for Pihole</title><link>https://perrotta.dev/2022/01/introspect-the-local-network-for-pihole/</link><pubDate>Sun, 23 Jan 2022 13:34:58 -0500</pubDate><guid>https://perrotta.dev/2022/01/introspect-the-local-network-for-pihole/</guid><description>&lt;p>Recently I needed to figure out what the IP address of my &lt;a href="https://pi-hole.net/">pihole&lt;/a>
instance was in my &lt;a href="https://www.raspberrypi.org/">Raspberry Pi&lt;/a> in my local network.&lt;/p>
&lt;h2 id="finding-the-raspberry-pi">Finding the Raspberry Pi&lt;/h2>
&lt;h3 id="nmap">nmap&lt;/h3>
&lt;p>&lt;a href="https://nmap.org/">&lt;code>nmap&lt;/code>&lt;/a> to the rescue!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># nmap -sS 192.168.1.1-255 | tee network.txt | less&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The relevant snippets to the pihole look like this:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-none" data-lang="none">Nmap scan report for pi.hole (192.168.1.XX)
Host is up (0.0052s latency).
Not shown: 997 closed tcp ports (reset)
PORT STATE SERVICE
22/tcp open ssh
53/tcp open domain
80/tcp open http
MAC Address: AA:AA:AA:AA:AA:AA (Raspberry Pi Foundation)

Nmap scan report for pi.hole (192.168.1.YY)
Host is up (0.0059s latency).
Not shown: 997 closed tcp ports (reset)
PORT STATE SERVICE
22/tcp open ssh
53/tcp open domain
80/tcp open http
MAC Address: BB:BB:BB:BB:BB:BB (Raspberry Pi Foundation)
&lt;/code>&lt;/pre>&lt;p>There are two IP addresses, one for the ethernet interface (&lt;code>eth0&lt;/code>) and the
other for the wifi (&lt;code>wlan0&lt;/code>). Later on I would disable the wifi interface.&lt;/p></description></item><item><title>Debian: Enable unattended upgrades</title><link>https://perrotta.dev/2022/01/debian-enable-unattended-upgrades/</link><pubDate>Sun, 16 Jan 2022 02:07:00 -0500</pubDate><guid>https://perrotta.dev/2022/01/debian-enable-unattended-upgrades/</guid><description>&lt;p>Here&amp;rsquo;s how we can enable automatic (unattended) package upgrades in Debian.&lt;/p>
&lt;h2 id="howto">Howto&lt;/h2>
&lt;p>Install the &lt;code>unattended-upgrades&lt;/code> package with &lt;code>apt(8)&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% apt install unattended-upgrades
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The service is then enabled and started automatically:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ systemctl status unattended-upgrades
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>● unattended-upgrades.service - Unattended Upgrades Shutdown
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Loaded: loaded &lt;span style="color:#f92672">(&lt;/span>/lib/systemd/system/unattended-upgrades.service; enabled; vendor preset: enabled&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Active: active &lt;span style="color:#f92672">(&lt;/span>running&lt;span style="color:#f92672">)&lt;/span> since Sun 2022-01-16 02:05:42 EST; 35s ago
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Docs: man:unattended-upgrade&lt;span style="color:#f92672">(&lt;/span>8&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Main PID: &lt;span style="color:#ae81ff">22442&lt;/span> &lt;span style="color:#f92672">(&lt;/span>unattended-upgr&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Tasks: &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#f92672">(&lt;/span>limit: 1597&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CPU: 516ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> CGroup: /system.slice/unattended-upgrades.serviceGk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └─22442 /usr/bin/python3 /usr/share/unattended-upgrades/unattended-upgrade-shutdown --wait-for-signal
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>By default, only security updates are enabled. We can enable all updates by uncommenting the applicable lines:&lt;/p></description></item><item><title>★ Alpine Linux on Raspberry Pi: Diskless Mode with persistent storage</title><link>https://perrotta.dev/2022/01/alpine-linux-on-raspberry-pi-diskless-mode-with-persistent-storage/</link><pubDate>Sat, 15 Jan 2022 23:18:56 -0500</pubDate><guid>https://perrotta.dev/2022/01/alpine-linux-on-raspberry-pi-diskless-mode-with-persistent-storage/</guid><description>&lt;p>Use case: Given an Alpine Linux &lt;strong>diskless&lt;/strong>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> installation meant for
a Raspberry Pi setup, we would like to add a persistent storage component to it
to make it survive across reboots.&lt;/p>
&lt;h2 id="goal">Goal&lt;/h2>
&lt;p>The &lt;a href="https://wiki.alpinelinux.org/wiki/Installation">Alpine Linux Wiki&lt;/a> covers most of the installation process, hence I will only document the bits that were lacking and/or confusing therein.&lt;/p>
&lt;p>My use case is the following:&lt;/p>
&lt;blockquote>
&lt;p>Given a Raspberry Pi 3B with an old 4GiB SD Card as CF storage&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, install Alpine Linux in diskless mode. Find a way to preserve modifications in &lt;code>/etc&lt;/code> and &lt;code>/var&lt;/code>, as well as any installed packages through its &lt;code>apk&lt;/code> package manager.&lt;/p></description></item><item><title>RSS: Follow commit updates from Github</title><link>https://perrotta.dev/2022/01/rss-follow-commit-updates-from-github/</link><pubDate>Fri, 14 Jan 2022 17:15:27 -0500</pubDate><guid>https://perrotta.dev/2022/01/rss-follow-commit-updates-from-github/</guid><description>&lt;p>It is possible to track/follow commits of &lt;code>git&lt;/code> repositories
on &lt;a href="https://github.com/">GitHub&lt;/a> via RSS: &lt;code>https://github.com/&amp;lt;user&amp;gt;/&amp;lt;repo&amp;gt;/commits.atom&lt;/code>.&lt;/p>
&lt;p>For example, my dotfiles: &lt;a href="https://github.com/thiagowfx/dotfiles/commits.atom">https://github.com/thiagowfx/dotfiles/commits.atom&lt;/a>&lt;/p>
&lt;p>I am using this to keep track of &lt;a href="https://miniflux.app/">Miniflux&lt;/a>
&lt;a href="https://github.com/miniflux/v2/commits.atom">commits&lt;/a> from
within Miniflux itself (a RSS webapp).&lt;/p></description></item><item><title>★ Miniflux: Rolling my own RSS Reader</title><link>https://perrotta.dev/2022/01/miniflux-rolling-my-own-rss-reader/</link><pubDate>Mon, 03 Jan 2022 17:56:56 -0500</pubDate><guid>https://perrotta.dev/2022/01/miniflux-rolling-my-own-rss-reader/</guid><description>&lt;p>This article describes my experience transitioning to, setting up and using the
&lt;a href="https://miniflux.app/">Miniflux&lt;/a> RSS reader for the first time.&lt;/p>
&lt;h2 id="preamble">Preamble&lt;/h2>
&lt;p>I always kind of enjoyed following people and blogs via RSS, even though it has never been a key part of my workflow (nor of the mainstream web). That said, I am not here to convince you why RSS is great, there are good existing resources&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> for that already.&lt;/p>
&lt;p>Initially I had used Commafeed, Feedly and Inoreader, which are hosted solutions. They are mostly OK, especially if you only have a handful of feeds. Their free offerings are quite decent, with a limit of a hundred or so feeds. They also have mobile clients (Android, iOS) which are a must these days. I was never fully converted to them though, and my workflow therein would only last for a few weeks or months. Some common barriers were:&lt;/p></description></item><item><title>Ufw: Firewall</title><link>https://perrotta.dev/2021/12/ufw-firewall/</link><pubDate>Tue, 28 Dec 2021 17:14:55 -0500</pubDate><guid>https://perrotta.dev/2021/12/ufw-firewall/</guid><description>&lt;blockquote>
&lt;p>Ufw stands for Uncomplicated Firewall, and is a program for managing a netfilter firewall. It provides a command line interface and aims to be uncomplicated and easy to use.&lt;/p>
&lt;/blockquote>
&lt;p>The firewall makes justice to its name as it is really uncomplicated, and a pleasure to set up.&lt;/p>
&lt;h2 id="install">Install&lt;/h2>
&lt;p>Install and set up &lt;code>ufw&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, which should be packaged for most linux
distributions:&lt;/p>
&lt;h3 id="openrc-based-alpine-linux-gentoo">OpenRC-based (Alpine Linux, Gentoo)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install ufw and ufw-extras&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ doas apk install ufw&lt;span style="color:#f92672">{&lt;/span>,-extras&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable ufw daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ doas rc-update add ufw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Start ufw daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ doas rc-service ufw start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable firewall&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ doas ufw enable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="systemd-based-arch-linux-debian">Systemd-based (Arch Linux, Debian)&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Install ufw and ufw-extras&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo pacman -Syu ufw&lt;span style="color:#f92672">{&lt;/span>,-extras&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable and start ufw daemon&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo systemctl enable --now ufw
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Enable firewall&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ sudo ufw enable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="add-rules">Add rules&lt;/h2>
&lt;p>Firewall rules can be added with &lt;code>ufw allow [port]&lt;/code> or &lt;code>ufw allow [name]&lt;/code>.
Named profiles (for example: ssh, http) live in &lt;code>/etc/ufw/applications.d/&lt;/code>, or you can query all of them with &lt;code>ufw app list&lt;/code>.&lt;/p></description></item></channel></rss>