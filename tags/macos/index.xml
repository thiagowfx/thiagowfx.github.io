<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Macos on not just serendipity</title><link>https://perrotta.dev/tags/macos/</link><description>Recent content in Macos on not just serendipity</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright © 2021 - 2025 Thiago Perrotta · [RSS](/index.xml) · a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sat, 21 Dec 2024 16:02:54 -0300</lastBuildDate><atom:link href="https://perrotta.dev/tags/macos/index.xml" rel="self" type="application/rss+xml"/><item><title>★ Default apps 2024</title><link>https://perrotta.dev/2024/12/default-apps-2024/</link><pubDate>Sat, 21 Dec 2024 16:02:54 -0300</pubDate><guid>https://perrotta.dev/2024/12/default-apps-2024/</guid><description>&lt;p>The list of my default apps for this year.&lt;/p>
&lt;p>In the past I would maintain an &lt;a href="https://uses.tech/">&amp;ldquo;uses&amp;rdquo;&lt;/a> page in my blog, but I no longer believe in it.
User needs change all the time, and it&amp;rsquo;s a chore to keep them up-to-date.
People shouldn&amp;rsquo;t be defined by the software they use.&lt;/p>
&lt;p>That said, having a clean snapshot of the software I use at a fixed point in time isn&amp;rsquo;t a bad proposition.
It doesn&amp;rsquo;t need to be maintained.
I will probably look back at it within 5 years and laugh at myself for how many things changed.
And also for how many didn&amp;rsquo;t.&lt;/p>
&lt;ul>
&lt;li>Browser: Google Chrome on macOS, Chromium on Linux, Safari on iOS.&lt;/li>
&lt;li>Search: A combination of Google and DuckDuckGo (mostly for their &lt;a href="https://duckduckgo.com/bangs">!bangs&lt;/a>).&lt;/li>
&lt;li>Writing: A combination of VSCode, &lt;code>vim&lt;/code> and &lt;a href="https://github.com/MarkEdit-app/MarkEdit">MarkEdit&lt;/a> (macOS markdown app). I never got around to long-form writing in Obsidian or Logseq, however it&amp;rsquo;s something I strive to.&lt;/li>
&lt;li>Cloud File Storage: There&amp;rsquo;s no need to share this. Basic OpSec. Why would people share it?&lt;/li>
&lt;li>Chat: WhatsApp remains king in terms of popularity, despite Telegram being superior from an architectural and usability perspective for power users. Facebook Messenger is officially dead at this point. And I&amp;rsquo;m too much of a millennial for all other apps (Discord, Matrix, etc). Disappearing messages exist in all of these, except Instagram.&lt;/li>
&lt;li>Scheduling: There&amp;rsquo;s no real choice here. You use the platform your employer uses. Otherwise, Google Calendar is the most sensible choice other than self-hosting.&lt;/li>
&lt;li>Video Calls: Ditto. I am way too used to Google Meet to justify switching to an alternative at this point.&lt;/li>
&lt;li>Music: Spotify, hands down. YouTube Music is a good fallback. There&amp;rsquo;s no need to pay for YouTube Premium for music, do your research.&lt;/li>
&lt;li>Podcasts: Overcast on iOS.&lt;/li>
&lt;li>Password Management: Once again, why would you share this?&lt;/li>
&lt;li>Code Editor: VScode and &lt;code>vim&lt;/code>. Maybe I&amp;rsquo;ll switch to &lt;code>neovim&lt;/code> at some point. I refrain from using IDEs in general but, when I need to, JetBrains is the answer. I tried &lt;a href="https://zed.dev/">&lt;code>zed&lt;/code>&lt;/a> this year but wasn&amp;rsquo;t convinced, and their core team is quite small. The flurry of &amp;ldquo;AI&amp;rdquo;&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> editors should be ignored, as none of them are likely to stick long-term. Instead, it&amp;rsquo;s better to invest in &amp;ldquo;AI&amp;rdquo; tooling that is editor agnostic; for example, Simon Willison&amp;rsquo;s &lt;a href="https://github.com/simonw/llm">&lt;code>llm&lt;/code>&lt;/a>, or GitHub Copilot.&lt;/li>
&lt;li>Terminal: iTerm2 on macOS. I haven&amp;rsquo;t used desktop linux in a while (:sad:), but I&amp;rsquo;d probably still stick to Tilix and/or Alacritty there. I no longer use hterm (ChromeOS).&lt;/li>
&lt;li>VPN: Unless you&amp;rsquo;re rolling your own, it doesn&amp;rsquo;t matter too much. Avoid the big players if you can afford to.&lt;/li>
&lt;li>Bookmarks: None. &lt;a href="https://www.goodreads.com/book/show/25614984-spark-joy">Absolutely none&lt;/a>. When I need to store &lt;em>transient&lt;/em> link lists, I use my Second Brain app to do so.&lt;/li>
&lt;li>Read It Later: Ditto as above. Otherwise: starring articles on Miniflux, or keeping Safari tabs open until I get to them, or parking a handful of items in an &amp;ldquo;inbox&amp;rdquo; browser bookmarks folder.&lt;/li>
&lt;li>Mail Client: The official clients of my email providers. No agnostic app at this time. It&amp;rsquo;s especially inconvenient to do so on iOS.&lt;/li>
&lt;li>Mail Server: N/A.&lt;/li>
&lt;li>Launcher: &lt;code>Cmd-Space&lt;/code> on macOS a.k.a. Spotlight. I keep Raycast around but I rarely use it. On Linux &lt;code>i3-dmenu-desktop&lt;/code> is still my favorite.&lt;/li>
&lt;li>Screenshots: &lt;code>Cmd-Shift-4&lt;/code> on macOS, or &lt;code>scrot&lt;/code> on Linux.&lt;/li>
&lt;li>Menu Bar: &lt;a href="https://github.com/dwarvesf/hidden">Hidden Bar&lt;/a>. It&amp;rsquo;s free, and available as a cask on homebrew.&lt;/li>
&lt;li>Containers: Rancher Desktop.&lt;/li>
&lt;li>Automation: None. I tried Hammerspoon this year but found no use for it.&lt;/li>
&lt;li>Second Brain: A mixture of Obsidian and Logseq. Which I&amp;rsquo;d really like to end, it would be easier to have a single app to rule them all, as they both support multiple vaults / graphs anyway (e.g. to partition personal vs work notes).&lt;/li>
&lt;li>Operating System: &lt;a href="https://alpinelinux.org/">Alpine Linux&lt;/a> is my current favorite for servers, and I&amp;rsquo;m biased anyway because I maintain a couple of aports (packages) there. For desktop, it&amp;rsquo;s awfully hard to use anything other than macOS ever since M1 processors got released. I miss Linux desktop from time to time but realistically it&amp;rsquo;s no longer an intrinsic goal of mine; that said, I&amp;rsquo;d likely go back to my beloved Arch Linux should that ever reoccur.&lt;/li>
&lt;li>Shell: &lt;code>zsh&lt;/code> + &lt;a href="https://grml.org/zsh/">&lt;code>grml-zsh-config&lt;/code>&lt;/a>, no change here. Sometimes I think of migrating to &lt;code>fish&lt;/code>, but the POSIX incompability always discourages me to do so.&lt;/li>
&lt;li>Terminal Multiplexer: &lt;code>tmux&lt;/code>, but only for remote sessions (&lt;code>ssh&lt;/code>). Locally I tend to just open new terminal tabs on VSCode and/or iTerm2. Alas, &lt;code>tmux&lt;/code> + &lt;code>VSCode&lt;/code> do not play well together anyway (citation needed, for another day).&lt;/li>
&lt;/ul></description></item><item><title>Pritunl log in via CLI</title><link>https://perrotta.dev/2024/05/pritunl-log-in-via-cli/</link><pubDate>Tue, 07 May 2024 16:03:27 +0200</pubDate><guid>https://perrotta.dev/2024/05/pritunl-log-in-via-cli/</guid><description>&lt;p>&lt;a href="https://pritunl.com/">Pritunl&lt;/a> is an Enterprise Distributed OpenVPN server.&lt;/p>
&lt;p>In order to run its client on macOS, an &lt;code>.app&lt;/code> is provided. However, using it to
log in every day is quite tedious.&lt;/p>
&lt;p>Let&amp;rsquo;s automate it so that we can connect to the VPN with a single command.&lt;/p></description></item><item><title>Force captive portal to open</title><link>https://perrotta.dev/2024/02/force-captive-portal-to-open/</link><pubDate>Thu, 22 Feb 2024 09:33:57 +0100</pubDate><guid>https://perrotta.dev/2024/02/force-captive-portal-to-open/</guid><description>&lt;p>Sometimes, when connecting to public Wi-Fi hotposts, especially in airports and
coffee shops, the captive portal gateway required to get internet access will
simply not show up.&lt;/p></description></item><item><title>macOS: remove all empty directories</title><link>https://perrotta.dev/2023/12/macos-remove-all-empty-directories/</link><pubDate>Fri, 29 Dec 2023 02:02:19 +0100</pubDate><guid>https://perrotta.dev/2023/12/macos-remove-all-empty-directories/</guid><description>&lt;p>For some odd reason my &lt;a href="https://calibre-ebook.com">Calibre&lt;/a> backup to cloud
storage had a bunch of empty directories. I&amp;rsquo;ve been meaning to remove them, but
it&amp;rsquo;s cumbersome to do so from the web client.&lt;/p></description></item><item><title>macOS: sudo with touch ID: survive upgrades</title><link>https://perrotta.dev/2023/12/macos-sudo-with-touch-id-survive-upgrades/</link><pubDate>Mon, 04 Dec 2023 22:40:21 +0100</pubDate><guid>https://perrotta.dev/2023/12/macos-sudo-with-touch-id-survive-upgrades/</guid><description>&lt;p>Recent macbooks have a fingerprint reader, which is typically used to unlock the computer and log in.&lt;/p>
&lt;p>It is also possible to use it for &lt;code>sudo&lt;/code> authentication via &lt;a href="https://en.wikipedia.org/wiki/Pluggable_authentication_module">PAM&lt;/a>.&lt;/p>
&lt;p>This was previously covered &lt;a href="https://perrotta.dev/2022/03/macos-sudo-with-touch-id/">here&lt;/a>.&lt;/p>
&lt;p>Now, with macOS Sonoma, it&amp;rsquo;s also possible to make this setting survive OS upgrades.&lt;/p></description></item><item><title>Maccy macOS clipboard manager</title><link>https://perrotta.dev/2023/12/maccy-macos-clipboard-manager/</link><pubDate>Sat, 02 Dec 2023 15:27:06 +0100</pubDate><guid>https://perrotta.dev/2023/12/maccy-macos-clipboard-manager/</guid><description>&lt;p>&lt;strong>Strongly recommended&lt;/strong> to all software developers who use macOS: &lt;a href="https://maccy.app/">Maccy&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Clipboard manager for macOS which does one job - keep your copy history at hand. Period.&lt;/p>
&lt;p>Lightweight. Open source. No fluff.&lt;/p>
&lt;/blockquote></description></item><item><title>★ Keychron K2 on macOS: fix Home and End keys</title><link>https://perrotta.dev/2022/04/keychron-k2-on-macos-fix-home-and-end-keys/</link><pubDate>Fri, 22 Apr 2022 19:04:17 -0400</pubDate><guid>https://perrotta.dev/2022/04/keychron-k2-on-macos-fix-home-and-end-keys/</guid><description>&lt;p>&lt;strong>Issue&lt;/strong>: For whatever reason, the &lt;code>Home&lt;/code> and &lt;code>End&lt;/code> keys on my &lt;a href="https://perrotta.dev/2022/01/keychron-k2-review/">Keychron K2&lt;/a> do not work as intended on macOS.&lt;/p></description></item><item><title>macOS terminal app gripes</title><link>https://perrotta.dev/2022/03/macos-terminal-app-gripes/</link><pubDate>Sat, 26 Mar 2022 02:28:15 -0300</pubDate><guid>https://perrotta.dev/2022/03/macos-terminal-app-gripes/</guid><description>&lt;p>&lt;code>Terminal.app&lt;/code> is a pretty decent terminal emulator for macOS, with sensible
defaults. That said, I have my own gripes about it, but the list is
surprisingly small.&lt;/p></description></item><item><title>macOS: sudo with touch ID</title><link>https://perrotta.dev/2022/03/macos-sudo-with-touch-id/</link><pubDate>Mon, 21 Mar 2022 02:13:27 -0300</pubDate><guid>https://perrotta.dev/2022/03/macos-sudo-with-touch-id/</guid><description>&lt;p>Recent macbooks have a fingerprint reader, which is typically used to unlock the computer and log in.&lt;/p>
&lt;p>It is also possible to use it for &lt;code>sudo&lt;/code> authentication via &lt;a href="https://en.wikipedia.org/wiki/Pluggable_authentication_module">PAM&lt;/a>:&lt;/p></description></item><item><title>★ nix-env in a nutshell for basic usage in macOS</title><link>https://perrotta.dev/2022/02/nix-env-in-a-nutshell-for-basic-usage-in-macos/</link><pubDate>Wed, 16 Feb 2022 20:48:02 -0500</pubDate><guid>https://perrotta.dev/2022/02/nix-env-in-a-nutshell-for-basic-usage-in-macos/</guid><description>&lt;p>I am currently evaluating &lt;a href="https://nixos.org/download.html">Nix&lt;/a> as a
replacement for &lt;a href="https://brew.sh">Homebrew&lt;/a> CLI apps in macOS&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.
&lt;a href="https://wickedchicken.github.io/post/macos-nix-setup/">Others&lt;/a>
&lt;a href="https://ianthehenry.com/posts/how-to-learn-nix/switching-from-homebrew-to-nix/">have&lt;/a>
&lt;a href="https://ghedam.at/15490/so-tell-me-about-nix">previously&lt;/a> written about this.&lt;/p>
&lt;p>My goal is to keep a sane learning curve and learn things on-the-fly, only as
needed. Nix is a massive ecosystem and has so many batteries included and
components (NixOS, NixPkgs, NixOps, Nix programming language, nix-shell,
nix-env, nix-darwin, home-manager, &amp;hellip;). The good news is that those components
are for the most part modular, there&amp;rsquo;s no need to adopt them all in order to
reap the benefits that Nix provides.&lt;/p>
&lt;p>For now, I am only adopting &lt;code>nix-env&lt;/code> and &lt;code>nix-shell&lt;/code>, with no &lt;code>*.nix&lt;/code> config
files. This post covers &lt;code>nix-env&lt;/code>.&lt;/p></description></item><item><title>nix-shell in a nutshell</title><link>https://perrotta.dev/2022/02/nix-shell-in-a-nutshell/</link><pubDate>Thu, 10 Feb 2022 20:48:02 -0500</pubDate><guid>https://perrotta.dev/2022/02/nix-shell-in-a-nutshell/</guid><description>&lt;p>As soon as we finish installing &lt;a href="https://nixos.org/download.html">&lt;code>Nix&lt;/code>&lt;/a> on
Darwin, we&amp;rsquo;re greeted with a call to action:&lt;/p>
&lt;pre tabindex="0">&lt;code>Alright! We&amp;#39;re done!
Try it! Open a new terminal, and type:

 $ nix-shell -p nix-info --run &amp;#34;nix-info -m&amp;#34;

Thank you for using this installer. If you have any feedback or need
help, don&amp;#39;t hesitate:

You can open an issue at https://github.com/nixos/nix/issues
&lt;/code>&lt;/pre></description></item></channel></rss>