<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on not just serendipity</title><link>https://www.perrotta.dev/tags/dev/</link><description>Recent content in Dev on not just serendipity</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright © 2021 - 2025 Thiago Perrotta · [RSS](/index.xml) · [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Fri, 20 Dec 2024 22:47:51 -0300</lastBuildDate><atom:link href="https://www.perrotta.dev/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Advent of Code: Day 8</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-8/</link><pubDate>Fri, 20 Dec 2024 22:47:51 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-8/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/8">Day #8&lt;/a> puzzle.&lt;/p></description></item><item><title>hugo: merge two tags</title><link>https://www.perrotta.dev/2024/12/hugo-merge-two-tags/</link><pubDate>Fri, 20 Dec 2024 00:46:50 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/hugo-merge-two-tags/</guid><description>&lt;p>So far I&amp;rsquo;ve been using the &lt;code>dev&lt;/code> and &lt;code>devops&lt;/code> tags pretty much interchangeably
(and inconsistently) in this blog. There&amp;rsquo;s no real difference: Dev and Ops work
overlap quite a lot. It&amp;rsquo;s time to do some house cleaning and merge them. I
choose &lt;code>dev&lt;/code> as it is more generic / agnostic.&lt;/p></description></item><item><title>git: push --force with style</title><link>https://www.perrotta.dev/2024/12/git-push--force-with-style/</link><pubDate>Fri, 20 Dec 2024 00:38:07 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/git-push--force-with-style/</guid><description>&lt;p>TIL:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git push --force&lt;/code>: This command forcefully pushes your changes to the remote
branch, even if it results in overwriting or losing commits. It does not
consider the current state of the remote branch. If someone else has pushed
changes to the same branch in the meantime, their changes will be lost.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;code>git push --force-with-lease&lt;/code>: This command is a safer alternative to git push
— force. It will only force push if the remote branch matches your
expectations. It checks if someone else has pushed changes to the branch in
the meantime. If the branch on the remote repository has not diverged (i.e.,
no new commits were pushed by others), your push will be allowed. If someone
else has pushed changes, the push will be rejected, ensuring you do not
accidentally overwrite someone else’s work.&lt;/p></description></item><item><title>pre-commit: create hooks for unsupported tools</title><link>https://www.perrotta.dev/2024/12/pre-commit-create-hooks-for-unsupported-tools/</link><pubDate>Tue, 17 Dec 2024 22:46:41 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/pre-commit-create-hooks-for-unsupported-tools/</guid><description>&lt;p>When using &lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a>, in an ideal world, every
formatter / linter / code analyzer would have a &lt;code>.pre-commit-config.yaml&lt;/code> file
in its repository root.&lt;/p>
&lt;p>In the real world, that&amp;rsquo;s not always the case.&lt;/p>
&lt;p>A recent example: &lt;a href="https://github.com/cloudflare/pint">cloudflare/pint&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Prometheus rule linter/validator&lt;/p>
&lt;/blockquote>
&lt;p>It is a golang binary that lints &lt;a href="https://prometheus.io/">prometheus&lt;/a> rules.&lt;/p>
&lt;p>Can we bridge the gap?&lt;/p></description></item><item><title>skopeo: operate container images and registries</title><link>https://www.perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/</link><pubDate>Tue, 17 Dec 2024 17:49:31 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/</guid><description>&lt;p>When working with &lt;code>docker&lt;/code> and private image registries, a common workflow is to copy images from one private registry in the cloud to another. This can be done with &lt;a href="https://github.com/containers/skopeo/">&lt;code>skopeo&lt;/code>&lt;/a>.&lt;/p>
&lt;p>This post includes some common recipes for it.&lt;/p>
&lt;h2 id="usage-1-default--root-to-staging">Usage 1) Default / Root to Staging&lt;/h2>
&lt;p>From the default / root account registry to the staging registry:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>skopeo sync &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --src-creds &lt;span style="color:#e6db74">&amp;#34;AWS:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>aws ecr get-login-password --region &lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span> --profile default&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --dest-creds &lt;span style="color:#e6db74">&amp;#34;AWS:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>aws ecr get-login-password --region &lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span> --profile staging&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --override-os linux --override-arch amd64 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --src docker --dest docker &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">{&lt;/span>account_id_root&lt;span style="color:#f92672">}&lt;/span>.dkr.ecr.&lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span>.amazonaws.com/&lt;span style="color:#f92672">{&lt;/span>org&lt;span style="color:#f92672">}&lt;/span>/&lt;span style="color:#f92672">{&lt;/span>repository&lt;span style="color:#f92672">}&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>tag&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">{&lt;/span>account_id_staging&lt;span style="color:#f92672">}&lt;/span>.dkr.ecr.&lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span>.amazonaws.com/&lt;span style="color:#f92672">{&lt;/span>org&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example values&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p></description></item><item><title>Kubernetes: tail logs from pods with stern</title><link>https://www.perrotta.dev/2024/12/kubernetes-tail-logs-from-pods-with-stern/</link><pubDate>Tue, 17 Dec 2024 16:37:16 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/kubernetes-tail-logs-from-pods-with-stern/</guid><description>&lt;p>You can always use &lt;code>kubectl logs -n {namespace} {pod} [-c {container}] -f&lt;/code> to
inspect logs from a specific pod&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Nonetheless that doesn&amp;rsquo;t scale when you don&amp;rsquo;t know which pod you want in the
first place.&lt;/p></description></item><item><title>Kubernetes: debugging services</title><link>https://www.perrotta.dev/2024/12/kubernetes-debugging-services/</link><pubDate>Mon, 16 Dec 2024 10:14:11 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/kubernetes-debugging-services/</guid><description>&lt;p>I am deploying a new helm chart to our staging environments, and needed a way to
ensure its dependencies in &lt;code>values.yaml&lt;/code> are properly configured.&lt;/p>
&lt;p>From the official kubernetes
&lt;a href="https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/">documentation&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>An issue that comes up rather frequently for new installations of Kubernetes
is that a Service is not working properly. You&amp;rsquo;ve run your Pods through a
Deployment (or other workload controller) and created a Service, but you get
no response when you try to access it. This document will hopefully help you
to figure out what&amp;rsquo;s going wrong.&lt;/p>
&lt;/blockquote></description></item><item><title>★ Just</title><link>https://www.perrotta.dev/2024/12/just/</link><pubDate>Fri, 13 Dec 2024 01:16:41 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/just/</guid><description>&lt;p>&lt;a href="https://github.com/casey/just">Just&lt;/a> is a command runner, a modern replacement
for GNU Make.&lt;/p></description></item><item><title>Advent of Code: Day 7</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-7/</link><pubDate>Thu, 12 Dec 2024 23:12:31 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-7/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/7">Day #7&lt;/a> puzzle.&lt;/p></description></item><item><title>Advent of Code: discussion group</title><link>https://www.perrotta.dev/2024/12/advent-of-code-discussion-group/</link><pubDate>Thu, 12 Dec 2024 19:30:53 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-discussion-group/</guid><description>&lt;p>Assuming you are following this year&amp;rsquo;s advent of code, you are welcome to join
our Telegram discussion group &lt;a href="https://t.me/+mtPcW45EuFBjNGMx">here&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. It is
a supergroup, one of its channels is &lt;code>#adventofcode&lt;/code>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s a moderated group, and this invitation link will expire within 2
weeks of the time of this post.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Advent of Code: Day 11</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-11/</link><pubDate>Thu, 12 Dec 2024 19:15:35 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-11/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/11">Day #11&lt;/a> puzzle.&lt;/p></description></item><item><title>Advent of Code: Day 6</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-6/</link><pubDate>Thu, 12 Dec 2024 15:26:35 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-6/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/6">Day #6&lt;/a> puzzle.&lt;/p></description></item><item><title>Semantic versioning constraints</title><link>https://www.perrotta.dev/2024/12/semantic-versioning-constraints/</link><pubDate>Thu, 12 Dec 2024 12:34:39 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/semantic-versioning-constraints/</guid><description>&lt;p>When working with semantic versioning a.k.a. &lt;a href="https://semver.org/">semver&lt;/a>, it&amp;rsquo;s
often useful to use range constraints&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> to express the versions you&amp;rsquo;re
interested in.&lt;/p>
&lt;p>The most useful ones are the tilde (&lt;code>~&lt;/code>) and the circumflex / hat / caret
(&lt;code>^&lt;/code>)&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>~4.2.1&lt;/code>: picks up &lt;code>4.2.x&lt;/code> for &lt;code>x &amp;gt;= 1&lt;/code>&lt;/li>
&lt;li>&lt;code>^5.0.2&lt;/code>: picks up &lt;code>5.x.y&lt;/code> for &lt;code>x &amp;gt;= 0&lt;/code> and &lt;code>y &amp;gt;= 2&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Popular software tooling that uses them include:&lt;/p>
&lt;ul>
&lt;li>nodejs / npm packages&lt;/li>
&lt;li>terraform&lt;/li>
&lt;li>ruby gems (here &lt;code>~&amp;gt;&lt;/code> is used instead of simply &lt;code>~&lt;/code>)&lt;/li>
&lt;/ul></description></item><item><title>.gitignore without .gitignore</title><link>https://www.perrotta.dev/2024/12/.gitignore-without-.gitignore/</link><pubDate>Wed, 11 Dec 2024 11:44:12 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/.gitignore-without-.gitignore/</guid><description>&lt;p>&lt;code>.gitignore&lt;/code> is the canonical way to exclude files from your git repository.&lt;/p>
&lt;p>In some situations, however, you may want to exclude files without adding them
to &lt;code>.gitignore&lt;/code>, because they are only relevant to you, as opposed to your
teammates.&lt;/p>
&lt;p>Common examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>.ackrc&lt;/code>: exclude file patterns from search with &lt;code>ack&lt;/code> – not everyone in your
team may use &lt;code>ack&lt;/code> at all&lt;/li>
&lt;li>&lt;code>.envrc&lt;/code>: &lt;code>direnv&lt;/code> integration to automatically run a couple of commands
whenever &lt;code>cd&lt;/code>&amp;lsquo;ing to within the repository – not everyone in your team may use
&lt;code>direnv&lt;/code> at all&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;and so on.&lt;/p></description></item><item><title>Alpine Linux 3.21</title><link>https://www.perrotta.dev/2024/12/alpine-linux-3.21/</link><pubDate>Tue, 10 Dec 2024 19:52:33 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/alpine-linux-3.21/</guid><description>&lt;p>&lt;a href="https://alpinelinux.org/posts/Alpine-3.21.0-released.html">Alpine Linux 3.21.0&lt;/a>
got released last Thursday.&lt;/p></description></item><item><title>Docker build: ignore cache</title><link>https://www.perrotta.dev/2024/12/docker-build-ignore-cache/</link><pubDate>Tue, 10 Dec 2024 19:45:42 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/docker-build-ignore-cache/</guid><description>&lt;p>To build a docker image completely from scratch, without reusing cache layers on
your system:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>docker build --no-cache -f Dockerfile . -t &lt;span style="color:#f92672">{&lt;/span>image name&lt;span style="color:#f92672">}&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>image tag&lt;span style="color:#f92672">}&lt;/span> --platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>linux/amd64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>bash: glob hidden files recursively</title><link>https://www.perrotta.dev/2024/12/bash-glob-hidden-files-recursively/</link><pubDate>Mon, 09 Dec 2024 17:53:14 -0300</pubDate><guid>https://www.perrotta.dev/2024/12/bash-glob-hidden-files-recursively/</guid><description>&lt;p>Assume you make a huge change to your git repository, that spawns several file
formats – cpp, java, javascript, python, etc.&lt;/p>
&lt;p>In the end you want to revert the javascript changes, for the sake of splitting
your commit into self-contained chunks&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>I like the following approach&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git checkout -- **/*.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Caveat&lt;/strong>: It does not include hidden files, or files in hidden directories.
Unless&amp;hellip;you set the &lt;code>dotglob&lt;/code> option:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% shopt -s dotglob
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>shopt&lt;/code> works in &lt;code>bash&lt;/code>, alas not in &lt;code>zsh&lt;/code>.&lt;/p></description></item><item><title>Finding linters</title><link>https://www.perrotta.dev/2024/12/finding-linters/</link><pubDate>Sun, 08 Dec 2024 23:40:26 +0100</pubDate><guid>https://www.perrotta.dev/2024/12/finding-linters/</guid><description>&lt;p>A no-brainer and effective way to increase code quality in an organization is by
the means of incorporating linters into your CI/CD pipeline.&lt;/p>
&lt;p>But where can you find them?&lt;/p></description></item><item><title>Advent of Code: Day 5</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-5/</link><pubDate>Sun, 08 Dec 2024 23:24:27 +0100</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-5/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/5">Day #5&lt;/a> puzzle.&lt;/p></description></item><item><title>Advent of Code: Day 4</title><link>https://www.perrotta.dev/2024/12/advent-of-code-day-4/</link><pubDate>Fri, 06 Dec 2024 11:44:39 +0100</pubDate><guid>https://www.perrotta.dev/2024/12/advent-of-code-day-4/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/4">Day #4&lt;/a> puzzle.&lt;/p></description></item></channel></rss>