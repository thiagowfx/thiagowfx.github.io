<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on ¬ just serendipity 🍀</title><link>https://perrotta.dev/tags/dev/</link><description>Recent content in Dev on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Fri, 02 May 2025 16:43:42 +0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Terminal autocorrection</title><link>https://perrotta.dev/2025/05/terminal-autocorrection/</link><pubDate>Fri, 02 May 2025 16:43:42 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/terminal-autocorrection/</guid><description>&lt;p>Appreciate this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gitp ushm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsh: correct &lt;span style="color:#98c379">&amp;#39;gitp&amp;#39;&lt;/span> to &lt;span style="color:#98c379">&amp;#39;git&amp;#39;&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>nyae&lt;span style="color:#56b6c2">]&lt;/span>? y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WARNING: You called a Git &lt;span style="color:#e5c07b">command&lt;/span> named &lt;span style="color:#98c379">&amp;#39;ushm&amp;#39;&lt;/span>, which does not exist.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Continuing in 1.0 seconds, assuming that you meant &lt;span style="color:#98c379">&amp;#39;pushm&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>branch &lt;span style="color:#98c379">&amp;#39;master&amp;#39;&lt;/span> &lt;span style="color:#e5c07b">set&lt;/span> up to track &lt;span style="color:#98c379">&amp;#39;origin/master&amp;#39;&lt;/span> by rebasing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Everything up-to-date
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://hunden.linuxkompis.se/2018/08/04/spell-check-and-auto-correction-of-commands-in-zsh.html">&lt;code>zsh&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://andycarter.dev/blog/auto-correct-git-commands">&lt;code>git&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>The ack + xargs + sed pattern</title><link>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</link><pubDate>Wed, 30 Apr 2025 16:20:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</guid><description>&lt;p>I employ this pattern almost every day:&lt;/p>
&lt;ul>
&lt;li>use &lt;a href="https://beyondgrep.com/">&lt;code>ack&lt;/code>&lt;/a> to search for a given string in a codebase (git repo)&lt;/li>
&lt;li>use &lt;a href="https://man.archlinux.org/man/xargs.1">&lt;code>xargs&lt;/code>&lt;/a> to iterate through each finding&lt;/li>
&lt;li>use &lt;a href="https://www.gnu.org/software/sed/manual/sed.html">&lt;code>sed&lt;/code>&lt;/a> to make a text transformation&lt;/li>
&lt;/ul>
&lt;p>Example of the day:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l | xargs -n &lt;span style="color:#d19a66">1&lt;/span> gsed -i -e &lt;span style="color:#98c379">&amp;#39;s/limit: 2/limit: 5/g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Given multiple &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD app manifests&lt;/a> in the form:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">syncPolicy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">retry&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">limit&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">backoff&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">duration&lt;/span>: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">factor&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">maxDuration&lt;/span>: 1m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>limit: 2&lt;/code> with &lt;code>limit: 5&lt;/code> in all files. That&amp;rsquo;s what the command above
does:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ack -l&lt;/code> lists all files that match the given pattern&lt;/li>
&lt;li>pipe to &lt;code>xargs -n 1&lt;/code> iterates on each of them&lt;/li>
&lt;li>&lt;code>gsed -i&lt;/code> (GNU &lt;code>sed&lt;/code>) makes a text transformation in-place&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s not bulletproof, but it works most of the time.&lt;/p>
&lt;p>Sometimes I use &lt;a href="https://github.com/sharkdp/fd">&lt;code>fd&lt;/code>&lt;/a> to narrow the search down
to a file pattern. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fd -e yaml | xargs ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, though, &lt;code>ack --yaml&lt;/code> would be even simpler.&lt;/p>
&lt;p>When &lt;code>sed&lt;/code> isn&amp;rsquo;t up for the job, &lt;code>awk&lt;/code> tends to be a decent alternative.&lt;/p>
&lt;p>Regular expression replacements aren&amp;rsquo;t always precise.
False positives can easily take place.
Adding &lt;code>\b&lt;/code> (word boundaries) sometimes helps.&lt;/p>
&lt;p>Other times it&amp;rsquo;s better to use a syntax-aware tool instead of &lt;code>sed&lt;/code>.&lt;/p>
&lt;p>For YAML, there&amp;rsquo;s &lt;a href="https://github.com/mikefarah/yq">&lt;code>yq&lt;/code>&lt;/a>.&lt;/p>
&lt;p>For JSON, there&amp;rsquo;s &lt;a href="https://jqlang.org/">&lt;code>jq&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>jq&lt;/code> is like &lt;code>sed&lt;/code> for JSON data - you can use it to slice and filter and map
and transform structured data with the same ease that &lt;code>sed&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>grep&lt;/code> and
friends let you play with text.&lt;/p>
&lt;/blockquote></description></item><item><title>YAML: complex keys</title><link>https://perrotta.dev/2025/04/yaml-complex-keys/</link><pubDate>Tue, 29 Apr 2025 13:06:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/yaml-complex-keys/</guid><description>&lt;p>&lt;strong>Today I learned&lt;/strong>: YAML complex keys (&lt;a href="https://stackoverflow.com/questions/33987316/what-is-a-complex-mapping-key-in-yaml">stack
overflow&lt;/a>).&lt;/p>
&lt;p>From the &lt;a href="https://yaml.org/spec/1.2.2/">spec&lt;/a>, § 2.11:&lt;/p>
&lt;blockquote>
&lt;p>A question mark and space (&lt;code>&amp;quot;? &amp;quot;&lt;/code>) indicate a complex mapping key. Within a
block collection, key/value pairs can start immediately following the dash,
colon, or question mark.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>? - Detroit Tigers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Chicago cubs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: - 2001-07-23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>? [ New York Yankees,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Atlanta Braves ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: [ 2001-07-02, 2001-08-12,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2001-08-14 ]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I noticed it when saving a &lt;code>values.yaml&lt;/code> file from &lt;a href="https://helm.sh/">helm&lt;/a> in
VSCode, which has auto-formatted it like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>diff --git a/helm/argocd/values.yaml b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index b0884b26d..928c02eb3 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- a/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -471,10 +471,12 @@ argo-cd:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Do not trigger a reconciliation when the reported status of a HorizontalPodAutoscaler or ExternalSecret changes.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # That would mean reconciling every application with a hpa every 5 seconds which is heavy on the cpu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#finding-resources-to-ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initially I thought this was a mistake that would yield a parse error.
Upon running &lt;code>helm template&lt;/code>, however, I observed it&amp;rsquo;s in fact a no-op.&lt;/p>
&lt;p>The LLM says:&lt;/p>
&lt;blockquote>
&lt;p>VS Code is reformatting your YAML that way because it&amp;rsquo;s interpreting the
structure as YAML mapping with complex keys.&lt;/p>
&lt;p>This happens when your keys contain special characters (like dots or
underscores) or are long strings — YAML interpreters sometimes use the &lt;code>? key :&lt;/code> value syntax to denote explicit mapping entries with complex keys.&lt;/p>
&lt;/blockquote>
&lt;p>I surely cannot deny it&amp;rsquo;s a long key. Go blame
&lt;a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#system-level-configuration">ArgoCD&lt;/a>
:P&lt;/p></description></item><item><title>GitHub: create a pull request from CLI</title><link>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</link><pubDate>Mon, 28 Apr 2025 14:12:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</guid><description>&lt;p>Using the &lt;a href="https://cli.github.com/">&lt;code>gh&lt;/code>&lt;/a> tool (the official GitHub CLI tool):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will prompt for more information.&lt;/p>
&lt;p>To skip all prompts and simply use the commit message to fill in the PR Title
and the PR description, pass &lt;code>--fill&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --fill
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --help | grep -- --fill
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> to skip this, or use &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span> to autofill these values from git commits.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alongside &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span>, the values specified by &lt;span style="color:#98c379">`&lt;/span>--title&lt;span style="color:#98c379">`&lt;/span> and/or &lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> will
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --fill Use commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-first Use first commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-verbose Use commits msg+body &lt;span style="color:#c678dd">for&lt;/span> description
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>macOS: delete file, bypass trash</title><link>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</link><pubDate>Fri, 25 Apr 2025 16:37:28 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</guid><description>&lt;p>To delete a file in Finder on macOS without moving it to the trash, press
&lt;code>Option&lt;/code> + &lt;code>Command&lt;/code> + &lt;code>Delete&lt;/code> upon selecting the file.&lt;/p>
&lt;p>When using the CLI, of course, &lt;code>rm&lt;/code> is enough.&lt;/p></description></item><item><title>Delete newlines in a pipe</title><link>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</link><pubDate>Fri, 25 Apr 2025 11:59:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given &lt;code>{cmd}&lt;/code> that emits lots of blank lines, delete all
blank lines in a pipe.&lt;/p>
&lt;p>The following is a very elegant (and easy to remember!) way to do so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | awk &lt;span style="color:#98c379">&amp;#39;NF&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the LLM:&lt;/p>
&lt;blockquote>
&lt;p>When you use awk &amp;lsquo;NF&amp;rsquo;, it evaluates to true for lines where NF is greater than
zero—that is, lines that are not empty or do not consist solely of whitespace.
This makes it a concise way to filter out blank lines.&lt;/p>
&lt;/blockquote>
&lt;p>Other ways with classic tools and regular expressions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | grep -v &lt;span style="color:#98c379">&amp;#39;^[[:space:]]*$&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | sed -e &lt;span style="color:#98c379">&amp;#39;/^[[:space:]]*$/d&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>They are just a bit harder to remember.&lt;/p></description></item><item><title>The LLM journey</title><link>https://perrotta.dev/2025/04/the-llm-journey/</link><pubDate>Thu, 24 Apr 2025 03:14:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-llm-journey/</guid><description>&lt;p>&lt;em>Narrator&amp;rsquo;s voice&lt;/em>: &lt;a href="https://harper.blog/2025/04/17/an-llm-codegen-heros-journey/">An LLM Codegen Hero&amp;rsquo;s Journey
&lt;/a> by Harper Reed.&lt;/p>
&lt;p>I don&amp;rsquo;t have anything to add, go read Harper&amp;rsquo;s post.&lt;/p></description></item><item><title>HashiCorp Vault from helm values</title><link>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</link><pubDate>Wed, 23 Apr 2025 16:56:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Populate HashiCorp Vault with select keys from &lt;code>helm get values&lt;/code> for a given chart release.&lt;/p>
&lt;p>The following script works:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e"># Usage: Tweak entries as needed and then run the script.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># It&amp;#39;s an associative array: a dictionary, a hash map&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Key: the entry to be populated in vault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Value: a `jq` JSON selector from the output of `helm get values -o json`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">declare&lt;/span> -A &lt;span style="color:#e06c75">entries&lt;/span>&lt;span style="color:#56b6c2">=(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.accessKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.accessKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.secretKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.secretKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiPassword&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiPassword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiUser&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiUser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.adminpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.adminpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.password&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.ropass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.ropass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.rwpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.rwpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.token&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.verificationToken&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.verificationToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main&lt;span style="color:#56b6c2">()&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> entry in &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>!entries[@]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$entry&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">entries&lt;/span>[&lt;span style="color:#e06c75">$entry&lt;/span>]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">content&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>helm get values -n tools mychart -o json | jq -r &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$value&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Populating vault &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379"> from helm value &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">: &lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$FIRST&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#98c379">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv put -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv patch -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv get -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm ~/.vault-token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>FIRST&lt;/code>: In the first time we need to create an entry (&lt;code>vault kv put&lt;/code>), in the
second time we need to patch it (&lt;code>vault kv patch&lt;/code>).&lt;/p></description></item><item><title>Github PRs: do not submit</title><link>https://perrotta.dev/2025/04/github-prs-do-not-submit/</link><pubDate>Wed, 23 Apr 2025 12:47:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-prs-do-not-submit/</guid><description>&lt;p>Sometimes you want to send a pull request for review to your teammates and want
to ensure they do not accidentally prematurely merge it.&lt;/p>
&lt;p>One way to do so is to note in the commit message / PR description that it
should not be merged. Nonetheless, humans don&amp;rsquo;t always read instructions, our
attention span is quite limited.&lt;/p>
&lt;p>It would be more robust to employ a mechanism to prevent the PR from being
submitted, even if someone attempts to do so.&lt;/p>
&lt;p>You could leave the PR as a draft. However, this could have the side effect that
not all CI checks may run. You don&amp;rsquo;t want surprising failures later on, that
could slow you down.&lt;/p>
&lt;p>I like the following approach, which is partly inspired by an internal presubmit
check at Google: write &amp;ldquo;DO NOT SUBMIT&amp;rdquo; in the PR title, and have a CI check
(github action&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>) fail in this situation. Mark the action as
&lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks">required&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>If status checks are required for a repository, the required status checks
must pass before you can merge your branch into the protected branch. For more
information, see About protected branches.&lt;/p>
&lt;/blockquote>
&lt;p>Use the following github action (&lt;code>.github/workflows/pr-checks.yml&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">name&lt;/span>: PR Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">permissions&lt;/span>: read-all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pull_request&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">types&lt;/span>: [opened, edited, synchronize]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">concurrency&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">group&lt;/span>: ${{ github.workflow }}-${{ github.ref }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cancel-in-progress&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pr-checks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">runs-on&lt;/span>: ubuntu-latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">&amp;#39;&amp;#34;DO NOT SUBMIT&amp;#34; check&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">PR_TITLE&lt;/span>: ${{ github.event.pull_request.title }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">run&lt;/span>: |&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;Title: $PR_TITLE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> if [[ &amp;#34;${PR_TITLE,,}&amp;#34; =~ &amp;#34;do not submit&amp;#34; ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;::error::PR title &amp;#39;$PR_TITLE&amp;#39; must not contain &amp;#39;DO NOT SUBMIT&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> fi&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>${PR_TITLE,,}&lt;/code> converts the PR title to lowercase so that the comparison is
case insensitive.&lt;/p>
&lt;p>&lt;code>=~ &amp;quot;do not submit&amp;quot;&lt;/code> is a regular expression to check if the title includes the
&amp;ldquo;DO NOT SUBMIT&amp;rdquo; string.&lt;/p>
&lt;p>With the action in place, I can just update my PR title by prepending &lt;code>DO NOT SUBMIT:&lt;/code> to it. The prefix doubles down as a documentation of my intent.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I don&amp;rsquo;t think I&amp;rsquo;ll ever remember the difference between a github action
and a github workflow. One is reusable, the other one is not. I always
forget which one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Alpine Linux: the maintainer workflow</title><link>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</link><pubDate>Sun, 20 Apr 2025 15:12:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</guid><description>&lt;p>I maintain &lt;a href="https://pkgs.alpinelinux.org/packages?name=&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=Thiago+Perrotta">a couple of
packages&lt;/a>
on Alpine Linux.&lt;/p>
&lt;p>Every now and then, a new software version is released, and it&amp;rsquo;s my duty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> as an
active package maintainer to update my packages.&lt;/p>
&lt;p>The typical workflow looks like the following.&lt;/p>
&lt;p>First I get an email notification from &amp;ldquo;Alpine Package DB&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Dear Thiago Perrotta&lt;/p>
&lt;p>This is an automatic message send from pkgs.alpinelinux.org
One or more of your aports have been flagged out of date based on
Anitya monitoring system &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/p>
&lt;p>argocd current: 2.14.2-r1 new: 2.14.9&lt;/p>
&lt;p>To update the package you can use our helper script:&lt;/p>
&lt;p>abump aport-version&lt;/p>
&lt;p>If the provided information is incorrect, please let us know on IRC
or &lt;a href="mailto:alpine-infra@alpinelinux.org">alpine-infra@alpinelinux.org&lt;/a>. Thanks!&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s important not to &lt;a href="https://opensource.com/business/15/12/avoid-burnout-live-happy">burn oneself
out&lt;/a>.&lt;/p>
&lt;p>I treat these notifications as an FYI. They &lt;em>are not&lt;/em> prompts to make me
immediately go and update the packages&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. For packages with frequent updates,
like &lt;code>argocd&lt;/code>, I&amp;rsquo;ll let a few patch versions accumulate before I take action.
Other times it is handy to batch package upgrades together so to do them all at
once. I use my personal judgment here. At the very least, this email will
trigger a TODO in my task list, so that it will not be forgotten. &lt;em>At some
point&lt;/em> it will be taken care of.&lt;/p>
&lt;p>Once I am ready to update the package, I &lt;code>ssh&lt;/code> to my Alpine Linux server. There
is absolutely no requirement to update alpine linux packages from alpine linux,
but it&amp;rsquo;s the most convenient to do, and I already have an alpine linux system
anyway.&lt;/p>
&lt;p>Then &lt;code>cd aports/&lt;/code>. This is a local git clone of the &lt;a href="https://gitlab.alpinelinux.org/alpine/aports">aports
tree&lt;/a>
(&lt;a href="https://wiki.alpinelinux.org/wiki/Aports_tree">wiki&lt;/a>).&lt;/p>
&lt;p>&lt;code>git pull&lt;/code>. I tend to clean up after myself, so the last branch is likely
already &lt;code>master&lt;/code>. But, if not, then &lt;code>git reset --hard &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git pull&lt;/code>. Amen.&lt;/p>
&lt;p>Now the real fun starts. And it&amp;rsquo;s surprisingly quick and simple, it feels like
cheating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% abump argocd-2.14.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will update the version and checksums in the corresponding &lt;code>APKBUILD&lt;/code> and
trigger a package build.&lt;/p>
&lt;p>It&amp;rsquo;s sensible to check the package release notes or changelog to find potential
incompatibilities and/or updates to the build process. It&amp;rsquo;s also sensible to
look at the package diffs to inspect for potential malware, which is becoming
increasingly more common these days in open source packages. &amp;ldquo;Secure your supply
chain&amp;rdquo;, as they say it.&lt;/p>
&lt;p>If the build completes successfully, create a new branch (&lt;code>git nb argocd&lt;/code>),
commit, push it (&lt;code>git pushm&lt;/code>), then create a merge request (MR) on
&lt;a href="https://gitlab.alpinelinux.org/">GitLab&lt;/a>. I normally use the Web UI to do so,
but it&amp;rsquo;s also possible to do it with the CLI. A link to create the MR is printed
to stdout upon pushing the branch, which makes the process even easier.&lt;/p>
&lt;p>It could happen that the MR fails CI for some architectures (even if it works
locally on my machine™). These errors need to be dealt with.&lt;/p>
&lt;p>The commit message must follow a certain style. I have a pre-commit script set
up that does it for me. It is typically in this form:&lt;/p>
&lt;pre tabindex="0">&lt;code>testing/argocd: upgrade to 2.14.9
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a rule: only one package per merge request.&lt;/p>
&lt;p>If there are more packages to upgrade, I run &lt;code>git bd&lt;/code> (&amp;ldquo;branch delete&amp;rdquo;) and then
restart this process. It&amp;rsquo;s quite manageable, as I don&amp;rsquo;t maintain a lot of
packages. Perhaps it could be further automated if there were more packages
and/or if the package upgrades were more frequent.&lt;/p>
&lt;p>The final MR looks like the following:
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/83026">!83026&lt;/a>.&lt;/p>
&lt;p>Now I sit tight and wait for approval.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On a &lt;a href="https://xkcd.com/2347/">&lt;em>best-effort&lt;/em>&lt;/a> basis.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Unless it&amp;rsquo;s a security risk or incident (e.g. whenever there&amp;rsquo;s a CVE
associated with it).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub: vacation mode</title><link>https://perrotta.dev/2025/04/github-vacation-mode/</link><pubDate>Sun, 13 Apr 2025 01:02:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-vacation-mode/</guid><description>&lt;p>&lt;a href="https://github.blog/changelog/2019-01-08-set-your-status/">Since 2019&lt;/a> GitHub
allows setting a status on your profile page:&lt;/p>
&lt;blockquote>
&lt;p>You can now set your status on GitHub! Use your status to share specific
information with only your organization, or share a status with all of GitHub!
Optionally, you can indicate that you&amp;rsquo;re busy so your collaborators can
determine whether to mention someone else for a quicker response.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/personalizing-your-profile#setting-a-status">Documentation&lt;/a>.
&lt;strong>TL;DR&lt;/strong>: The most practical use case is to set your profile to &amp;ldquo;Busy&amp;rdquo; whenever
you take time off (whether it&amp;rsquo;s vacation or sick leave).&lt;/p>
&lt;p>It&amp;rsquo;s possible to limit the status visibility to a single organization, so that
it is not publicly visible.&lt;/p>
&lt;p>It&amp;rsquo;s also possible to automatically clear the status after a given period (e.g.
one week).&lt;/p>
&lt;p>Why is this useful?&lt;/p>
&lt;ul>
&lt;li>signal to your teammates that you&amp;rsquo;re OOO, without leaving then wondering why
you&amp;rsquo;re taking forever to review their PRs&lt;/li>
&lt;li>prevent team assignments in PR reviews to automatically select you when you&amp;rsquo;re
OOO:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>If you select the &amp;ldquo;Busy&amp;rdquo; option, when people @mention your username, assign
you an issue or pull request, or request a pull request review from you, a
note next to your username will show that you&amp;rsquo;re busy. You will also be
excluded from automatic review assignment for pull requests assigned to any
teams you belong to. For more information, see Managing code review settings
for your team.&lt;/p>
&lt;/blockquote></description></item><item><title>Pipe to Claude</title><link>https://perrotta.dev/2025/04/pipe-to-claude/</link><pubDate>Wed, 09 Apr 2025 17:56:05 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/pipe-to-claude/</guid><description>&lt;p>One of the most effective ways to resolve random software development problems
in 2025:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#e5c07b">command&lt;/span> that emits warnings or errors&lt;span style="color:#56b6c2">}&lt;/span> | claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>claude&lt;/code> is Anthropic&amp;rsquo;s &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
CLI LLM agent tool:&lt;/p>
&lt;blockquote>
&lt;p>Learn about Claude Code, an agentic coding tool made by Anthropic. Currently
in beta as a research preview.&lt;/p>
&lt;/blockquote>
&lt;p>There is a series of little / simple tasks I&amp;rsquo;ve been procrastinating (e.g.
linter issues) that can be quickly resolved with the assistance of a LLM tool.&lt;/p>
&lt;p>There&amp;rsquo;s no silver bullet here: all changes need to be properly reviewed and
tested. Nonetheless, even if the tool is wrong 50% of the time, it&amp;rsquo;s still
faster for me to use the LLM tool as an initial suggestion than having to
do the research myself from scratch.&lt;/p></description></item><item><title>Github Actions: ubuntu-latest tools</title><link>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</link><pubDate>Wed, 09 Apr 2025 01:00:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</guid><description>&lt;p>Which tools are installed in the Github Actions environment for &lt;code>ubuntu-latest&lt;/code>?&lt;/p>
&lt;p>&lt;a href="https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md">This
repository&lt;/a>
has the answer.&lt;/p></description></item><item><title>Against names</title><link>https://perrotta.dev/2025/04/against-names/</link><pubDate>Sun, 06 Apr 2025 12:54:04 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/against-names/</guid><description>&lt;p>&lt;a href="https://steveklabnik.com/writing/against-names/">Against Names&lt;/a> by Steve
Klabnik:&lt;/p>
&lt;blockquote>
&lt;p>Specifically, if naming things is so hard… why do we insist on doing it all
the time?&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been meaning to convert to &lt;a href="https://github.com/jj-vcs/jj">&lt;code>jj&lt;/code>&lt;/a>. The post
has an extra argument to do so.&lt;/p></description></item><item><title>First Alpine Linux package in Community</title><link>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</link><pubDate>Tue, 01 Apr 2025 14:27:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</guid><description>&lt;p>How wholesome: someone sent a MR (Merge Request)
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/82047">!82047&lt;/a> in
&lt;code>alpine/aports&lt;/code> with the &lt;a href="https://github.com/google/yamlfmt">&lt;code>yamlfmt&lt;/code>&lt;/a> package
I maintain, moving it from &lt;code>testing/&lt;/code> to &lt;code>community/&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This means the package will be included in the next release of Alpine (3.22) as
part of its official repositories (unlike &amp;ldquo;testing&amp;rdquo;, which is only included in
&amp;ldquo;edge&amp;rdquo;).&lt;/p>
&lt;p>&lt;strong>In other words&lt;/strong>: This is the first time a package I maintain will make it to the
official repositories of a Linux distro I like!&lt;/p>
&lt;p>&lt;strong>Next milestone&lt;/strong>: Follow suit with a project I maintain.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I did not initiate this: it has just happened organically / spontaneously.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>AppleScript discoverability: more Amphetamine</title><link>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</link><pubDate>Tue, 01 Apr 2025 13:32:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</guid><description>&lt;p>Previously: &lt;a href="https://perrotta.dev/2025/03/amphetamine-keep-awake/">Amphetamine: Keep awake&lt;/a>.&lt;/p>
&lt;p>The previous setup would turn my external monitor off upon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span> &lt;span style="color:#c678dd">to&lt;/span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I needed to modify it to issue that command only when the session is not yet
active.&lt;/p>
&lt;p>Via &lt;a href="https://apple.stackexchange.com/questions/46521/how-do-i-find-out-the-applescript-commands-available-for-a-particular-app">Apple Stack
Exchange&lt;/a>
I noticed I could open the &lt;code>Script Editor.app&lt;/code>, then &lt;code>File &amp;gt; Open Dictionary...&lt;/code>, then select &lt;code>Amphetamine.app&lt;/code>.&lt;/p>
&lt;p>This would open a new window with a list of all available AppleScript commands
to my disposal.&lt;/p>
&lt;p>I quickly spotted one called &lt;code>session is active&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Returns boolean - true or false - indicating whether there is an active session&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;that&amp;rsquo;s exactly what I needed!&lt;/p>
&lt;p>Now I just needed to combine &lt;code>if&lt;/code> + &lt;code>session is active&lt;/code> + &lt;code>start a new session&lt;/code>.&lt;/p>
&lt;p>I don&amp;rsquo;t know AppleScript, and I didn&amp;rsquo;t intend to specialize on it now. In the
old days, I would have used a search engine and/or consulted a Stack Exchange
website to figure out what is the &lt;code>if&lt;/code> syntax. Or maybe even have introspected
the AppleScript documentation / manual.&lt;/p>
&lt;p>But we&amp;rsquo;re in 2025.&lt;/p>
&lt;p>I write &lt;code>llm applescript if &amp;quot;session is active&amp;quot; tell application to start new session&lt;/code> in Chrome. &lt;code>llm&lt;/code> is aliased to
&lt;code>https://chatgpt.com/?hints=search&amp;amp;ref=ext&amp;amp;q=%s&lt;/code>. ChatGPT Search happily tells
me what the correct syntax is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">not&lt;/span> (&lt;span style="color:#e06c75">session&lt;/span> &lt;span style="color:#56b6c2">is&lt;/span> &lt;span style="color:#e06c75">active&lt;/span>) &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">if&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">tell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I follow up with &lt;code>inline in osascript&lt;/code>, which results in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exactly what I was looking for.&lt;/p>
&lt;p>Moments later there&amp;rsquo;s a new commit in my corp dotfiles:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git show b306e31597b63007bb8c3aadb56340cdb6f52703
commit b306e31597b63007bb8c3aadb56340cdb6f52703
Author: Thiago Perrotta &amp;lt;tbperrotta@gmail.com&amp;gt;
Date: Tue Apr 1 13:31:33 2025 +0200

 better amphetamine

diff --git profile/.profile.d/functions_corp.sh profile/.profile.d/functions_corp.sh
index e58333a..365c176 100644
--- profile/.profile.d/functions_corp.sh
+++ profile/.profile.d/functions_corp.sh
@@ -19,7 +19,7 @@ redacted_login() {
 # Run at the start of the work day
 prodaccess() {
 echo &amp;#34;--&amp;gt; Amphetamine&amp;#34;
- osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;
+ osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>llm: remove stored key</title><link>https://perrotta.dev/2025/03/llm-remove-stored-key/</link><pubDate>Fri, 28 Mar 2025 14:09:41 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/llm-remove-stored-key/</guid><description>&lt;p>I was just trying &lt;a href="https://simonwillison.net/">Simon Willison&lt;/a>&amp;rsquo;s excellent CLI
&lt;a href="https://llm.datasette.io/en/stable/index.html">llm&lt;/a> tool:&lt;/p>
&lt;blockquote>
&lt;p>A CLI utility and Python library for interacting with Large Language Models,
both via remote APIs and models that can be installed and run on your own
machine.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s straightforward to set API Keys with it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wanted to set one for &lt;a href="https://www.anthropic.com/claude">Anthropic Claude&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But it turns out the correct name is &lt;code>anthropic&lt;/code>, not &lt;code>claude&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> anthropic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I wanted to clean up the &lt;code>claude&lt;/code> entry.&lt;/p>
&lt;p>Surprisingly, there&amp;rsquo;s no &lt;code>llm key remove&lt;/code> or &lt;code>llm key delete&lt;/code> command!
&lt;a href="https://llm.datasette.io/en/stable/help.html#llm-keys-help">Docs&lt;/a>.&lt;/p>
&lt;p>The workaround: edit the &lt;code>keys.json&lt;/code> file directly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output above is from macOS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e06c75">$EDITOR&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>llm keys path&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>keys.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;claude&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove &lt;code>claude&lt;/code> from it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And it&amp;rsquo;s done! Verify with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anthropic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Amphetamine: Keep awake</title><link>https://perrotta.dev/2025/03/amphetamine-keep-awake/</link><pubDate>Fri, 28 Mar 2025 00:14:32 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/amphetamine-keep-awake/</guid><description>&lt;p>&lt;a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The most awesome keep-awake app ever created for macOS. Amphetamine can keep
your Mac, and optionally its display(s), awake through a super simple on/off
switch, or automatically through easy-to-configure Triggers. Amphetamine is
extremely powerful and includes advanced features for those who need them, yet
remains intuitive and easy-to-use for those who don&amp;rsquo;t need all of the bells
and whistles.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s like &lt;a href="https://www.caffeine-app.net/">Caffeine&lt;/a> (or one of its dozen
clones), but better.&lt;/p>
&lt;p>Here&amp;rsquo;s how I use it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>on my personal laptop, whenever I am streaming a movie or a TV show (e.g. via
&lt;a href="https://jellyfin.org/">jellyfin&lt;/a>, so that it doesn&amp;rsquo;t cut off the streaming in
the middle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on my work computer, as soon as I start the work day, so that the VPN stays
connected for the whole day, as well as my SSH sessions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Upon launching it a system tray icon appears. A left-click opens up its
contextual menu, exposing lots of knobs and details. A right-click toggles it on
/ off.&lt;/p>
&lt;p>I configure the toggle so that it stays awake for a default of 4 hours for my
personal laptop, and 8-10 hours for my work computer (=the duration of an usual
work day).&lt;/p>
&lt;p>If you don&amp;rsquo;t specify a limit then it stays awake indefinitely, which is
counterproductive: (i) spending more energy and battery than necessary and (ii)
from an operational security perspective, it &lt;em>should&lt;/em> ideally self-lock at some
point, in case you forget to do so.&lt;/p>
&lt;p>I just care about keeping internet and sessions connectivity alive, but it&amp;rsquo;s
also possible to configure it to keep the display on.&lt;/p>
&lt;p>For bonus productivity, configure it to always launch at login, so that
activating it is just one (right) click away.&lt;/p>
&lt;p>Apparently I activated it more than 180 times in my personal laptop, effectively
keeping it awake for more than 24 days. At work, more than 250 sessions for more
than 8 days&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>When writing this post, I just learned that I can activate it via
&lt;a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can augment my &lt;a href="https://perrotta.dev/2024/10/prodaccess/">&lt;code>prodaccess&lt;/code>&lt;/a> script
with that.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>There is definitely something odd with these numbers.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>pre-commit: make a hook opt-in</title><link>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</link><pubDate>Thu, 27 Mar 2025 13:22:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</guid><description>&lt;p>Recently we added the following hook to our &lt;a href="https://pre-commit.com">pre-commit&lt;/a>
setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be triggered with &lt;code>pre-commit run --all-files helm-lock&lt;/code>.&lt;/p>
&lt;p>It turned out to be an issue because not every developer has read-only access
to our helm repositories.&lt;/p>
&lt;p>The workaround was to make this hook opt-in.&lt;/p>
&lt;p>We can do so by adding it to the &lt;a href="https://pre-commit.com/#confining-hooks-to-run-at-certain-stages">manual stage&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - manual
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be then invoked like this: &lt;code>pre-commit run --all-files helm-lock --hook-stage manual&lt;/code>.&lt;/p>
&lt;p>An alternative could have been to instruct people to set
&lt;a href="https://pre-commit.com/#temporarily-disabling-hooks">&lt;code>SKIP=helm-lock&lt;/code>&lt;/a>, however
&lt;a href="https://world.hey.com/jason/software-defaults-15955a8e">defaults&lt;/a> are powerful.&lt;/p></description></item><item><title>1password CLI + direnv integration</title><link>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</link><pubDate>Wed, 26 Mar 2025 14:15:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</guid><description>&lt;p>Let&amp;rsquo;s stay you&amp;rsquo;re working on a terraform module that has a sensitive variable
named &lt;code>api_key&lt;/code> in &lt;code>variables.tf&lt;/code>.&lt;/p>
&lt;p>When running &lt;code>terraform apply&lt;/code>, you&amp;rsquo;ll need to supply its value. Every. Single.
Time.&lt;/p>
&lt;p>We can make it persistent by setting &lt;code>export TF_VAR_api_key={my value}&lt;/code>.
However this is only persistent within the current shell.&lt;/p>
&lt;p>To make it persistent across multiple sessions, create a &lt;code>.envrc&lt;/code> file at the
root module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">={&lt;/span>my value&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then source it: &lt;code>source ~/.envrc&lt;/code>. Now you have to source it every single time
you open a new shell.&lt;/p>
&lt;p>We can use &lt;a href="http://direnv.net/">&lt;code>direnv&lt;/code>&lt;/a> to do so automatically. It has been
&lt;a href="https://perrotta.dev/2022/01/direnv-automate-your-environment-variables/">previously covered&lt;/a>. But&amp;hellip;now we have
a secret stored as plain text in our filesystem.&lt;/p>
&lt;p>We could store it in a more secure place, like a password manager, and then have
a mechanism automatically fetch its value.&lt;/p>
&lt;h2 id="first-approach">First approach&lt;/h2>
&lt;p>When using 1Password, the &lt;a href="https://developer.1password.com/docs/cli/">1Password
CLI&lt;/a> is such a mechanism.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>op run --no-masking -- op &lt;span style="color:#e5c07b">read&lt;/span> &lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can fetch the secret reference path from 1Password:
&lt;a href="https://developer.1password.com/docs/cli/secret-references/">docs&lt;/a>. Click &amp;ldquo;Copy
Secret Reference&amp;rdquo; in the corresponding entry item.&lt;/p>
&lt;h2 id="second-approach">Second approach&lt;/h2>
&lt;p>The above is one possibility, and it works flawlessly, but there&amp;rsquo;s a second
approach that uses &lt;code>op run&lt;/code> alone with a secret reference that is dynamically
replaced.&lt;/p>
&lt;p>Create an &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the &lt;code>.envrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>terraform apply&lt;/code> via &lt;code>op run&lt;/code>, as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>op run --env-file&lt;span style="color:#56b6c2">=&lt;/span>.env -- terraform apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/">https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nshipster.com/1password-cli/">https://nshipster.com/1password-cli/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Disclosing AI in pull requests</title><link>https://perrotta.dev/2025/03/disclosing-ai-in-pull-requests/</link><pubDate>Wed, 26 Mar 2025 13:07:52 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/disclosing-ai-in-pull-requests/</guid><description>&lt;p>As we start to draft more PRs with the help of AI, I am thinking to adopt a
subtle approach to signal that all (or most) of a given PR was created with the
help of AI.&lt;/p>
&lt;p>Perhaps by adding a &lt;code>:robot:&lt;/code> 🤖 emoji in the commit message.&lt;/p>
&lt;p>&lt;a href="https://api.github.com/emojis">GitHub Markdown&lt;/a> will happily render &lt;code>:robot:&lt;/code>.&lt;/p>
&lt;p>I could also add an &lt;a href="https://perrotta.dev/2025/03/create-a-git-commit-with-multiple-contributors/">attribution footer&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;Co-authored-by: Claude &amp;lt;noreply@anthropic.com&amp;gt;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>It&amp;rsquo;s just a bit more verbose.&lt;/p>
&lt;p>Have you thought about this?&lt;/p></description></item><item><title>maccy: pin items</title><link>https://perrotta.dev/2025/03/maccy-pin-items/</link><pubDate>Mon, 24 Mar 2025 13:21:46 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/maccy-pin-items/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2023/12/maccy-macos-clipboard-manager/">Previously&lt;/a>.&lt;/p>
&lt;p>Sometimes it&amp;rsquo;s useful to have certain code snippets be easily accessible from
the clipboard manager.&lt;/p>
&lt;p>As I use &lt;a href="https://github.com/p0deje/Maccy">Maccy&lt;/a>, I figured I should leverage
its built-in pinning feature to do so.&lt;/p>
&lt;p>It&amp;rsquo;s not intuitive &lt;a href="https://github.com/p0deje/Maccy?tab=readme-ov-file#usage">how to do
it&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>first, focus an existing clipboard entry&lt;/li>
&lt;li>then press &lt;code>OPTION (⌥) + P&lt;/code> (&amp;ldquo;p&amp;rdquo; for &amp;ldquo;pinning&amp;rdquo;)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>The item will be moved to the top with a random but permanent keyboard
shortcut. To unpin it, press &lt;code>OPTION (⌥) + P&lt;/code> again.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Pros&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>no need to keep a text editor (or notes app) opened with temporary clipboard
contents to keep copying from (=less overhead)&lt;/li>
&lt;li>no need to keep digging the clipboard manager history to find the same entry
over and over again&lt;/li>
&lt;/ul>
&lt;p>This workflow is decent for temporary entries.
For semi-permanent ones, I should
look into &lt;a href="https://espanso.org/">Espanso&lt;/a> at some point. For now, &lt;a href="https://perrotta.dev/2025/01/raycast-snippets/">Raycast
Snippets&lt;/a> fills in this role.&lt;/p></description></item><item><title>pre-commit: no-commit-to-branch hook</title><link>https://perrotta.dev/2025/03/pre-commit-no-commit-to-branch-hook/</link><pubDate>Fri, 21 Mar 2025 16:33:04 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-no-commit-to-branch-hook/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: prevent developers from committing directly to master (or
main) in git.&lt;/p>
&lt;p>You can do so server-side e.g. on GitHub via &lt;a href="https://stackoverflow.com/questions/46146491/prevent-pushing-to-master-on-github">branch protection
rules&lt;/a>.&lt;/p>
&lt;p>How to address it client-side though?&lt;/p>
&lt;p>Countless times have I accidentally committed to master locally without creating
a branch first, only to have &lt;code>git push&lt;/code> fail.&lt;/p>
&lt;p>I wanted &lt;code>git commit&lt;/code> to fail early – this is better than having &lt;code>git push&lt;/code> fail
later.&lt;/p>
&lt;p>&lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a> provides an out-of-the-box hook called
&lt;a href="https://github.com/pre-commit/pre-commit-hooks">&lt;code>no-commit-to-branch&lt;/code>&lt;/a>, which
addresses exactly this use case.&lt;/p>
&lt;p>I adopted it in our &lt;code>.pre-commit-config.yaml&lt;/code>. It worked as intended locally.&lt;/p>
&lt;p>There was a problem though: the pre-commit CI pipeline / workflow in main /
master would fail, because&amp;hellip;errrr, there&amp;rsquo;s a commit there. When you think of
it, it&amp;rsquo;s working as intended, even though it comes across as unexpected.&lt;/p>
&lt;p>The &lt;a href="https://github.com/antonbabenko/pre-commit-terraform/pull/748/">solution&lt;/a>:
skip the hook in CI. Which is also the &lt;a href="https://github.com/pre-commit/pre-commit-hooks/issues/954#issuecomment-1893632616">official
recommendation&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">SKIP&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>no-commit-to-branch pre-commit run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wish this would be done out-of-the-box.&lt;/p></description></item><item><title>pre-commit: pin dependencies with --freeze</title><link>https://perrotta.dev/2025/03/pre-commit-pin-dependencies-with--freeze/</link><pubDate>Thu, 20 Mar 2025 18:12:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-pin-dependencies-with--freeze/</guid><description>&lt;p>&lt;strong>Today I learned&lt;/strong>: &lt;a href="https://pre-commit.com/#updating-hooks-automatically">&lt;code>pre-commit autoupdate&lt;/code>&lt;/a> has a
&lt;code>--freeze&lt;/code> option that replaces git tags with SHAs (hashes) on upstream hooks
(dependencies).&lt;/p>
&lt;p>Here&amp;rsquo;s how to adopt them, using this blog as an example:&lt;/p>
&lt;pre tabindex="0">&lt;code>% pre-commit autoupdate --jobs $(nproc) --freeze
[https://github.com/lalten/check-gha-pinning] updating v1.3.0 -&amp;gt; v1.3.0 (frozen)
[https://github.com/google/keep-sorted] updating v0.6.0 -&amp;gt; v0.6.0 (frozen)
[https://github.com/sirosen/texthooks] updating 0.6.8 -&amp;gt; 0.6.8 (frozen)
[https://github.com/google/yamlfmt] updating v0.16.0 -&amp;gt; v0.16.0 (frozen)
[https://github.com/pre-commit/pre-commit-hooks] updating v5.0.0 -&amp;gt; v5.0.0 (frozen)
[https://github.com/shssoichiro/oxipng] updating v9.1.3 -&amp;gt; v9.1.4 (frozen)
[https://github.com/codespell-project/codespell] updating v2.4.1 -&amp;gt; v2.4.1 (frozen)
[https://github.com/gitleaks/gitleaks] updating v8.23.3 -&amp;gt; v8.24.0 (frozen)
&lt;/code>&lt;/pre>&lt;p>The resulting diff (redacted one of the hooks for brevity):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>diff --git .pre-commit-config.yaml .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index 30aac4a2..841eac9b 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -23,7 +23,7 @@ repos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-hooks-apply
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-useless-excludes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/pre-commit/pre-commit-hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v5.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-executables-have-shebangs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@@ -41,27 +41,27 @@ repos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -D .codespell-dictionary.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -I .codespell-ignore-words.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/gitleaks/gitleaks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v8.23.3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: f565e4e10c6c8081e374235bb4e4bcb8c0c2fa63 # frozen: v8.24.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: gitleaks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/google/keep-sorted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v0.6.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: df93c2722b6126556183749880f16a9beb664bb4 # frozen: v0.6.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: keep-sorted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/google/yamlfmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v0.16.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: ac76bb931851dda64a55ef746ca9b8bb41634b98 # frozen: v0.16.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: yamlfmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/lalten/check-gha-pinning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v1.3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: 225deee5dff16fae532978007ce6e37045e14c68 # frozen: v1.3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-gha-pinning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/shssoichiro/oxipng
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v9.1.3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: bc8c36456858fe4678460bdea520a4ec0bc50dc4 # frozen: v9.1.4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: oxipng
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/sirosen/texthooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: 0.6.8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: 13a42592dd28b6b688bb1c23fa769234984d4ca7 # frozen: 0.6.8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: fix-ligatures
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: fix-smartquotes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is useful to mitigate supply-chain attacks such as the recent
&lt;a href="https://www.wiz.io/blog/github-action-tj-actions-changed-files-supply-chain-attack-cve-2025-30066">&lt;code>tj-actions/changed-files&lt;/code>&lt;/a>
one.&lt;/p></description></item><item><title>git: prefer switch over checkout</title><link>https://perrotta.dev/2025/03/git-prefer-switch-over-checkout/</link><pubDate>Thu, 20 Mar 2025 13:29:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/git-prefer-switch-over-checkout/</guid><description>&lt;p>&lt;a href="https://stackoverflow.com/questions/57265785/whats-the-difference-between-git-switch-and-git-checkout-branch#57266005">Preliminaries&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>What&amp;rsquo;s the difference between &amp;lsquo;git switch&amp;rsquo; and &amp;lsquo;git checkout&amp;rsquo; &lt;branch>?&lt;/p>
&lt;p>Git 2.23 introduces a new command &lt;code>git switch&lt;/code>. After reading the
documentation, it seems pretty much the same as &lt;code>git checkout &amp;lt;branchname&amp;gt;&lt;/code>.
What is the difference or use case?&lt;/p>
&lt;p>&lt;code>git switch&lt;/code> can now be used to change branches, as git checkout &lt;branchname>
does&lt;/p>
&lt;p>People are confused by these different ways to use git checkout, as you can
see from the many questions regarding git checkout here on Stack Overflow. Git
developers seem to have taken this into account.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://git-scm.com/docs/git-switch/2.23.0">&lt;code>git switch&lt;/code>&lt;/a> is the idiomatic way
to switch branches these days. &lt;code>git checkout&lt;/code> can be ambiguous; not only it
switches branches, it can also revert/reset files and directories.&lt;/p>
&lt;p>I unexpectedly hit this ambiguity today.&lt;/p>
&lt;p>I have this &lt;code>git bd&lt;/code> alias:&lt;/p>
&lt;pre tabindex="0">&lt;code>% grep -E &amp;#39;(bd|default\b)&amp;#39; ~/.gitconfig
 bd = !branch=&amp;#34;$(git branch --show-current)&amp;#34; &amp;amp;&amp;amp; git default &amp;amp;&amp;amp; git branch -D &amp;#34;${branch:-$1}&amp;#34;
 default = !git checkout main &amp;amp;&amp;gt;/dev/null || git checkout master
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;which is short for &amp;ldquo;branch delete&amp;rdquo;.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>: I am working on branch &lt;code>thiagowfx/my-branch&lt;/code>, then the commit/PR is
eventually merged. My next action is &lt;code>git bd&lt;/code>, which a) switches to the default
branch (main or master these days) and b) deletes the previous branch.&lt;/p>
&lt;p>This works well most of the time.&lt;/p>
&lt;p>Today, when
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/81638">bumping&lt;/a>
the &lt;code>yamlfmt&lt;/code>
&lt;a href="https://pkgs.alpinelinux.org/package/edge/testing/x86_64/yamlfmt">package&lt;/a> for
Alpine Linux, I was in the &lt;code>yamlfmt&lt;/code> branch and then ran &lt;code>git bd&lt;/code>.&lt;/p>
&lt;p>That didn&amp;rsquo;t do anything. Here&amp;rsquo;s the problem:&lt;/p>
&lt;pre tabindex="0">&lt;code>% tree -L 1
.
├── CODINGSTYLE.md
├── COMMITSTYLE.md
├── README.md
├── community
├── main
├── scripts
└── testing
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;there&amp;rsquo;s a &lt;code>main/&lt;/code> directory in the repository root.&lt;/p>
&lt;p>Thus &lt;code>git default&lt;/code>, which calls &lt;code>git checkout main&lt;/code>, treats &lt;code>main&lt;/code> as a
directory in this context, instead of a branch.&lt;/p>
&lt;p>One solution is to call &lt;code>git checkout main --&lt;/code> instead, which explicitly denotes
&lt;code>main&lt;/code> as a branch&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. However, that&amp;rsquo;s hard to remember and it&amp;rsquo;s also
confusing. It&amp;rsquo;s easier to simply do &lt;code>git switch main&lt;/code>.&lt;/p>
&lt;p>So here&amp;rsquo;s my updated alias, which works as originally intended:&lt;/p>
&lt;pre tabindex="0">&lt;code>% grep -E &amp;#39;(bd|default\b)&amp;#39; ~/.gitconfig
 bd = !branch=&amp;#34;$(git branch --show-current)&amp;#34; &amp;amp;&amp;amp; git default &amp;amp;&amp;amp; git branch -D &amp;#34;${branch:-$1}&amp;#34;
 default = !git switch main &amp;amp;&amp;gt;/dev/null || git switch master
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>To explicitly denote it as a directory / file, call &lt;code>git checkout -- main&lt;/code>
instead. I use this variant often to revert file modifications back to the
original state.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>My packaging policy</title><link>https://perrotta.dev/2025/03/my-packaging-policy/</link><pubDate>Thu, 20 Mar 2025 13:10:52 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/my-packaging-policy/</guid><description>&lt;p>&lt;a href="https://whynothugo.nl/journal/2022/08/13/my-packaging-policy/">My packaging policy&lt;/a> by Hugo Osvaldo Barrera:&lt;/p>
&lt;blockquote>
&lt;p>The open source sphere has continuously had a lot of discussion regarding
packaging, and there&amp;rsquo;s often an expectation that upstream developers should
distribution packages. I want to make it clear where I stand on this, what
users of my projects can expect, and what how packagers can contribute.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Honestly, it&amp;rsquo;s usually too much work for me (an most upstream developers) to
provide these packages. I don&amp;rsquo;t use Debian and Fedora. I&amp;rsquo;m not familiar with
all the quirks of rpm and deb. Even if I take the time to build these, I&amp;rsquo;ll be
shipping a packages for platforms that I don&amp;rsquo;t use. There would be zero
quality control. And that additional work is not something for which I want to
sign up. I want to focus on maintaining upstream.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>That said, I&amp;rsquo;ve nothing against others packaging my tools for different
platforms. In fact, I encourage it! If someone with the right expertise wants
to build a Debian package for caffeine-ng, darkman, vdirsyncer or any other
project, I welcome the effort. My focus is on shipping releases ready to be
packaged, and let packagers do their jobs.&lt;/p>
&lt;p>Additionally, if any packager finds obstacles, or needs to apply patches for
code to build on a given platform, please open an issue (or send a patch). I
don&amp;rsquo;t mind giving guidance. But don&amp;rsquo;t expect me to know all the quirks of
every distribution.&lt;/p>
&lt;/blockquote>
&lt;p>As a packager myself, from my perspective, Hugo&amp;rsquo;s stance on the topic is the
most desirable possible.&lt;/p>
&lt;p>Working with upstream can sometimes drain your energy and motivation to
contribute. Having developers be open and friendly is one of the best ways to
ensure the gears of open source keep working smoothly.&lt;/p>
&lt;p>I wish we had less fragmentation. When you go to
&lt;a href="https://repology.org/">Repology&lt;/a> or &lt;a href="https://distrowatch.com/">DistroWatch&lt;/a>, it
feels so tiresome to see so many projects, distributions and package managers in
the wild. Diversity and choice are positive, but they come with a non-trivial
cost of reinventing the wheel and (re)doing everything over and over again. Life
is already short, and yet so much of it is spent repackaging the same software a
dozen times for a myriad of &lt;code>.deb&lt;/code> or &lt;code>.rpm&lt;/code> flavours, let alone all the indie /
independent ones. Politics yields a feedback loop that weakens open source and
unity.&lt;/p></description></item><item><title>npm: install before test</title><link>https://perrotta.dev/2025/03/npm-install-before-test/</link><pubDate>Wed, 19 Mar 2025 15:22:50 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/npm-install-before-test/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: &lt;code>npm test&lt;/code> does not automatically run &lt;code>npm install&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>% npm test
&amp;gt; dns-changer@1.0.0 test
&amp;gt; node --no-warnings --experimental-vm-modules node_modules/.bin/jest

node:internal/modules/cjs/loader:1408
 throw err;
 ^

Error: Cannot find module &amp;#39;er/aws/lambda/node_modules/.bin/jest&amp;#39;
 at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)
 at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)
 at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)
 at Function._load (node:internal/modules/cjs/loader:1215:37)
 at TracingChannel.traceSync (node:diagnostics_channel:322:14)
 at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
 at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)
 at node:internal/main/run_main_module:33:47 {
 code: &amp;#39;MODULE_NOT_FOUND&amp;#39;,
 requireStack: []
}

Node.js v23.10.0
&lt;/code>&lt;/pre>&lt;p>We could address this with &lt;code>npm install &amp;amp;&amp;amp; npm test&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, but these are &lt;strong>two&lt;/strong>
commands. We &lt;a href="https://datatracker.ietf.org/doc/html/rfc2119">&lt;em>should&lt;/em>&lt;/a> be able
to do so with one shot.&lt;/p>
&lt;p>Apparently there&amp;rsquo;s &lt;a href="https://docs.npmjs.com/cli/v7/commands/npm-install-test">&lt;code>npm install-test&lt;/code>&lt;/a>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. It does
exactly what you would expect. &lt;strong>This is the preferred solution&lt;/strong>.&lt;/p>
&lt;p>Alternatively (and this was going to be my final solution):&lt;/p>
&lt;pre tabindex="0">&lt;code>% cat package.json
{
 &amp;#34;scripts&amp;#34;: {
 &amp;#34;pretest&amp;#34;: &amp;#34;npm install&amp;#34;,
 &amp;#34;test&amp;#34;: &amp;#34;[...]&amp;#34;
 }
}
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;then &lt;code>npm test&lt;/code> would invoke &lt;code>npm install&lt;/code> in advance.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Or, even better, &lt;code>npm ci &amp;amp;&amp;amp; npm test&lt;/code>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>There&amp;rsquo;s no &lt;code>npm ci-test&lt;/code>. Sorry to disappoint you.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git freeze, git thaw</title><link>https://perrotta.dev/2025/03/git-freeze-git-thaw/</link><pubDate>Wed, 19 Mar 2025 13:27:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/git-freeze-git-thaw/</guid><description>&lt;p>Now I am becoming one of the snobs™ with the first sentence in the following
paragraph. Here we go.&lt;/p>
&lt;p>I had &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
write me a pair of &lt;code>git&lt;/code> utilities: &lt;code>git freeze&lt;/code> and &lt;code>git thaw&lt;/code>.&lt;/p>
&lt;p>First of all: &amp;ldquo;to thaw&amp;rdquo; means &amp;ldquo;to defrost&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>To change from a frozen solid to a liquid by gradual warming.&lt;/p>
&lt;/blockquote>
&lt;p>Perhaps &lt;code>git unfreeze&lt;/code> would have been more intuitive, let&amp;rsquo;s leave the
bikeshedding to another day though.&lt;/p>
&lt;p>What should these utilities do? They are inspired by the ones with the same name
in Chromium
&lt;a href="https://www.chromium.org/developers/how-tos/install-depot-tools/">depot_tools&lt;/a>.
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up">Direct
link&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-freeze.html">&lt;code>git-freeze(1)&lt;/code>&lt;/a>
allows you to put the current branch in &amp;lsquo;suspended animation&amp;rsquo; by committing
your changes to a specially-named commit on the top of your current branch.
When you come back to your branch later, you can just run
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-thaw.html">&lt;code>git-thaw(1)&lt;/code>&lt;/a>
to get your work-in-progress changes back to what they were.&lt;/p>
&lt;/blockquote>
&lt;p>Installing
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools.html">&lt;code>depot_tools(7)&lt;/code>&lt;/a>
just to get these two utilities is too bloated though. The security software at
work flagged it as malware&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. And they didn&amp;rsquo;t even bother to package it for
Linux distributions in the first place.&lt;/p>
&lt;h2 id="git-freezehttpsgithubcomthiagowfxdotfilesblobmastergitbingit-freeze">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-freeze">&lt;code>git-freeze&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-freeze - Stage all files and create a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Stage all changes (tracked and untracked)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add -A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Create a commit with the freeze message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#98c379">&amp;#34;git-freeze&amp;#34;&lt;/span> -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze created successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-thawhttpsgithubcomthiagowfxdotfilesblobmastergitbingit-thaw">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-thaw">&lt;code>git-thaw&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-thaw - Undo a git-freeze operation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if there&amp;#39;s at least one commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git rev-parse --verify HEAD &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: No commits yet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if the last commit is a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git log -n &lt;span style="color:#d19a66">1&lt;/span> --pretty&lt;span style="color:#56b6c2">=&lt;/span>%B | grep -q &lt;span style="color:#98c379">&amp;#34;^git-freeze&lt;/span>$&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Last commit is not a git-freeze commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Undo the git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> git rev-parse --verify HEAD^ &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If there&amp;#39;s a parent commit, reset to it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git reset &lt;span style="color:#98c379">&amp;#34;HEAD^&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If it&amp;#39;s the initial commit, delete the reference and unstage everything&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git update-ref -d HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git restore --staged .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze thawed successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="post-ai-cleanup">Post-AI cleanup&lt;/h2>
&lt;p>The only change I had to make was to add &lt;code>-n&lt;/code> to &lt;code>git commit&lt;/code> in &lt;code>git-freeze&lt;/code> so
that pre-commit hooks would be skipped upon freeze.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Within an existing &lt;code>git&lt;/code> repository, do some work in a custom branch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decide that something else more important and/or urgent needs your attention.
Let go of &lt;a href="https://git-scm.com/docs/git-worktree">git worktrees&lt;/a> in this
instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git freeze&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Switch to a new branch. Do whatever. Done.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git checkout &amp;lt;your previous branch&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git thaw&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Resume your previous work. Profit.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Edit(2025-03-20)&lt;/strong>: A friend asked that is the difference between &lt;code>git freeze&lt;/code>
and &lt;code>git stash&lt;/code>. The main difference is that &lt;code>git stash&lt;/code> does not handle files
not yet tracked by &lt;code>git&lt;/code>, whereas &lt;code>git freeze&lt;/code> does. I think of &lt;code>freeze&lt;/code> as the
equivalent of completely clearing up my physical desk of all objects so that I
can focus on something else.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;em>An agentic coding tool made by Anthropic. Currently in beta as a research
preview.&lt;/em>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In hindsight that&amp;rsquo;s not even surprising.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Terraform: rename resources</title><link>https://perrotta.dev/2025/03/terraform-rename-resources/</link><pubDate>Wed, 19 Mar 2025 11:40:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-rename-resources/</guid><description>&lt;p>Sometimes I need to make a simple refactoring rename change to a terraform
resource that has already been applied. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_api_gateway_request_validator&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;delete&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Validate body, query string parameters, and headers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rest_api_id&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_rest_api&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_body&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_parameters&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_api_gateway_request_validator&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Validate body, query string parameters, and headers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rest_api_id&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_rest_api&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_body&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_parameters&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The simplest way to do so is to &lt;code>terraform apply&lt;/code>. However, that incurs
destruction + re-creation of the resource, which would incur downtime in case
it&amp;rsquo;s already deployed in prod.&lt;/p>
&lt;p>The best way is &lt;code>% terraform state mv aws_api_gateway_request_validator.{delete,this}&lt;/code>. In-place move, simple and
easy.&lt;/p>
&lt;p>When doing it at scale, running multiple &lt;code>terraform state mv&lt;/code> commands could be
cumbersome.&lt;/p>
&lt;p>There&amp;rsquo;s a second way, using the
&lt;a href="https://developer.hashicorp.com/terraform/language/moved">&lt;code>moved&lt;/code>&lt;/a> block in HCL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">moved&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">from&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_request_validator&lt;/span>.&lt;span style="color:#e06c75">delete&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">to&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_request_validator&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;code>terraform&lt;/code> docs call this operation &amp;ldquo;move&amp;rdquo;, instead of &amp;ldquo;rename&amp;rdquo;.&lt;/p></description></item><item><title>Terraform: create zip files</title><link>https://perrotta.dev/2025/03/terraform-create-zip-files/</link><pubDate>Mon, 17 Mar 2025 21:06:28 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-create-zip-files/</guid><description>&lt;p>When creating &lt;code>.zip&lt;/code> files with terraform, for example, with the purpose of
uploading them to an &lt;a href="https://aws.amazon.com/lambda/">AWS Lambda&lt;/a>, at least two
approaches exist to do so.&lt;/p>
&lt;p>In the examples below, assume a NodeJS source file named &lt;code>index.mjs&lt;/code>. It should
be packaged into a &lt;code>lambda.zip&lt;/code> archive.&lt;/p>
&lt;h2 id="1-use-null_resourcehttpsregistryterraformioprovidershashicorpnulllatestdocsresourcesresource">1) Use &lt;a href="https://registry.terraform.io/providers/hashicorp/null/latest/docs/resources/resource">&lt;code>null_resource&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;null_resource&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;build_lambda&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">triggers&lt;/span> = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">filebase64sha256&lt;/span>(&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/index.mjs&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd"> provisioner&lt;/span> &lt;span style="color:#98c379">&amp;#34;local-exec&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">command&lt;/span> = &lt;span style="color:#56b6c2">&amp;lt;&amp;lt;EOF&lt;/span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> cd ${path.module}/lambda
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> zip -r lambda.zip index.mjs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> &lt;/span>&lt;span style="color:#56b6c2">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_lambda_function&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">function_name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;dns-changer-delete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">role&lt;/span> = &lt;span style="color:#e06c75">aws_iam_role&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">arn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">filename&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">filebase64sha256&lt;/span>(&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">handler&lt;/span> = &lt;span style="color:#e5c07b">&amp;#34;index&lt;/span>.&lt;span style="color:#e06c75">handler&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> runtime = &amp;#34;&lt;/span>&lt;span style="color:#e06c75">nodejs22&lt;/span>.&lt;span style="color:#e06c75">x&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> depends_on = [null_resource.build_lambda]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-use-archive_filehttpsregistryterraformioprovidershashicorparchivelatestdocsresourcesfile">2) Use &lt;a href="https://registry.terraform.io/providers/hashicorp/archive/latest/docs/resources/file">&lt;code>archive_file&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">data&lt;/span> &lt;span style="color:#98c379">&amp;#34;archive_file&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;lambda_zip&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span> = &lt;span style="color:#98c379">&amp;#34;zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_file&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/index.mjs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">output_path&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_lambda_function&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">function_name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;dns-changer-delete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">description&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Delete DNS record sets for DNS Changer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">role&lt;/span> = &lt;span style="color:#e06c75">aws_iam_role&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">arn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">filename&lt;/span> = &lt;span style="color:#e5c07b">data&lt;/span>.&lt;span style="color:#e06c75">archive_file&lt;/span>.&lt;span style="color:#e06c75">lambda_zip&lt;/span>.&lt;span style="color:#e06c75">output_path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">data&lt;/span>.&lt;span style="color:#e06c75">archive_file&lt;/span>.&lt;span style="color:#e06c75">lambda_zip&lt;/span>.&lt;span style="color:#e06c75">output_base64sha256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">handler&lt;/span> = &lt;span style="color:#e5c07b">&amp;#34;index&lt;/span>.&lt;span style="color:#e06c75">handler&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> runtime = &amp;#34;&lt;/span>&lt;span style="color:#e06c75">nodejs22&lt;/span>.&lt;span style="color:#e06c75">x&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> depends_on = [data.archive_file.lambda_zip]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I prefer the second approach.&lt;/p>
&lt;p>Furthermore, it only requires one &lt;code>terraform apply&lt;/code> per file update, whereas
the first one requires two.&lt;/p></description></item><item><title>Terraform: generate diagrams</title><link>https://perrotta.dev/2025/03/terraform-generate-diagrams/</link><pubDate>Mon, 17 Mar 2025 13:42:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-generate-diagrams/</guid><description>&lt;p>There are a few options to visualize a &lt;code>terraform&lt;/code> module in the form of a graph
or diagram.&lt;/p>
&lt;h2 id="terraform-graph-dot--graphviz">&lt;code>terraform graph&lt;/code>: dot / graphviz&lt;/h2>
&lt;p>&lt;a href="https://developer.hashicorp.com/terraform/cli/commands/graph">&lt;code>terraform graph&lt;/code>&lt;/a> outputs a
&lt;a href="https://graphviz.org/doc/info/lang.html">DOT&lt;/a> graph, which can be manipulated /
visualized with &lt;code>graphviz&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>terraform graph | dot -Tpng &amp;gt; graph.png
&lt;/code>&lt;/pre>&lt;p>The graph can then be embedded into a markdown file:&lt;/p>
&lt;pre tabindex="0">&lt;code>% cat README.md
![graph](graph.png)
&lt;/code>&lt;/pre>&lt;h2 id="terramaid-mermaid">&lt;code>terramaid&lt;/code>: mermaid&lt;/h2>
&lt;p>The &lt;a href="https://github.com/RoseSecurity/Terramaid">&lt;code>terramaid&lt;/code>&lt;/a> project generates
&lt;a href="https://mermaid.js.org/">Mermaid&lt;/a> diagrams from Terraform configurations:&lt;/p>
&lt;pre tabindex="0">&lt;code>% brew install terramaid
% terramaid run --output README.md
Mermaid diagram successfully written to README.md
&lt;/code>&lt;/pre>&lt;p>The default filename is &lt;code>Terramaid.md&lt;/code>.&lt;/p>
&lt;p>Why use Mermaid? It was previously covered &lt;a href="https://perrotta.dev/2024/10/mermaid-rich-diagrams-in-markdown/">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>TL;DR&lt;/strong>: Mermaid has native integration with
&lt;a href="https://github.blog/developer-skills/github/include-diagrams-markdown-files-mermaid/">GitHub&lt;/a>
and &lt;a href="https://docs.gitlab.com/ee/user/markdown.html#mermaid">GitLab&lt;/a>, and that&amp;rsquo;s
hard to beat. Graphviz, sadly, &lt;a href="https://forum.graphviz.org/t/github-adding-support-for-mermaid-diagrams/998">does
not&lt;/a>.&lt;/p></description></item><item><title>Filling in the gaps of the internet</title><link>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</link><pubDate>Fri, 14 Mar 2025 16:12:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</guid><description>&lt;p>&lt;a href="https://evanhahn.com/filling-in-the-gaps-of-the-internet/">Filling in the gaps of the internet&lt;/a> by Evan Hahn:&lt;/p>
&lt;blockquote>
&lt;p>Here&amp;rsquo;s a small philosophy I have about the internet:&lt;/p>
&lt;p>I believe that it&amp;rsquo;s my duty to publish the answer to previously-unanswered
questions. That way, the next person who comes along has an easier time.&lt;/p>
&lt;/blockquote>
&lt;p>Hell yes!&lt;/p>
&lt;blockquote>
&lt;p>For example, I was once trying to figure out how to skip the first line of a
CSV file in Python. When I did a web search for &amp;ldquo;python skip first line of
CSV&amp;rdquo;, I couldn&amp;rsquo;t find the answer.&lt;/p>
&lt;p>After a few minutes, I figured it out myself. Then, I wrote a &lt;a href="https://evanhahn.com/python-skip-header-csv-reader/">quick blog
post&lt;/a> explaining my
solution…and now it&amp;rsquo;s one of the most popular posts on my site! Even though
the post only took a few minutes to write, it&amp;rsquo;s been one of my most viewed
over the last decade, (presumably) because so many people are trying to do the
exact same thing.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://perrotta.dev/2025/02/crawling-/-indexing-is-wild/">Hell yes!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Of course, this is a guideline, not a rule. Sometimes I don&amp;rsquo;t feel very
confident in my answer and don&amp;rsquo;t want to publish bogus information. Sometimes
I&amp;rsquo;m busy and don&amp;rsquo;t have time for a writeup, especially for more complex stuff.
And sometimes, nobody cares—how to compute a CRC32 checksum in Crystal has not
been a big hit; I might have wasted my time with that one.&lt;/p>
&lt;/blockquote>
&lt;p>And fair enough.&lt;/p>
&lt;p>Time is limited, after all.&lt;/p></description></item><item><title>YOLO: debug only after push</title><link>https://perrotta.dev/2025/03/yolo-debug-only-after-push/</link><pubDate>Fri, 14 Mar 2025 15:16:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/yolo-debug-only-after-push/</guid><description>&lt;p>Whenever writing new posts in this blog I rarely preview them in advance,
especially when they are short and simple&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>My rushed workflow is roughly:&lt;/p>
&lt;ul>
&lt;li>open a new terminal tab / window&lt;/li>
&lt;li>&lt;code>cd ~blog&lt;/code>&lt;/li>
&lt;li>&lt;code>just new &amp;quot;hello world&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>vim content/posts&lt;/code>, hit &amp;lsquo;G&amp;rsquo;, hit &amp;lsquo;k&amp;rsquo;, hit &amp;lsquo;ENTER&amp;rsquo;&lt;/li>
&lt;li>draft the post&lt;/li>
&lt;li>&lt;code>:Gwq&lt;/code> (&lt;a href="https://github.com/tpope/vim-fugitive">vim-fugitive&lt;/a>, &lt;code>git&lt;/code>
integration)&lt;/li>
&lt;li>&lt;code>git commit -m &amp;quot;new post: hello world&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>git push&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>ONLY then&lt;/em>, &lt;code>just&lt;/code>, open web browser, see if it looks OK.&lt;/p>
&lt;p>Does it &lt;em>NOT&lt;/em> look OK (grammar errors, markdown issues, typos)? Make a quick
edit, &lt;code>:Gwq&lt;/code> again, &lt;code>git amend &amp;amp;&amp;amp; git push -f&lt;/code>.&lt;/p>
&lt;p>Normally this process happens faster than the CI pipeline takes to build and
subsequently publish the site.&lt;/p>
&lt;p>No AI involved™, not even a spellchecker&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Which is what I strive for most of the time anyways.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Not completely true:
&lt;a href="https://github.com/codespell-project/codespell">&lt;code>codespell&lt;/code>&lt;/a> is integrated
via &lt;a href="https://pre-commit.com/">pre-commit&lt;/a>. &lt;code>vim&lt;/code> has &lt;code>:set spell&lt;/code>. That&amp;rsquo;s
all though. There&amp;rsquo;s no &amp;ldquo;make this sound better&amp;rdquo; or &amp;ldquo;rewrite this more
professionally&amp;rdquo;. What you read is what comes straight off my brain.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>yaml: wrong new line character: expected \n</title><link>https://perrotta.dev/2025/03/yaml-wrong-new-line-character-expected-%5Cn/</link><pubDate>Fri, 14 Mar 2025 15:09:47 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/yaml-wrong-new-line-character-expected-%5Cn/</guid><description>&lt;p>Example upstream issue: &lt;a href="https://github.com/sbaudoin/sonar-yaml/issues/24">https://github.com/sbaudoin/sonar-yaml/issues/24&lt;/a>&lt;/p>
&lt;p>How to reproduce:&lt;/p>
&lt;ul>
&lt;li>start with a helm chart in a git repository: &lt;code>helm create foo&lt;/code>&lt;/li>
&lt;li>delete &lt;code>values.yaml&lt;/code>&lt;/li>
&lt;li>commit it, create a github PR&lt;/li>
&lt;li>realize that later on you need to create an empty &lt;code>values.yaml&lt;/code> file: &lt;code>touch values.yaml&lt;/code>&lt;/li>
&lt;li>commit it, push it&lt;/li>
&lt;li>realize that you need to add a comment to the YAML file&lt;/li>
&lt;li>use the github web UI to add a comment. Click edit, and add this comment:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Purposely empty for `ct lint`.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>commit it&lt;/li>
&lt;li>wait for CI checks to run&lt;/li>
&lt;li>&lt;a href="https://github.com/adrienverge/yamllint">&lt;code>yamllint&lt;/code>&lt;/a> will fail:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yaml: wrong new line character: expected \n
&lt;/code>&lt;/pre>&lt;p>This error can also be observed in &lt;code>vim&lt;/code> (with certain plug-ins).&lt;/p>
&lt;p>&lt;strong>What&amp;rsquo;s the issue?&lt;/strong> It&amp;rsquo;s a line ending problem: CR LF et al being different in
Windows vs Linux / macOS.&lt;/p>
&lt;p>&lt;strong>How to fix it?&lt;/strong> Run &lt;code>dos2unix values.yaml&lt;/code>, commit, profit.&lt;/p>
&lt;p>You can get &lt;code>dos2unix&lt;/code> e.g. via &lt;a href="https://brew.sh/">homebrew&lt;/a>.&lt;/p>
&lt;p>&lt;strong>What&amp;rsquo;s the lesson?&lt;/strong> Avoid the github web UI to edit files, even when in a
rush. ■&lt;/p></description></item><item><title>AWS IAM resources</title><link>https://perrotta.dev/2025/03/aws-iam-resources/</link><pubDate>Thu, 13 Mar 2025 15:30:10 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/aws-iam-resources/</guid><description>&lt;p>When working on Amazon Web Services (AWS), at some point you&amp;rsquo;ll need to fiddle
with &lt;a href="https://en.wikipedia.org/wiki/Identity_and_access_management">IAM&lt;/a>
(Identity and access management).&lt;/p>
&lt;p>It can be daunting to navigate the massive &lt;a href="https://docs.aws.amazon.com/iam/">AWS
Documentation&lt;/a>.&lt;/p>
&lt;p>I am collecting a couple of useful resources in this post.&lt;/p>
&lt;h2 id="permissions">Permissions&lt;/h2>
&lt;p>&lt;a href="https://aws.permissions.cloud/usage">https://aws.permissions.cloud/usage&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The aws.permissions.cloud website uses a variety of information gathered
within the &lt;a href="https://github.com/iann0036/iam-dataset">IAM Dataset&lt;/a> and exposes
that information in a clean, easy-to-read format.&lt;/p>
&lt;p>aws.permissions.cloud was built in order to provide an alternate,
community-driven source of truth for AWS identity.&lt;/p>
&lt;p>The website can be navigated using the left sidebar or by quickly looking up a
specific managed policy, IAM permission or API method in the top search bar.&lt;/p>
&lt;/blockquote>
&lt;p>For example, search for &amp;ldquo;route53&amp;rdquo; or for &amp;ldquo;s3&amp;rdquo;.&lt;/p>
&lt;p>The main goal of figuring out &lt;strong>permissions&lt;/strong> is to add them to a &lt;strong>policy&lt;/strong>.&lt;/p>
&lt;h2 id="policies">Policies&lt;/h2>
&lt;p>&lt;a href="https://aws.permissions.cloud/policyevaluator">https://aws.permissions.cloud/policyevaluator&lt;/a>:&lt;/p>
&lt;p>Use the Policy Evaluator to validate your &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html">policy
JSON&lt;/a>.&lt;/p>
&lt;p>A policy associates permissions (actions) with resources (ARNs).&lt;/p>
&lt;blockquote>
&lt;p>Enter your IAM policy in the box below.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Statement&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Action&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;route53:ChangeResourceRecordSets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Resource&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;arn:aws:route53:::hostedzone/01234567890123&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;arn:aws:route53:::hostedzone/01234567890124&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each resource above represents a distinct &lt;a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zones-working-with.html">hosted zone&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A hosted zone is a container for records, and records contain information
about how you want to route traffic for a specific domain, such as
example.com, and its subdomains (acme.example.com, zenith.example.com). A
hosted zone and the corresponding domain have the same name. There are two
types of hosted zones: public and private.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: &lt;code>&amp;quot;Resource&amp;quot;&lt;/code> is singular but it accepts an array of ARNs as well.&lt;/p>
&lt;p>&lt;strong>Tip&lt;/strong>: Wildcards (&lt;code>'*'&lt;/code>) are accepted e.g. &lt;code>&amp;quot;arn:aws:route53:::hostedzone/*&amp;quot;&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;p>Test out policies and permissions with the &lt;a href="https://policysim.aws.amazon.com/">IAM Policy
Simulator&lt;/a>. This service is provided by AWS
itself.
&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Docs&lt;/a>.&lt;/p>
&lt;h2 id="terraform">Terraform&lt;/h2>
&lt;p>Terraform Registry: &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs">AWS Provider Docs&lt;/a>.&lt;/p></description></item><item><title>keep-sorted, with quotes</title><link>https://perrotta.dev/2025/03/keep-sorted-with-quotes/</link><pubDate>Thu, 13 Mar 2025 13:00:06 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/keep-sorted-with-quotes/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/keep-sorted/">keep-sorted&lt;/a> has been previously covered.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: how to automatically sort the following YAML list?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I would naturally add &lt;code>keep-sorted&lt;/code> to it, but the result is not what I expected:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Quotes are coming first!&lt;/p>
&lt;p>Which does indeed make sense. They are ASCII characters
(&lt;a href="https://man.archlinux.org/man/ascii.7">&lt;code>ascii(7)&lt;/code>&lt;/a>), value 34, which comes
before &lt;code>a-z&lt;/code>. Oh well.&lt;/p>
&lt;p>I tried &lt;code>ignore_prefixes=&amp;quot;&lt;/code> to no avail. I also tried &lt;code>by_regex=[\w-]+&lt;/code> to no
avail.&lt;/p>
&lt;p>Only the following form worked:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start by_regex=[&amp;#39;\w+[\w ]*&amp;#39;]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;but it&amp;rsquo;s a mouthful. I filed an upstream bug:
&lt;a href="https://github.com/google/keep-sorted/issues/76">https://github.com/google/keep-sorted/issues/76&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Edit(2025-01-04)&lt;/strong>: Thanks Ho Man for the following suggestion:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start by_regex=\w+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>commit, pre-commit, commit</title><link>https://perrotta.dev/2025/03/commit-pre-commit-commit/</link><pubDate>Wed, 12 Mar 2025 16:41:53 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/commit-pre-commit-commit/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Program_optimization">Premature optimization is the root of all
evil&lt;/a> but I run into this
almost every single day, it&amp;rsquo;s time to finally address it.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: When using &lt;a href="https://pre-commit.com/">pre-commit&lt;/a> with a
hook that will automatically fix an issue, the commit will fail the first time
it runs. This means I need to issue two &lt;code>git commit -a&lt;/code> commands in order to
effectively create a commit: the first one will trigger &lt;code>pre-commit run&lt;/code>, the
second one will add the changes / fixes done by it. The question is: how can I
merge these two steps into a single command?&lt;/p>
&lt;p>There are several ways to tackle this issue:&lt;/p>
&lt;ul>
&lt;li>create a custom shell script that does a double commit invocation&lt;/li>
&lt;li>create a &lt;code>git&lt;/code> alias that does a double commit invocation&lt;/li>
&lt;li>use a native shell solution&lt;/li>
&lt;/ul>
&lt;p>I am hesitant to pollute my dotfiles with more scripts, hence I&amp;rsquo;d rather find a
native shell solution.&lt;/p>
&lt;p>I came up with this very simple idea: since I use &lt;code>zsh&lt;/code>, leverage the &lt;a href="https://zsh.sourceforge.io/Doc/Release/Shell-Grammar.html">&lt;code>repeat&lt;/code>
built-in&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>repeat word do list done&lt;/p>
&lt;p>word is expanded and treated as an arithmetic expression, which must evaluate to a number n. list is then executed n times.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% repeat &lt;span style="color:#d19a66">2&lt;/span> git commit -a -m &lt;span style="color:#98c379">&amp;#34;feat: bootstrap time travel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This only works iff I &lt;em>really&lt;/em> want to commit everything that is in the staging
area (the git index).&lt;/p></description></item><item><title>SAML Chrome Panel</title><link>https://perrotta.dev/2025/03/saml-chrome-panel/</link><pubDate>Wed, 12 Mar 2025 00:51:05 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/saml-chrome-panel/</guid><description>&lt;p>&lt;a href="https://chromewebstore.google.com/detail/saml-chrome-panel/paijfdbeoenhembfhkhllainmocckace">SAML Chrome Panel&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Extends the (Chrome) Developer Tools, adding support for SAML Requests and
Responses to be displayed in the Developer Tools window&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>This is an Open Source SAML debugger for Chrome. It operates as another panel
in the Chrome Developer Tools section, which monitors the traffic in the
current active tab. This panel is trying to replicate what the Firefox version
of SAML Tracer does as there wasn&amp;rsquo;t a good enough one (or any) for Chrome at
the time of writing this.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>It is designed to display all network traffic, along with the request and
response data. If there is a SAML request or response, then it will grab the
message, format it nicely and show it to you in another tab.&lt;/p>
&lt;/blockquote>
&lt;p>Upstream: &lt;a href="https://github.com/milton-lai/saml-chrome-panel">https://github.com/milton-lai/saml-chrome-panel&lt;/a>&lt;/p>
&lt;p>This Chrome extension has proven useful to me at least twice.&lt;/p>
&lt;p>Recently I was integrating &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD&lt;/a>
and &lt;a href="https://www.mongodb.com/atlas">MongoDB Atlas&lt;/a> with
&lt;a href="https://www.okta.com/">Okta&lt;/a>. You can do it via SAML or via OIDC.&lt;/p>
&lt;p>There&amp;rsquo;s always a chance of having one tiny configuration mistake, perhaps a
typo or a missing field. I found:&lt;/p>
&lt;ul>
&lt;li>ArgoCD: a typo in the callback URL (&lt;code>foo-foo&lt;/code> instead of &lt;code>foo&lt;/code>)&lt;/li>
&lt;li>MongoDB Atlas: an &lt;code>acsError&lt;/code> in the response
(&lt;a href="https://www.mongodb.com/community/forums/t/mongodb-atlas-okta-integration-login-error/230897">example&lt;/a>,
&lt;a href="https://www.mongodb.com/community/forums/t/sso-issue-with-idp-azure-entraid-okta-mongodb-saml/278500">example&lt;/a>):
&lt;a href="https://cloud.mongodb.com/okta/hooks/acsError">https://cloud.mongodb.com/okta/hooks/acsError&lt;/a>: it was a certificate error.
Instead of copying and pasting the certificate content (&lt;code>------ BEGIN CERTIFICATE ------&lt;/code>), upload the file directly. The
&lt;a href="https://www.mongodb.com/docs/cloud-manager/security/federated-auth-okta/">documentation&lt;/a>
(item &lt;code>1.h.&lt;/code>) notes so. Convert it to &lt;code>.pem&lt;/code> prior to uploading it.&lt;/li>
&lt;/ul></description></item><item><title>Have I Been Pwned?</title><link>https://perrotta.dev/2025/03/have-i-been-pwned/</link><pubDate>Tue, 11 Mar 2025 16:29:34 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/have-i-been-pwned/</guid><description>&lt;p>&lt;a href="https://haveibeenpwned.com/">Have I Been Pwned?&lt;/a> by the great &lt;a href="https://www.troyhunt.com/">Troy Hunt&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Check if your email address is in a data breach&lt;/p>
&lt;/blockquote>
&lt;h2 id="individual-sign-up">Individual sign-up&lt;/h2>
&lt;p>Sign up and then verify your email:&lt;/p>
&lt;blockquote>
&lt;p>You&amp;rsquo;ve just been sent a verification email, all you need to do now is confirm
your address by clicking on the link when it hits your mailbox and you&amp;rsquo;ll be
automatically notified of future pwnage. In case it doesn&amp;rsquo;t show up, check
your junk mail and if you still can&amp;rsquo;t find it, you can always repeat this
process.&lt;/p>
&lt;/blockquote>
&lt;p>The email:&lt;/p>
&lt;blockquote>
&lt;p>You (or possibly someone else), just subscribed &lt;code>{email}&lt;/code> to the
notification service that will automatically let you know if your address is
caught up in a future data breach. It&amp;rsquo;s a free service and you can unsubscribe
at any time if you don&amp;rsquo;t want the notifications.&lt;/p>
&lt;p>Just to confirm that you&amp;rsquo;re a real person behind a real email address, click
on the link below then you&amp;rsquo;ll be automatically subscribed to new breach
notifications where this email address has been pwned.&lt;/p>
&lt;/blockquote>
&lt;p>Then:&lt;/p>
&lt;blockquote>
&lt;p>Verification complete&lt;/p>
&lt;p>All done, you&amp;rsquo;ll be sent an email if this address gets pwned in future, below
is your existing exposure&lt;/p>
&lt;/blockquote>
&lt;p>There&amp;rsquo;s a lot of lore in the &lt;a href="https://www.goodreads.com/book/show/74960566-pwned---the-collected-blog-posts">PWNED - The Collected Blog
Posts&lt;/a>
book by Troy Hunt &amp;amp; Rob Conery, which I would recommend.&lt;/p>
&lt;h2 id="domain-sign-up">Domain sign-up&lt;/h2>
&lt;p>Furthermore, there&amp;rsquo;s also a domain search service:&lt;/p>
&lt;blockquote>
&lt;p>Search for pwned accounts across an entire domain and receive future
notifications.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Domain search allows you to find all breached email addresses on a domain you
control via a dedicated domain search dashboard. Once verified, you will also
receive notifications via email if they appear in future breaches. Before you
can perform a domain search, you need to verify your email address and that
you control the domains you&amp;rsquo;re searching. If you cannot verify that you
control a domain, you will not be able to search for breached email addresses
on it.&lt;/p>
&lt;/blockquote>
&lt;p>Upon signing up:&lt;/p>
&lt;blockquote>
&lt;p>Welcome to the Have I Been Pwned domain search&lt;/p>
&lt;p>You (or possibly someone else), just began the process to access the domain
search dashboard using the email address &lt;code>{email}&lt;/code>. Just to confirm
that you&amp;rsquo;re a real person behind a real email address, click on the link below
which will take you to the dashboard (the link will remain valid for 60
minutes).&lt;/p>
&lt;/blockquote>
&lt;p>Then you can choose a way to verify your domain:&lt;/p>
&lt;ul>
&lt;li>with a pre-defined address like &lt;code>security@&lt;/code> or &lt;code>webmaster@&lt;/code> or &lt;code>postmaster@&lt;/code>
or &lt;code>hostmaster@&lt;/code>&lt;/li>
&lt;li>with a DNS TXT record&lt;/li>
&lt;/ul>
&lt;p>When following the first route:&lt;/p>
&lt;blockquote>
&lt;p>An email containing a verification token has been sent off to the address you
chose, just copy and paste it into the text box below and you&amp;rsquo;ll be able to
perform the domain search right after that.&lt;/p>
&lt;/blockquote>
&lt;p>I was already familiar with the individual service, but only now discovered the
domain service, at work, by happenstance.&lt;/p></description></item><item><title>How core git developers configure git</title><link>https://perrotta.dev/2025/03/how-core-git-developers-configure-git/</link><pubDate>Mon, 10 Mar 2025 15:03:24 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/how-core-git-developers-configure-git/</guid><description>&lt;p>&lt;a href="https://blog.gitbutler.com/how-git-core-devs-configure-git/">How Core Git Developers Configure
Git&lt;/a> by Git Butler:&lt;/p>
&lt;blockquote>
&lt;p>In this post, I&amp;rsquo;ll go through some of the perhaps obscure Git config settings
that I have personally globally enabled and go into them to explain what they
do and why they should probably be the default settings.&lt;/p>
&lt;/blockquote>
&lt;p>Lots of good defaults to adopt from there.&lt;/p>
&lt;p>I
&lt;a href="https://github.com/thiagowfx/.dotfiles/commit/31974676944732b91588e6604a29778ffa33099e">adopted&lt;/a>
a few. It turns out I already had most of them in my
&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.gitconfig">&lt;code>~/.gitconfig&lt;/code>&lt;/a>.&lt;/p></description></item><item><title>Reply to: Growth at BigTech</title><link>https://perrotta.dev/2025/03/reply-to-growth-at-bigtech/</link><pubDate>Thu, 06 Mar 2025 23:40:25 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/reply-to-growth-at-bigtech/</guid><description>&lt;p>Original article: &lt;a href="https://bhardwajrish.blogspot.com/2025/03/growth-at-bigtech.html">Growth at
BigTech&lt;/a>.&lt;/p>
&lt;p>I used to work in the same company as the author of the post&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, and yet I
followed a completely different approach than him.&lt;/p>
&lt;p>Do I have credibility? You don&amp;rsquo;t have to take my word for granted, and you
should make your own conclusions. The only transparency bit I&amp;rsquo;ll reveal is that
I got promoted from Junior (L3) to Mid (L4) within 1.5 year, and from Mid to
Senior (L5) within 2 years i.e. 3.5 years total to become Senior. Enough
&lt;del>humblebragging&lt;/del> boasting already, let&amp;rsquo;s do a rebuttal of the post. Just one
disclaimer: although it&amp;rsquo;s framed as a rebuttal, it&amp;rsquo;s important to acknowledge
that no two experiences are the same, and two truths can be simultaneously
valid.&lt;/p>
&lt;blockquote>
&lt;p>Become the person everyone in my working radius knows.&lt;/p>
&lt;/blockquote>
&lt;p>This is important, but only if you&amp;rsquo;re well-known for good things™. Sometimes
it&amp;rsquo;s better to stay in the shadow. That said, there&amp;rsquo;s virtually no downside to
being well-known if your impact is generally and non-controversially positive.&lt;/p>
&lt;blockquote>
&lt;p>Learn how a big org works, and learn to be effective in them.&lt;/p>
&lt;/blockquote>
&lt;p>This is very important. Knowledge is power. Everything is a game. Sometimes (not
always, but oftentimes) the game is political. Learning the rules of engagement
of the game can only bring clarity and perspective to making one play the game
more effectively.&lt;/p>
&lt;blockquote>
&lt;p>Eventually be in the room that leaders make decisions.&lt;/p>
&lt;/blockquote>
&lt;p>This is important if you&amp;rsquo;re Senior+. As a Junior or as a Mid Engineer, I would
argue, this is actually worse. Engaging in politics in an early career phase is
disastrous, it&amp;rsquo;s the kind of behavior that quickly degrades one&amp;rsquo;s motivation
and/or enthusiasm and/or passion&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> for building / evolving the product.&lt;/p>
&lt;blockquote>
&lt;p>here&amp;rsquo;s what I learned you need: Visibility. Visibility Visibility.&lt;/p>
&lt;/blockquote>
&lt;p>Again, more visibility is better than less (or no) visibility, but only when the
visibility is good. This point is debatable.&lt;/p>
&lt;blockquote>
&lt;p>Be where leaders are.&lt;/p>
&lt;/blockquote>
&lt;p>I don&amp;rsquo;t see the point. Again, staying away from politics is important to
maintain enthusiasm, especially during early years. If you chase leaders (too)
soon, you&amp;rsquo;ll be dragged down in the sea of despair. I believe this is good
advice &lt;em>only&lt;/em> when you&amp;rsquo;re Senior+.&lt;/p>
&lt;blockquote>
&lt;p>Look where leaders are looking.
Don&amp;rsquo;t work on things you think are important.
Don&amp;rsquo;t work on things your users think are important.
Work on things leadership thinks are important.&lt;/p>
&lt;/blockquote>
&lt;p>This is where our paths (significantly) diverge. There are two schools of
thought: one is to
&lt;a href="https://www.urbandictionary.com/define.php?term=boot-licking">appeal&lt;/a>
&lt;em>directly&lt;/em> to those who have the powers to promote you; the other one is to do
what&amp;rsquo;s best for your personal growth, aligned with your interests, whilst
keeping in mind the prioritization and direction of the project you&amp;rsquo;re working
on. Following the former route is akin to applying the advice from &lt;a href="https://www.goodreads.com/book/show/1303.The_48_Laws_of_Power">48 Laws of
Power by Robert
Greene&lt;/a>.
Following the latter is akin to following &lt;a href="https://www.goodreads.com/book/show/38900866-it-doesn-t-have-to-be-crazy-at-work">It Doesn&amp;rsquo;t Have to Be Crazy at Work
by David Heinemeier Hansson and Jason
Fried&lt;/a>.&lt;/p>
&lt;p>I feel my opinion on the matter is quite clear. Nonetheless, it&amp;rsquo;s still
crucial to do something useful. Moving the needle in the right direction every
day (or even every hour&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>!) is a great way to stay in touch with reality.&lt;/p>
&lt;blockquote>
&lt;p>Sound the alarm bells, often.&lt;/p>
&lt;p>Create a problem, become the hero.&lt;/p>
&lt;p>If you think there&amp;rsquo;s an important thing that needs to be solved, DON&amp;rsquo;T do it
silently. Make it a priority. Get leadership on board.&lt;/p>
&lt;p>And only then come in and save the day.&lt;/p>
&lt;/blockquote>
&lt;p>Oh no, please don&amp;rsquo;t.&lt;/p>
&lt;p>Sounding alarm bells often is good e.g. in the form of filing tickets /
reporting bugs frequently. Very few people have the enthusiasm to do so. Being
one of them makes you stand out, full stop. Investing in ways to make it easier
and quicker to report high-quality bugs is worthwhile.&lt;/p>
&lt;p>Now, if you happen to tackle these very same bugs, that gives you visibility.
Good visibility. And good visibility is great!&lt;/p>
&lt;p>Don&amp;rsquo;t create problems though. Don&amp;rsquo;t be a hero. In fact: go/no-heroes&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Regarding silence: In general, not every single issue one resolves needs to be
echoed everywhere. This is often perceived as bragging, which is not great. It&amp;rsquo;s
important to keep your manager well-informed (e.g. during weekly 1:1s, and/or in
a document that accumulates all your accomplishments). And it&amp;rsquo;s a good idea to
have your teammates and close leadership aware of your strengths and overall
accomplishments. That said, sometimes impact is realized in a bigger fashion
when accomplishments are done in the shadows.&lt;/p>
&lt;blockquote>
&lt;p>It isn&amp;rsquo;t your work - it&amp;rsquo;s the perception of your work that&amp;rsquo;s important.&lt;/p>
&lt;/blockquote>
&lt;p>We are all humans. This is one of our cognitive biases. Can&amp;rsquo;t disagree with that
statement.&lt;/p>
&lt;blockquote>
&lt;p>Work with as many people as possible.&lt;/p>
&lt;/blockquote>
&lt;p>I must digress. Quality triumphs quantity. Exceptions: 20% projects, citizenship
initiatives like readability review, mentoring, tech talks, etc. For core work,
this is not important.&lt;/p>
&lt;blockquote>
&lt;p>The more people support you, the higher your chances that you&amp;rsquo;re able to pull
your weight in getting things done.&lt;/p>
&lt;/blockquote>
&lt;p>Unless you play a political role or something that involves elections or a
popularity contest, having lots of people supporting you doesn&amp;rsquo;t really matter.
Nevertheless, having the right / important people support you does.&lt;/p>
&lt;blockquote>
&lt;p>Have a highly capable manager, who is great at representing you.&lt;/p>
&lt;/blockquote>
&lt;p>1000x agreed. To this date, I am grateful (and lucky&lt;sup id="fnref:5">&lt;a href="#fn:5" class="footnote-ref" role="doc-noteref">5&lt;/a>&lt;/sup>!) to always have had
great managers. This makes a huge difference.&lt;/p>
&lt;blockquote>
&lt;p>This means they understand what you do thoroughly, and they&amp;rsquo;re a great
salesperson. Your manager represents you during promotion committee rounds
where they convince others why you have to get promoted. If your manager isn&amp;rsquo;t
a great salesperson, you have to make sure others know you.&lt;/p>
&lt;/blockquote>
&lt;p>+1.&lt;/p>
&lt;blockquote>
&lt;p>Getting promoted at BigTech is one of those areas in life that isn&amp;rsquo;t based on
merit.&lt;/p>
&lt;p>Hard work ≠ reward. The &amp;ldquo;smart work&amp;rdquo; that actually gets you promoted isn&amp;rsquo;t
about pushing your project forward; it&amp;rsquo;s about pushing yourself forward.&lt;/p>
&lt;/blockquote>
&lt;p>s/BigTech/Tech&lt;/p>
&lt;p>Or, even: s/BigTech/any company whatsoever&lt;/p>
&lt;p>The only bit I&amp;rsquo;ll add: motivation / passion / enthusiasm does matter, and makes
a huge difference. That&amp;rsquo;s a topic for another post though.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>For some reason he chose to omit naming the company, even though it&amp;rsquo;s
pretty obvious to find it out as he uses his real / full name, go figure 🤷.
That said, as good &lt;a href="https://en.wikipedia.org/wiki/Etiquette_in_technology#Netiqauette">blogging
etiquette&lt;/a>,
I won&amp;rsquo;t name it directly either.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Pick your poison.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>Not continuously sustainable, but most certainly doable in
&lt;a href="https://github.blog/developer-skills/career-growth/how-to-get-in-the-flow-while-coding-and-why-its-important/">bursts&lt;/a>.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4">
&lt;p>See &lt;a href="https://news.ycombinator.com/item?id=20374289">HN&lt;/a> and &lt;a href="https://rpadovani.com/no-heroes">this
post&lt;/a> by Ricardo Padovani.&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:5">
&lt;p>I mean, whenever you&amp;rsquo;re changing teams internally and/or actively
interviewing, you do have the possibility to get to know your future
manager(s). Therefore it&amp;rsquo;s not only luck, there&amp;rsquo;s a bit of a &amp;ldquo;vibe&amp;rdquo; checking
as well.&amp;#160;&lt;a href="#fnref:5" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Using keep-sorted to keep your ~/.gitconfig tidy</title><link>https://perrotta.dev/2025/03/using-keep-sorted-to-keep-your-~/.gitconfig-tidy/</link><pubDate>Thu, 06 Mar 2025 22:53:23 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/using-keep-sorted-to-keep-your-~/.gitconfig-tidy/</guid><description>&lt;p>I tend to sort my
&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.gitconfig">&lt;code>~/.gitconfig&lt;/code>&lt;/a>
headings to keep the config tidy.&lt;/p>
&lt;p>An example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># https://git-scm.com/docs/git-rerere&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[rerere]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">autoUpdate&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">	enabled = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[status]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Show individual files in untracked directories.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">showUntrackedFiles&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">all
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">	short = true
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">	branch = true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[submodule]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Clone new submodules in parallel with as many jobs.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">fetchJobs&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This was done manually. Until&amp;hellip;today.&lt;/p>
&lt;p>It has just occurred to me&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> I could use
&lt;a href="https://github.com/google/keep-sorted">keep-sorted&lt;/a> with the headings.&lt;/p>
&lt;blockquote>
&lt;p>Previously:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://perrotta.dev/2024/12/keep-sorted/">keep-sorted&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://perrotta.dev/2024/12/pre-commit/">pre-commit&lt;/a>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>But&amp;hellip;how?!&lt;/p>
&lt;p>The usage to sort, say, aliases, is quite straightforward&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;pre tabindex="0">&lt;code>[alias]
	# keep-sorted begin
	bd = !branch=&amp;#34;$(git branch --show-current)&amp;#34; &amp;amp;&amp;amp; git default &amp;amp;&amp;amp; git branch -D &amp;#34;${branch:-$1}&amp;#34;
	blank = desc -m \&amp;#34;blank commit\&amp;#34;
	cm = commit
	co = checkout
	cp = cherry-pick
	dc = diff --cached
	default = !git checkout main &amp;amp;&amp;gt;/dev/null || git checkout master
	desc = commit --allow-empty -n
	emerge = !git add -A . &amp;amp;&amp;amp; git amend -n &amp;amp;&amp;amp; git pushm --force-with-lease
	nb = switch --create
 [...]
	# keep-sorted finish
&lt;/code>&lt;/pre>&lt;p>How can you apply the same technique to headings?&lt;/p>
&lt;p>The out-of-the-box utilization is OK-ish, but not great:&lt;/p>
&lt;p>From:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted begin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[fetch]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">prune&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[help]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">autocorrect&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[format]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Automatically sign-off patches when using format-patch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">signoff&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted finish&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[fetch]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">prune&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[format]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Automatically sign-off patches when using format-patch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">signoff&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[help]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">autocorrect&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(including the blank line at the top)&lt;/p>
&lt;p>It turns out all we have to do is a little bit of tweaking:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted begin block=yes newline_separated=yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[fetch]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">prune&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[help]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">autocorrect&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[format]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Automatically sign-off patches when using format-patch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">signoff&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted finish&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;which then becomes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted begin block=yes newline_separated=yes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[fetch]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">prune&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[format]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># Automatically sign-off patches when using format-patch.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">signoff&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[help]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">autocorrect&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted finish&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>How nice!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Can you even imagine? Having original ideas? In 2025? Without LLMs?! Is
this even real??&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I replaced &lt;code>start -&amp;gt; begin&lt;/code> and &lt;code>end -&amp;gt; finish&lt;/code> otherwise &lt;code>keep-sorted&lt;/code>
would sort this blog post itself. If you copy and paste this example,
remember to change the words back to the original ones.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Create a git commit with multiple contributors</title><link>https://perrotta.dev/2025/03/create-a-git-commit-with-multiple-contributors/</link><pubDate>Mon, 03 Mar 2025 14:55:23 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/create-a-git-commit-with-multiple-contributors/</guid><description>&lt;ul>
&lt;li>&lt;strong>Step 1&lt;/strong>: Create a commit / pull request as usual.&lt;/li>
&lt;li>&lt;strong>Step 2&lt;/strong>: Collaborate 🪄. Different people push to the same remote branch.&lt;/li>
&lt;li>&lt;strong>Step 3&lt;/strong>: Once it&amp;rsquo;s done, add as many git footer elements as needed, like in
the following commit message example:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>feat: adopt time machine API

Address one of our main feature requests.

Allow users to go back in time by integrating with gravitational://infty.improbability/

Co-authored-by: Marvin &amp;lt;marv_is_happy@in.space&amp;gt;
Co-authored-by: Zaphod Beeblebrox &amp;lt;zaph@in.space&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Ideally, sort the &lt;code>Co-authored-by&lt;/code> field alphabetically.&lt;/p>
&lt;p>Sources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors">https://docs.github.com/en/pull-requests/committing-changes-to-your-project/creating-and-editing-commits/creating-a-commit-with-multiple-authors&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/7442112/how-to-attribute-a-single-commit-to-multiple-developers">https://stackoverflow.com/questions/7442112/how-to-attribute-a-single-commit-to-multiple-developers&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>gh pr view</title><link>https://perrotta.dev/2025/02/gh-pr-view/</link><pubDate>Tue, 25 Feb 2025 11:46:06 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/gh-pr-view/</guid><description>&lt;p>When working on a local git branch that has a github PR associated to it, at
some point you&amp;rsquo;ll want to open its pull request page.&lt;/p>
&lt;p>If you have the &lt;a href="https://cli.github.com/">github CLI&lt;/a> installed (&lt;code>gh&lt;/code>), you can do so with &lt;code>gh pr view --web&lt;/code>.&lt;/p>
&lt;p>If you don&amp;rsquo;t pass &lt;code>--web&lt;/code>, then it will simply output markdown.&lt;/p></description></item><item><title>Google Meet: dashes</title><link>https://perrotta.dev/2025/02/google-meet-dashes/</link><pubDate>Fri, 21 Feb 2025 17:02:45 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/google-meet-dashes/</guid><description>&lt;p>Whenever you need to join a Google Meet like &lt;a href="https://meet.google.com/aaa-bbbb-ccc">https://meet.google.com/aaa-bbbb-ccc&lt;/a> in a
conference room, instead of typing &lt;code>aaa-bbbb-ccc&lt;/code>, you can type just
&lt;code>aaabbbbccc&lt;/code>, i.e. the original meeting ID without the dashes.&lt;/p>
&lt;p>It saves a bit of time!&lt;/p></description></item><item><title>Kill the Newsletter</title><link>https://perrotta.dev/2025/02/kill-the-newsletter/</link><pubDate>Thu, 20 Feb 2025 15:34:30 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/kill-the-newsletter/</guid><description>&lt;p>I don&amp;rsquo;t like to sign up for newsletters. They are too noisy, pollute my inbox,
and have a lot of tracking built-in.&lt;/p>
&lt;p>Instead, I prefer RSS.&lt;/p>
&lt;p>Most newsletters provide a way to subscribe to them via RSS. Notably, Medium and
Substack do so. Most&amp;hellip;but not all.&lt;/p>
&lt;p>What to do when the only option is a newsletter? A popular example: James
Clear, author of Atomic Habits, with his &lt;a href="https://jamesclear.com/newsletter">3-2-1
Thursday&lt;/a> newsletter.&lt;/p>
&lt;p>Use &lt;a href="https://ktnrs.com/">Kill the Newsletter&lt;/a> by Leandro Facchinetti.&lt;/p>
&lt;p>Usage is quite simple:&lt;/p>
&lt;ul>
&lt;li>create a new entry e.g. &amp;ldquo;foo&amp;rdquo;&lt;/li>
&lt;li>it will generate an email e.g. &lt;code>abcdef@ktnrs.com&lt;/code>&lt;/li>
&lt;li>it will generate a RSS feed e.g. &lt;code>https://ktnrs.com/feeds/abcdef.xml&lt;/code>&lt;/li>
&lt;li>use the email to sign up for the newsletter&lt;/li>
&lt;li>use the RSS feed to subscribe to in your feed reader&lt;/li>
&lt;/ul>
&lt;p>And that&amp;rsquo;s it!&lt;/p>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t share these addresses.&lt;/p>
&lt;p>They contain an identifier that other people could use to send you spam and to
control your newsletter subscriptions.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s &lt;a href="https://github.com/leafac/kill-the-newsletter">open source&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Convert email newsletters into Atom feeds&lt;/p>
&lt;/blockquote>
&lt;p>Most blogs I subscribe to provide RSS feeds out-of-the-box, therefore I don&amp;rsquo;t
see the need to self-host this service merely for a few one-offs.&lt;/p></description></item><item><title>git: prune gone upstream branches</title><link>https://perrotta.dev/2025/02/git-prune-gone-upstream-branches/</link><pubDate>Thu, 20 Feb 2025 11:43:04 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/git-prune-gone-upstream-branches/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Delete all local git branches whose upstream counterparts
have already been merged (&amp;ldquo;gone&amp;rdquo; in git lingo).&lt;/p>
&lt;p>Augment your &lt;code>~/.gitconfig&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[alias]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e06c75">prune-gone&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">!git fetch -p &amp;amp;&amp;amp; git branch -vv | awk &amp;#39;/: gone]/{print $1}&amp;#39; | xargs -r git branch -D&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>git prune-gone&lt;/code>. That&amp;rsquo;s it.&lt;/p>
&lt;p>It lists all branches that are &amp;ldquo;gone&amp;rdquo; and deletes them.&lt;/p>
&lt;p>I have another git alias (&lt;code>'world'&lt;/code>) to do all this sort of &lt;em>clean-up&lt;/em> tasks at
once:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[alias]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">world&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">!git fetch --all &amp;amp;&amp;amp; git remote prune origin &amp;amp;&amp;amp; git prune-gone&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>zsh: setopt magic_equal_subst</title><link>https://perrotta.dev/2025/02/zsh-setopt-magic_equal_subst/</link><pubDate>Tue, 18 Feb 2025 13:52:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/zsh-setopt-magic_equal_subst/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Write the following command line in &lt;code>zsh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% terraform plan -var-file&lt;span style="color:#56b6c2">=&lt;/span>../../../config/global-dns-changer-
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now press &lt;code>&amp;lt;TAB&amp;gt;&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Expected&lt;/strong>: Filename expansion.&lt;/p>
&lt;p>&lt;strong>Observed&lt;/strong>:&lt;/p>
&lt;pre tabindex="0">&lt;code>No matches for: `filename&amp;#39; or `file&amp;#39;
&lt;/code>&lt;/pre>&lt;p>Ugh. How about some magic 🪄?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>setopt magic_equal_subst
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% terraform plan -var-file&lt;span style="color:#56b6c2">=&lt;/span>../../../config/global-dns-changer-&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completing file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>global-dns-changer-&lt;span style="color:#56b6c2">{&lt;/span>foo&lt;span style="color:#56b6c2">}&lt;/span>.tfvars global-dns-changer-&lt;span style="color:#56b6c2">{&lt;/span>bar&lt;span style="color:#56b6c2">}&lt;/span>.tfvars
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Yay!&lt;/p>
&lt;p>There&amp;rsquo;s a workaround if you don&amp;rsquo;t want to set the aforementioned option. Just
remove the &lt;code>=&lt;/code> character:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% terraform plan -var-file ../../../config/global-dns-changer-&amp;lt;TAB&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>completing file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>global-dns-changer-&lt;span style="color:#56b6c2">{&lt;/span>foo&lt;span style="color:#56b6c2">}&lt;/span>.tfvars global-dns-changer-&lt;span style="color:#56b6c2">{&lt;/span>bar&lt;span style="color:#56b6c2">}&lt;/span>.tfvars
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I find it&amp;rsquo;s more convenient to have this option work in both situations though.&lt;/p>
&lt;p>(via &lt;a href="https://www.reddit.com/r/zsh/comments/10o018l/glob_expansion_and_tab_completion_after_the_sign/">Reddit&lt;/a>)&lt;/p></description></item><item><title>Quick look preview YAML files on macOS</title><link>https://perrotta.dev/2025/02/quick-look-preview-yaml-files-on-macos/</link><pubDate>Tue, 18 Feb 2025 13:18:33 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/quick-look-preview-yaml-files-on-macos/</guid><description>&lt;p>You may be familiar with &lt;a href="https://support.apple.com/en-gb/guide/mac-help/mh14119/mac">Quick
Look&lt;/a> on macOS.&lt;/p>
&lt;p>On Finder, select a file, then press the space bar. A preview pop-up appears,
wherein you can take a quick glance at the file contents.&lt;/p>
&lt;p>Out-of-the-box many file formats are supported, even for images.&lt;/p>
&lt;p>For developers, two popular formats are not supported:&lt;/p>
&lt;ul>
&lt;li>markdown&lt;/li>
&lt;li>yaml&lt;/li>
&lt;/ul>
&lt;p>I&amp;rsquo;ve been using &lt;a href="https://github.com/sbarex/QLMarkdown">qlmarkdown&lt;/a> for markdown,
and it works well. There&amp;rsquo;s a homebrew package for it: &lt;code>brew install --cask qlmarkdown&lt;/code>.&lt;/p>
&lt;p>Lately I wanted to add YAML as well. I found
&lt;a href="https://github.com/smittytone/PreviewYaml">PreviewYaml&lt;/a>. It&amp;rsquo;s MIT-Licensed and
open source, but there&amp;rsquo;s no pre-built package for it, and it is not on homebrew
either. The author provides an app in the macOS App Store, but it&amp;rsquo;s not free.&lt;/p>
&lt;p>Upon digging deeper, I found
&lt;a href="https://github.com/sbarex/SourceCodeSyntaxHighlight">https://github.com/sbarex/SourceCodeSyntaxHighlight&lt;/a>. It supports pretty much
every popular extension you&amp;rsquo;ll need as a developer (including &lt;code>.yaml&lt;/code>!). There&amp;rsquo;s
a package for it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install --no-quarantine syntax-highlight
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is simple and works as advertised.&lt;/p>
&lt;p>Should I uninstall &lt;code>qlmarkdown&lt;/code> then? Not really:&lt;/p>
&lt;blockquote>
&lt;p>Markdown files (.md, .rmd): please use QLMarkdown which allows you to choose
whether to display formatted output or the highlighted source code.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Markdown files are not supported&lt;/p>
&lt;p>This is a deliberate choice. Most users want to see the formatted output and
not the source code of their markdown files. If you need to view the markdown
files (also with the possibility of choosing whether to show the formatting or
the source code) I have developed QLMarkdown.&lt;/p>
&lt;/blockquote>
&lt;p>How nice! It turns out both extensions were developed by the same author. Thank
you, @sbarex!&lt;/p></description></item><item><title>Notify search engines of new posts</title><link>https://perrotta.dev/2025/02/notify-search-engines-of-new-posts/</link><pubDate>Tue, 18 Feb 2025 11:33:19 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/02/notify-search-engines-of-new-posts/</guid><description>&lt;p>I have the following rule in the &lt;a href="https://just.systems/man/en/">&lt;code>Justfile&lt;/code>&lt;/a> of
this blog:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-just" data-lang="just"># Ping Google and Bing about changes in the sitemap
ping sitemap=&amp;#34;https://perrotta.dev/sitemap.xml&amp;#34;:
	curl -sS -o /dev/null &amp;#34;https://www.google.com/ping?sitemap={{ sitemap }}&amp;#34;
	curl -sS -o /dev/null &amp;#34;https://www.bing.com/ping?sitemap={{ sitemap }}&amp;#34;
&lt;/code>&lt;/pre>&lt;p>It is invoked with &lt;code>$ just ping&lt;/code>.&lt;/p>
&lt;p>Recently I added it to CI (github actions):&lt;/p>
&lt;pre tabindex="0">&lt;code>steps:
 - name: Build
 run: just build
 - name: Deploy
 [...]
 - name: Ping search engines
 run: just ping
&lt;/code>&lt;/pre>&lt;p>Whenever I publish a new post, a sitemap notification is triggered.&lt;/p>
&lt;p>When writing this post, I learned this is just wishful thinking.&lt;/p>
&lt;p>Upon visiting &lt;a href="https://google.com/ping">https://google.com/ping&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Sitemaps ping is deprecated. See
&lt;a href="https://developers.google.com/search/blog/2023/06/sitemaps-lastmod-ping">https://developers.google.com/search/blog/2023/06/sitemaps-lastmod-ping&lt;/a>.&lt;/p>
&lt;p>Error 404&lt;/p>
&lt;/blockquote>
&lt;p>Deeper into the rabbit hole:&lt;/p>
&lt;blockquote>
&lt;p>The Sitemaps Protocol was introduced in 2005 to help search engines with the
discovery of new URLs, and also to help with scheduling new crawls of already
discovered URLs. It&amp;rsquo;s a wildly popular protocol that hasn&amp;rsquo;t changed for over
15 years. While the general idea is still useful, some aspects have become
less practical in today&amp;rsquo;s internet.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>To that end, we&amp;rsquo;re announcing deprecation of the sitemaps &amp;ldquo;ping&amp;rdquo; endpoint and
providing additional recommendations for the use of the lastmod element.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>The sitemap protocol defines an unauthenticated REST method for submitting
sitemaps to search engines. Our internal studies—and also other search engines
such as Bing—tell us that at this point these unauthenticated sitemap
submissions are not very useful. In fact, in the case of Google Search, the
vast majority of the submissions lead to spam. To wit, we&amp;rsquo;re deprecating our
support for sitemaps ping and the endpoint will stop functioning in 6 months.
You can still submit your sitemaps through robots.txt and Search Console, but
the HTTP requests (&amp;ldquo;pings&amp;rdquo;) to the deprecated REST endpoint will result in a
404 error. Any existing code or plugins which use this endpoint will not cause
problems for Google Search; you don&amp;rsquo;t need to make any changes (but using the
endpoint will also not do anything useful).&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ll keep pinging it anyway, the cost is virtually free. You can&amp;rsquo;t just
&lt;a href="https://killedbygoogle.com/">deprecate&lt;/a> features people &lt;a href="https://www.hyrumslaw.com/">rely
on&lt;/a>.&lt;/p></description></item></channel></rss>