<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on ¬ just serendipity 🍀</title><link>https://perrotta.dev/tags/dev/</link><description>Recent content in Dev on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sat, 24 May 2025 17:29:48 +0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>pre-commit: add hugo build</title><link>https://perrotta.dev/2025/05/pre-commit-add-hugo-build/</link><pubDate>Sat, 24 May 2025 17:29:48 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/pre-commit-add-hugo-build/</guid><description>&lt;p>Sometimes I make changes to this blog that yield build errors with its static
site generator (&lt;a href="https://gohugo.io/">hugo&lt;/a>).&lt;/p>
&lt;p>It&amp;rsquo;s trivial to spot these changes with a simple &lt;code>hugo build&lt;/code>, but &lt;a href="https://perrotta.dev/2025/03/yolo-debug-only-after-push/">I don&amp;rsquo;t always
run it&lt;/a>.&lt;/p>
&lt;p>Here&amp;rsquo;s what a typical error looks like:&lt;/p>
&lt;pre tabindex="0">&lt;code>% hugo build
Start building sites …
hugo v0.147.5+extended+withdeploy darwin/arm64 BuildDate=2025-05-22T11:37:19Z VendorInfo=brew

ERROR [en] REF_NOT_FOUND: Ref &amp;#34;nonexistent/2025-03-24-maccy-pin-items&amp;#34;: &amp;#34;/Users/tperrotta/Workspace/perrotta.dev/content/posts/2025-05-16-espanso-hello-world.md:10:14&amp;#34;: page not found
Total in 242 ms
Error: error building site: logged 1 error(s)
&lt;/code>&lt;/pre>&lt;p>The same happens when invoking &lt;a href="https://just.systems/man/en/">&lt;code>just&lt;/code>&lt;/a>, as you
would expect:&lt;/p>
&lt;pre tabindex="0">&lt;code>% just build
hugo --environment production --gc --minify
Start building sites …
hugo v0.147.5+extended+withdeploy darwin/arm64 BuildDate=2025-05-22T11:37:19Z VendorInfo=brew

ERROR [en] REF_NOT_FOUND: Ref &amp;#34;nonexistent/2025-03-24-maccy-pin-items&amp;#34;: &amp;#34;/Users/tperrotta/Workspace/perrotta.dev/content/posts/2025-05-16-espanso-hello-world.md:10:14&amp;#34;: page not found
Total in 280 ms
Error: error building site: logged 1 error(s)
error: Recipe `build` failed on line 17 with exit code 1
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Problem statement&lt;/strong>: catch such build errors at git pre-commit time.&lt;/p>
&lt;p>This is trivial with a &lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a> hook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;{email redacted}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Sat May 24 17:26:59 2025 +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pre-commit: add just build
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git .pre-commit-config.yaml .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index 60eb2022..623e135d 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -112,5 +112,10 @@ repos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> language: pygrep
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> types:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - markdown
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ - id: hugo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ name: Hugo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ language: system
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ entry: just build
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ pass_filenames: false
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s the end result:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git commit -m &lt;span style="color:#98c379">&amp;#34;test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Check hooks apply to the repository.............................................&lt;span style="color:#56b6c2">(&lt;/span>no files to check&lt;span style="color:#56b6c2">)&lt;/span>Skipped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Check &lt;span style="color:#c678dd">for&lt;/span> useless excludes......................................................&lt;span style="color:#56b6c2">(&lt;/span>no files to check&lt;span style="color:#56b6c2">)&lt;/span>Skipped
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>...&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Forbid usage of UTM analytics / tracking............................................................Passed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hugo................................................................................................Failed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- hook id: hugo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e5c07b">exit&lt;/span> code: &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo --environment production --gc --minify
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Start building sites …
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hugo v0.147.5+extended+withdeploy darwin/arm64 &lt;span style="color:#e06c75">BuildDate&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>2025-05-22T11:37:19Z &lt;span style="color:#e06c75">VendorInfo&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>brew
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ERROR &lt;span style="color:#56b6c2">[&lt;/span>en&lt;span style="color:#56b6c2">]&lt;/span> REF_NOT_FOUND: Ref &lt;span style="color:#98c379">&amp;#34;a/2024-12-23-unbuffer&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;/Users/tperrotta/Workspace/perrotta.dev/content/posts/2025-05-24-watch-with-color.md:54:54&amp;#34;&lt;/span>: page not found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Total in &lt;span style="color:#d19a66">276&lt;/span> ms
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error: error building site: logged &lt;span style="color:#d19a66">1&lt;/span> error&lt;span style="color:#56b6c2">(&lt;/span>s&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>error: Recipe &lt;span style="color:#98c379">`&lt;/span>build&lt;span style="color:#98c379">`&lt;/span> failed on line &lt;span style="color:#d19a66">19&lt;/span> with &lt;span style="color:#e5c07b">exit&lt;/span> code &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>PostgreSQL major version upgrade on Alpine Linux</title><link>https://perrotta.dev/2025/05/postgresql-major-version-upgrade-on-alpine-linux/</link><pubDate>Sat, 24 May 2025 16:00:23 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/postgresql-major-version-upgrade-on-alpine-linux/</guid><description>&lt;h2 id="problem-statement">Problem statement&lt;/h2>
&lt;p>Given Alpine Linux 3.22 running PostgreSQL 16, upgrade to PostgreSQL 17. For
this specific example, consider a &lt;a href="https://miniflux.app/">&lt;code>miniflux&lt;/code>&lt;/a> database.&lt;/p>
&lt;h2 id="procedure">Procedure&lt;/h2>
&lt;p>Install PostgreSQL 17:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk add postgres
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can coexist with &lt;code>postgres16&lt;/code>.&lt;/p>
&lt;p>Stop the PostgreSQL daemon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas service postgresql stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you navigate to the Miniflux server with your browser, it will fail, as
expected:&lt;/p>
&lt;pre tabindex="0">&lt;code>store: unable to create app session: dial tcp [::1]:5432: connect: connection refused
&lt;/code>&lt;/pre>&lt;p>Change the PostgreSQL system version to the desired one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas pg_versions set-default &lt;span style="color:#d19a66">17&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change to the root user, for convenience, then change to the existing postgresql
directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas su
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> /var/lib/postgresql/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Prepare files and directories for the upgrade:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> 16/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mv data olddata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> ../
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mkdir 17/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> 17/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mkdir data tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% chown postgres:postgres data tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change to the &lt;code>postgres&lt;/code> user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% su postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> tmp/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initialize the new cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% initdb -D /var/lib/postgresql/17/data --locale&lt;span style="color:#56b6c2">=&lt;/span>en_US.UTF-8 --encoding&lt;span style="color:#56b6c2">=&lt;/span>UTF8 &lt;span style="color:#56b6c2">[&lt;/span>--data-checksums&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The files belonging to this database system will be owned by user &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This user must also own the server process.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The database cluster will be initialized with locale &lt;span style="color:#98c379">&amp;#34;en_US.UTF-8&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The default text search configuration will be &lt;span style="color:#e5c07b">set&lt;/span> to &lt;span style="color:#98c379">&amp;#34;english&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Data page checksums are disabled.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fixing permissions on existing directory /var/lib/postgresql/17/data ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>creating subdirectories ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting dynamic shared memory implementation ... posix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#98c379">&amp;#34;max_connections&amp;#34;&lt;/span> ... &lt;span style="color:#d19a66">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#98c379">&amp;#34;shared_buffers&amp;#34;&lt;/span> ... 128MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#e5c07b">time&lt;/span> zone ... America/Toronto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>creating configuration files ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>running bootstrap script ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>performing post-bootstrap initialization ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>syncing data to disk ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initdb: warning: enabling &lt;span style="color:#98c379">&amp;#34;trust&amp;#34;&lt;/span> authentication &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e5c07b">local&lt;/span> connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next &lt;span style="color:#e5c07b">time&lt;/span> you run initdb.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Success.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the previous command I chose to omit &lt;code>--data-checksums&lt;/code>, otherwise I get the
following error:&lt;/p>
&lt;pre tabindex="0">&lt;code>old cluster does not use data checksums but the new one does
Failure, exiting
&lt;/code>&lt;/pre>&lt;p>Upgrade the new cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% pg_upgrade -b /usr/libexec/postgresql16/ -B /usr/libexec/postgresql17/ -d /var/lib/postgresql/16/olddata/ -D /var/lib/postgresql/17/data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Performing Consistency Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking cluster versions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database user is the install user ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database connection settings ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> prepared transactions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> contrib/isn with bigint-passing mismatch ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking data &lt;span style="color:#e5c07b">type&lt;/span> usage ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating dump of global objects ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating dump of database schemas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> presence of required libraries ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database user is the install user ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> prepared transactions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> new cluster tablespace directories ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>If pg_upgrade fails after this point, you must re-initdb the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>new cluster before continuing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Performing Upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting locale and encoding &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Analyzing all rows in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Freezing all rows in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_xact ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_xact to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting oldest XID &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next transaction ID and epoch &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_multixact/offsets ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_multixact/offsets to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_multixact/members ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_multixact/members to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next multixact ID and offset &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Resetting WAL archives ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting frozenxid and minmxid counters in new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restoring global objects in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restoring database schemas in the new cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying user relation files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next OID &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sync data directory to disk ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating script to delete old cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> extension updates ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade Complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Optimizer statistics are not transferred by pg_upgrade.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Once you start the new server, consider running:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/libexec/postgresql17/vacuumdb --all --analyze-in-stages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running this script will delete the old cluster&amp;#39;s data files:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./delete_old_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now clean up:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ^D &lt;span style="color:#7f848e"># go back to the root user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% /var/lib/postgresql/17/tmp/delete_old_cluster.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% rmdir /var/lib/postgresql/16/ &lt;span style="color:#7f848e"># it should be empty by now&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;re curious about this script, it&amp;rsquo;s a simple one-liner:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf &lt;span style="color:#98c379">&amp;#39;/var/lib/postgresql/16/olddata&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, let&amp;rsquo;s get the cluster back up and vacuum it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ^D &lt;span style="color:#7f848e"># go back to your main user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas service postgresql start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas su - postgres -c &lt;span style="color:#98c379">&amp;#39;/usr/libexec/postgresql17/vacuumdb --all --analyze-in-stages&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point, Miniflux should be working again.
Navigate to &lt;code>/about&lt;/code> and verify its database version: &lt;code>Postgres version: 17.5&lt;/code>.&lt;/p>
&lt;p>Last step, delete the previous package:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk del postgresql16 postgres16-contrib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Double-check the newer version is still installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% apk list -I | grep postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libpq-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-common-1.2-r1 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql-common&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-common-openrc-1.2-r1 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql-common&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-zsh-completion-5.9-r5 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>zsh&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT-Modern-Variant AND GPL-2.0-only&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-client-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-contrib-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-openrc-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we&amp;rsquo;re done!&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.alpinelinux.org/wiki/Postgresql">https://wiki.alpinelinux.org/wiki/Postgresql&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://beune.dev/posts/upgrade-alpine-postgresql/">https://beune.dev/posts/upgrade-alpine-postgresql/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Tailspin</title><link>https://perrotta.dev/2025/05/tailspin/</link><pubDate>Sat, 24 May 2025 15:17:27 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/tailspin/</guid><description>&lt;p>&lt;a href="https://github.com/bensadeh/tailspin">tailspin&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>tailspin&lt;/code> works by reading through a log file line by line, running a series
of regexes against each line. The regexes recognize patterns you expect to
find in a logfile, like dates, numbers, severity keywords and more.&lt;/p>
&lt;p>&lt;code>tailspin&lt;/code> does not make any assumptions on the format or position of the
items it wants to highlight. For this reason, it requires no configuration and
the highlighting will work consistently across different logfiles.&lt;/p>
&lt;/blockquote>
&lt;p>The binary name is &lt;code>tspin(1)&lt;/code>, not &lt;code>tailspin(1)&lt;/code> (confusing!). MacOS has an
existing &lt;code>/usr/bin/tailspin&lt;/code> binary, which appears to be kernel-related.&lt;/p>
&lt;p>It supports &lt;code>-f&lt;/code> (&lt;code>--follow&lt;/code>), just like &lt;code>tail(1)&lt;/code>. In fact, you can think of
&lt;code>tspin -f&lt;/code> as a drop-in replacement for &lt;code>tail -f&lt;/code>.&lt;/p>
&lt;p>It is available in &lt;a href="https://repology.org/project/tailspin/versions">most package
managers&lt;/a>.&lt;/p>
&lt;p>It supports custom highlight rules (groups) via a &lt;code>~/.config/tailspin&lt;/code> file.&lt;/p>
&lt;p>Usage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># against a log file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% tspin -f /var/log/system.log
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># against a command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% kubectl logs mypod -n myns -f | tspin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># built-in highlighters showcase&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;2025-01-01 hello null true false 42 https://example.com?param1=foo&amp;amp;param2=bar ERROR WARNING WARN INFO 127.0.0.1 /etc/passwd foo=&amp;#39;bar&amp;#39;&amp;#34;&lt;/span> | tspin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s possible to add one-off highlighters from the command line (note: case
sensitive).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% tspin --highlight&lt;span style="color:#56b6c2">=&lt;/span>red:err,error,fail --highlight&lt;span style="color:#56b6c2">=&lt;/span>green:success,ok
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>watch with --color</title><link>https://perrotta.dev/2025/05/watch-with--color/</link><pubDate>Sat, 24 May 2025 14:40:07 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/watch-with--color/</guid><description>&lt;p>When using &lt;code>watch(1)&lt;/code> to monitor program output, colors will not be emitted by
default.&lt;/p>
&lt;p>Thankfully &lt;a href="https://man.archlinux.org/man/watch.1">&lt;code>watch(1)&lt;/code>&lt;/a> has a &lt;code>--color&lt;/code>
(or &lt;code>-c&lt;/code> flag).&lt;/p>
&lt;p>Still, when using it with e.g. &lt;a href="https://nodejs.org/api/test.html">&lt;code>node&lt;/code> tests&lt;/a>,
colors are not emitted:&lt;/p>
&lt;pre tabindex="0">&lt;code>% watch --color -- node mytest.js
Every 2.0s: node ex5.js MacBookAir: 14:43:06
 in 0.107s (0)
✔ toWasm (0.865792ms)
ℹ tests 1
ℹ suites 0
ℹ pass 1
ℹ fail 0
ℹ cancelled 0
ℹ skipped 0
ℹ todo 0
ℹ duration_ms 3.8805
&lt;/code>&lt;/pre>&lt;p>The command detects that it&amp;rsquo;s not attached to the terminal. :(&lt;/p>
&lt;p>How can we &lt;strong>force color output&lt;/strong> in this case?&lt;/p>
&lt;p>There&amp;rsquo;s no universal answer:&lt;/p>
&lt;ul>
&lt;li>Set &lt;a href="https://bixense.com/clicolors/">&lt;code>CLICOLOR=1&lt;/code>, &lt;code>CLICOLOR_FORCE=1&lt;/code>&lt;/a>&lt;/li>
&lt;li>See whether the program has a &lt;code>--color&lt;/code> flag. For example:
&lt;a href="https://git-scm.com/book/sv/v2/Customizing-Git-Git-Configuration">&lt;code>git&lt;/code>&lt;/a> and
&lt;a href="https://superuser.com/questions/665274/how-to-make-ls-color-its-output-by-default-without-setting-up-an-alias">&lt;code>ls&lt;/code>&lt;/a>
both support &lt;code>--color=always&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Another possibility, which is program agnostic, is to use an utility such as
&lt;a href="https://man.archlinux.org/man/unbuffer.1">&lt;code>unbuffer(1)&lt;/code>&lt;/a> from the &lt;a href="https://wiki.tcl-lang.org/page/Expect">TCL
Expect&lt;/a> package:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% watch --color -- unbuffer node mytest.js
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>unbuffer&lt;/code> solution is my favorite (&lt;a href="https://perrotta.dev/2024/12/unbuffer/">previously&lt;/a>).&lt;/p>
&lt;p>&lt;strong>Reference&lt;/strong>: &lt;a href="https://stackoverflow.com/questions/3793126/colors-with-unix-command-watch">Stack
Overflow&lt;/a>.&lt;/p></description></item><item><title>npx serve</title><link>https://perrotta.dev/2025/05/npx-serve/</link><pubDate>Sat, 24 May 2025 11:14:22 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/npx-serve/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/01/start-an-http-server-asap/">Previously&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Start an HTTP server ASAP&lt;/p>
&lt;/blockquote>
&lt;h2 id="option-5-use-node">Option #5: use &lt;code>node&lt;/code>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% npx serve
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://www.npmjs.com/package/serve">serve&lt;/a> comes from Vercel:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>serve&lt;/code> helps you serve a static site, single page application or just a static
file (no matter if on your device or on the local network). It also provides a
neat interface for listing the directory&amp;rsquo;s contents:&lt;/p>
&lt;p>The quickest way to get started is to just run npx serve in your project&amp;rsquo;s
directory.&lt;/p>
&lt;/blockquote></description></item><item><title>WebAssembly: hello world</title><link>https://perrotta.dev/2025/05/webassembly-hello-world/</link><pubDate>Sat, 24 May 2025 10:39:13 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/webassembly-hello-world/</guid><description>&lt;p>Today I am attending a WebAssembly workshop.&lt;/p>
&lt;p>&lt;a href="https://webassembly.org/">WebAssembly&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>WebAssembly (abbreviated &lt;em>Wasm&lt;/em>) is a binary instruction format for a
stack-based virtual machine. Wasm is designed as a portable compilation target
for programming languages, enabling deployment on the web for client and
server applications.&lt;/p>
&lt;/blockquote>
&lt;p>Given &lt;code>add.wat&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>(module
 ;; stack/forth syntax
 ;; looks like vanilla assembly
 (func $add (param $a i32) (param $b i32) (result i32)
 local.get $a
 local.get $b
 i32.add
 )

 ;; nested/lisp syntax
 ;; functional, parentheses hell
 (func $add-alt (param $a i32) (param $b i32) (result i32)
 (i32.add
 (local.get $a)
 (local.get $b))
 )

 (export &amp;#34;add&amp;#34; (func $add))
 (export &amp;#34;addAlt&amp;#34; (func $add-alt))
)
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;it adds two integers.
There are two implementations, they are equivalent.&lt;/p>
&lt;p>Install dependencies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install wabt wasm-tools
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can compile &lt;code>.wat&lt;/code> to &lt;code>.wasm&lt;/code> with one of:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% wat2wasm add.wat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% wasm-tools parse add.wat -o add.wasm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now how do we consume it? Create a &lt;code>test.js&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">test&lt;/span> &lt;span style="color:#e06c75">from&lt;/span> &lt;span style="color:#98c379">&amp;#34;node:test&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">assert&lt;/span> &lt;span style="color:#e06c75">from&lt;/span> &lt;span style="color:#98c379">&amp;#34;node:assert&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">fs&lt;/span> &lt;span style="color:#e06c75">from&lt;/span> &lt;span style="color:#98c379">&amp;#34;node:fs/promises&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">test&lt;/span>(&lt;span style="color:#98c379">&amp;#34;Instantiate add.wasm and call exported functions&amp;#34;&lt;/span>, &lt;span style="color:#c678dd">async&lt;/span> () =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">const&lt;/span> &lt;span style="color:#e06c75">bytes&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#c678dd">await&lt;/span> &lt;span style="color:#e06c75">fs&lt;/span>.&lt;span style="color:#e06c75">readFile&lt;/span>(&lt;span style="color:#98c379">&amp;#34;add.wasm&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">const&lt;/span> {&lt;span style="color:#e06c75">instance&lt;/span>} &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#c678dd">await&lt;/span> &lt;span style="color:#e06c75">WebAssembly&lt;/span>.&lt;span style="color:#e06c75">instantiate&lt;/span>(&lt;span style="color:#e06c75">bytes&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">const&lt;/span> {&lt;span style="color:#e06c75">add&lt;/span>, &lt;span style="color:#e06c75">addAlt&lt;/span>} &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">instance&lt;/span>.&lt;span style="color:#e06c75">exports&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert&lt;/span>.&lt;span style="color:#e06c75">equal&lt;/span>(&lt;span style="color:#e06c75">add&lt;/span>(&lt;span style="color:#d19a66">1&lt;/span>, &lt;span style="color:#d19a66">4&lt;/span>), &lt;span style="color:#d19a66">5&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert&lt;/span>.&lt;span style="color:#e06c75">equal&lt;/span>(&lt;span style="color:#e06c75">addAlt&lt;/span>(&lt;span style="color:#d19a66">10&lt;/span>, &lt;span style="color:#d19a66">40&lt;/span>), &lt;span style="color:#d19a66">50&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>});
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Execute it with &lt;code>node&lt;/code> (&lt;code>brew install node&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% node ex0.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✔ Instantiate add.wasm and call exported functions &lt;span style="color:#56b6c2">(&lt;/span>4.1875ms&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ tests &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ suites &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ pass &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ fail &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ cancelled &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ skipped &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ todo &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ℹ duration_ms 7.125625
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Explanation:&lt;/p>
&lt;ul>
&lt;li>&lt;code>bytes&lt;/code> reads the &lt;code>.wasm&lt;/code> file, nothing special&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/JavaScript_interface/instantiate_static">&lt;code>WebAssembly.instantiate&lt;/code>&lt;/a>:
compile and instantiate WebAssembly code&lt;/li>
&lt;li>access its
&lt;a href="https://developer.mozilla.org/en-US/docs/WebAssembly/Reference/JavaScript_interface/Module/exports_static">&lt;code>exports&lt;/code>&lt;/a>
field&lt;/li>
&lt;/ul>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wasmgroundup.com/">WebAssembly from the Ground up&lt;/a> by Mariano Guerra
&amp;amp; Patrick Dubroy
&lt;ul>
&lt;li>&lt;a href="https://wasmgroundup.com/workshop/">Workshop&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.w3.org/TR/2019/REC-wasm-core-1-20191205/">WebAssembly Core
Specification&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>mdsh: a markdown pre-processor</title><link>https://perrotta.dev/2025/05/mdsh-a-markdown-pre-processor/</link><pubDate>Fri, 23 May 2025 13:00:56 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/mdsh-a-markdown-pre-processor/</guid><description>&lt;p>&lt;a href="https://github.com/zimbatm/mdsh">mdsh&lt;/a>, a markdown shell pre-processor;&lt;/p>
&lt;blockquote>
&lt;p>The mdsh project describes a Markdown language extension that can be used to
automate some common tasks in README.md files. Quite often I find myself
needing to embed a snippet of code or markdown from a different file. Or I
want to show the output of a command. In both cases this can be done manually,
but what all you had to do was run mdsh and have the file updated
automatically?&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>mdsh&lt;/code> enables keeping command outputs in markdown files up-to-date.&lt;/p>
&lt;p>It&amp;rsquo;s similar to &lt;a href="https://jupyter.org/">Jupyter Notebooks&lt;/a> (ipython
notebooks) in Python.&lt;/p>
&lt;h2 id="sample-usage">Sample usage&lt;/h2>
&lt;p>List all files within the repository that satisfy certain criteria:&lt;/p>
&lt;pre tabindex="0">&lt;code>`&amp;gt; find apps/overlays -name kustomization.yaml | cut -d&amp;#39;/&amp;#39; -f3 | sed -e &amp;#39;s/^/1. /&amp;#39; | sort -d`

&amp;lt;!-- BEGIN mdsh --&amp;gt;
1. g02
1. g03
1. g05
&amp;lt;!-- END mdsh --&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="advanced-usage">Advanced usage&lt;/h2>
&lt;p>List all pending action items (&lt;code>TODOs&lt;/code>) in this repository:&lt;/p>
&lt;pre tabindex="0">&lt;code>`&amp;gt; set +o pipefail &amp;amp;&amp;amp; files=$(grep -ErHn &amp;#39;(FIXME|TODO):&amp;#39; apps | grep -iv &amp;#34;enable auto sync&amp;#34; | sort -d -u) &amp;amp;&amp;amp; if [ -z &amp;#34;$files&amp;#34; ]; then echo &amp;#34;None&amp;#34;; else echo &amp;#34;$files&amp;#34; | sed -e &amp;#39;s/^/- /&amp;#39;; fi`

&amp;lt;!-- BEGIN mdsh --&amp;gt;
- apps/base/email/email.yaml:48: # TODO: Consider moving to the base ArgoCD chart.
- apps/base/sms/sms.yaml:58: # TODO: Consider moving to the base ArgoCD chart.
&amp;lt;!-- END mdsh --&amp;gt;
&lt;/code>&lt;/pre>&lt;p>It&amp;rsquo;s an inline shell expression on steroids, but there&amp;rsquo;s nothing special about
it. In fact, you&amp;rsquo;re not limited to the shell: it&amp;rsquo;s perfectly fine to call an
external program like &lt;code>perl&lt;/code> or &lt;code>python&lt;/code> or &lt;code>ruby&lt;/code> (e.g. to manipulate regular
expressions).&lt;/p>
&lt;h2 id="integration">Integration&lt;/h2>
&lt;p>The value of &lt;code>mdsh&lt;/code> lies in keeping its output always up-to-date. There are
multiple ways to accomplish that. The most popular ones are:&lt;/p>
&lt;ul>
&lt;li>via a CI job (e.g. a github action, a bitbucket pipeline)&lt;/li>
&lt;li>via a git pre-commit hook&lt;/li>
&lt;/ul>
&lt;p>I prefer &lt;a href="https://pre-commit.com">pre-commit&lt;/a>.&lt;/p>
&lt;p>A sample config looks like this (&lt;code>.pre-commit-config.yaml&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/zimbatm/mdsh.git
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: 4b8c0ca49c96d1a3ffaad30788e6c4ebb60b2bbf # frozen&lt;/span>: v0.9.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: mdsh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">always_run&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">files&lt;/span>: ^README.md$
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Web browser privacy tests</title><link>https://perrotta.dev/2025/05/web-browser-privacy-tests/</link><pubDate>Fri, 23 May 2025 01:13:56 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/web-browser-privacy-tests/</guid><description>&lt;p>&lt;a href="https://privacytests.org/">Privacy Tests&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Most web browsers leak your identity and your browsing history, but some
browsers are more leaky than others.&lt;/p>
&lt;p>The goal of PrivacyTests.org is to understand in detail: what data is each web
browser leaking? Which web browsers offer the best privacy protections?&lt;/p>
&lt;p>PrivacyTests.org is an open-source initiative that subjects popular web
browsers to a suite of automated tests. These tests are designed to audit web
browsers&amp;rsquo; privacy properties in an unbiased manner. The results of the tests
are made public to help users make an informed choice about which browser to
use, and to encourage browser makers to fix leaks of private user data.&lt;/p>
&lt;/blockquote>
&lt;p>I wasn&amp;rsquo;t aware of &lt;a href="https://mullvad.net/en/browser">Mullvad Browser&lt;/a>.&lt;/p></description></item><item><title>bash: set a trap to log errors</title><link>https://perrotta.dev/2025/05/bash-set-a-trap-to-log-errors/</link><pubDate>Thu, 22 May 2025 13:41:43 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/bash-set-a-trap-to-log-errors/</guid><description>&lt;p>Create &lt;code>main.sh&lt;/code> and mark it as executable (&lt;code>chmod +x&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/usr/bin/env bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Set a trap to handle errors and log them.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">trap&lt;/span> &lt;span style="color:#98c379">&amp;#39;echo &amp;#34;Error occurred at line $LINENO. Command: $BASH_COMMAND&amp;#34;&amp;#39;&lt;/span> ERR
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now execute it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ./main.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error occurred at line 7. Command: &lt;span style="color:#e5c07b">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This pattern is useful to debug failing (non-zero exit code) shell scripts.&lt;/p></description></item><item><title>kubernetes: list pending pods in daemonset</title><link>https://perrotta.dev/2025/05/kubernetes-list-pending-pods-in-daemonset/</link><pubDate>Tue, 20 May 2025 16:41:00 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/kubernetes-list-pending-pods-in-daemonset/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a DaemonSet with a couple of pods stuck in
&amp;ldquo;Pending&amp;rdquo; state during their rollout, find out which nodes did not yet complete
the pod initialization.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% kubectl get nodes -o name | grep -vFf &amp;lt;&lt;span style="color:#56b6c2">(&lt;/span>kubectl get pods -n &lt;span style="color:#56b6c2">{&lt;/span>namespace&lt;span style="color:#56b6c2">}&lt;/span> -l &lt;span style="color:#56b6c2">{&lt;/span>ds-label-selector&lt;span style="color:#56b6c2">}&lt;/span> -o wide --no-headers | awk &lt;span style="color:#98c379">&amp;#39;{print &amp;#34;node/&amp;#34; $7}&amp;#39;&lt;/span>&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node/aks-database-12345678-vmss000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node/aks-database-12345678-vmss000002
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node/aks-systempool-87654321-vmss000000
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>node/aks-systempool-87654321-vmss000001
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notes:&lt;/p>
&lt;ul>
&lt;li>&lt;code>kubectl get nodes -o name&lt;/code>: list all node names in the &lt;code>node/&amp;lt;name&amp;gt;&lt;/code> form&lt;/li>
&lt;li>&lt;code>kubectl get pods [...] -o wide&lt;/code>: get the node name for each running DaemonSet pod&lt;/li>
&lt;li>&lt;code>awk '{print &amp;quot;node/&amp;quot; $7}'&lt;/code>: get the node name matching the output of &lt;code>get nodes&lt;/code>&lt;/li>
&lt;li>&lt;code>grep [...]&lt;/code>: find the nodes we are looking for&lt;/li>
&lt;/ul>
&lt;p>Surely there must be an easier way to accomplish this?&lt;/p></description></item><item><title>ack with context</title><link>https://perrotta.dev/2025/05/ack-with-context/</link><pubDate>Mon, 19 May 2025 14:12:35 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/ack-with-context/</guid><description>&lt;p>I often use &lt;a href="https://beyondgrep.com/">&lt;code>ack(1)&lt;/code>&lt;/a> to &lt;code>grep&lt;/code> for text patterns in git
repositories&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Today I learned about its &lt;a href="https://linux.die.net/man/1/ack">&lt;code>-C&lt;/code>&lt;/a> flag:&lt;/p>
&lt;pre tabindex="0">&lt;code>-C [ NUM ], --context[= NUM ]
 Print NUM lines (default 2) of context around matching lines.
&lt;/code>&lt;/pre>&lt;p>It&amp;rsquo;s a handy shortcut, better than fiddling with &lt;code>-A&lt;/code> and &lt;code>-B&lt;/code> (after and
before, respectively).&lt;/p>
&lt;p>&lt;strong>Bonus&lt;/strong>: the same flag exists in &lt;code>grep&lt;/code> and in &lt;code>rg&lt;/code> (&lt;code>ripgrep&lt;/code>).&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I should probably fully migrate to
&lt;a href="https://github.com/BurntSushi/ripgrep">&lt;code>ripgrep&lt;/code>&lt;/a> one day. Heck, it&amp;rsquo;s not
even in the &lt;a href="https://aur.archlinux.org/packages/ack">Arch core repositories&lt;/a>
anymore.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Ultrathink</title><link>https://perrotta.dev/2025/05/ultrathink/</link><pubDate>Mon, 19 May 2025 14:08:25 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/ultrathink/</guid><description>&lt;p>Simon Willison,
&lt;a href="https://simonwillison.net/2025/Apr/19/claude-code-best-practices/">Ultrathink&lt;/a>
(&lt;a href="https://news.ycombinator.com/item?id=43739997">via&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>We recommend using the word &amp;ldquo;think&amp;rdquo; to trigger extended thinking mode, which
gives Claude additional computation time to evaluate alternatives more
thoroughly. These specific phrases are mapped directly to increasing levels of
thinking budget in the system: &amp;ldquo;think&amp;rdquo; &amp;lt; &amp;ldquo;think hard&amp;rdquo; &amp;lt; &amp;ldquo;think harder&amp;rdquo; &amp;lt;
&amp;ldquo;ultrathink.&amp;rdquo; Each level allocates progressively more thinking budget for
Claude to use.&lt;/p>
&lt;/blockquote>
&lt;p>A prompt I used recently:&lt;/p>
&lt;blockquote>
&lt;p>How can I leverage &lt;a href="https://kustomize.io/">&lt;code>kustomize&lt;/code>&lt;/a> modules (e.g.
components or replacements) to reduce code duplication in this repository?
Ultrathink and suggest some ideas.&lt;/p>
&lt;/blockquote>
&lt;p>🤖&lt;/p></description></item><item><title>ChatGPT default settings</title><link>https://perrotta.dev/2025/05/chatgpt-default-settings/</link><pubDate>Sun, 18 May 2025 19:31:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/chatgpt-default-settings/</guid><description>&lt;p>&lt;a href="https://onlinesafety.substack.com/p/chatgpt-critical-privacy-settings">ChatGPT&amp;rsquo;s Privacy Trap: Default Settings You Can&amp;rsquo;t Ignore&lt;/a> by Tate Jarrow:&lt;/p>
&lt;blockquote>
&lt;p>ChatGPT is not safe to use out of the box! The default settings almost
certainly compromise your privacy because your chats (that likely contain
personal or sensitive information) are used to train OpenAI&amp;rsquo;s models, are
reviewed by humans, and can be used to identify you uniquely.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>However, if you are using ChatGPT and haven&amp;rsquo;t updated your privacy options,
all the data you enter can be used to train its model (and therefore is no
longer private). This means that if you upload anything personal or sensitive,
like a resume, work material, vacation plans, or anything else, OpenAI can
access and use it. Additionally, OpenAI uses human review, so your data can
also be reviewed and accessed by people. More information on how OpenAI
handles your content is available here.&lt;/p>
&lt;/blockquote>
&lt;p>Tate recommends:&lt;/p>
&lt;ul>
&lt;li>turn off model improvement&lt;/li>
&lt;li>use temporary chats&lt;/li>
&lt;li>submit a &amp;ldquo;Do not train on my content&amp;rdquo; at OpenAI&amp;rsquo;s Privacy Center&lt;/li>
&lt;li>consider turning off &amp;ldquo;Memory&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>I had the opportunity to speak with Tate once, in a virtual meeting.&lt;/p>
&lt;p>In my opinion, he is quite competent and gives sound advice.&lt;/p></description></item><item><title>fpp: facebook path picker</title><link>https://perrotta.dev/2025/05/fpp-facebook-path-picker/</link><pubDate>Sun, 18 May 2025 18:34:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/fpp-facebook-path-picker/</guid><description>&lt;p>&lt;a href="https://github.com/facebook/PathPicker">&lt;code>fpp&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>PathPicker accepts a wide range of input &amp;ndash; output from git commands, grep
results, searches &amp;ndash; pretty much anything. After parsing the input, PathPicker
presents you with a nice UI to select which files you&amp;rsquo;re interested in. After
that you can open them in your favorite editor or execute arbitrary commands.&lt;/p>
&lt;/blockquote>
&lt;p>Think of &lt;code>fpp&lt;/code> as the result of parsing file-looking paths in &lt;code>stdout&lt;/code> and
injecting them into &lt;a href="https://github.com/junegunn/fzf">&lt;code>fzf&lt;/code>&lt;/a>.&lt;/p>
&lt;p>It&amp;rsquo;s part of my daily tool belt.&lt;/p>
&lt;p>Sadly, the project is &lt;a href="https://github.com/facebook/PathPicker/commits/main/">somewhat
abandoned&lt;/a> since 2022.
Nonetheless, it doesn&amp;rsquo;t need any new features: &lt;a href="https://en.wikipedia.org/wiki/Unix_philosophy">it does one thing and does it
well&lt;/a>.&lt;/p>
&lt;p>Its latest released version is
&lt;a href="https://github.com/facebook/PathPicker/releases/tag/0.9.5">0.9.5&lt;/a>. Ironically,
due to a bug, there is a mismatch in &lt;code>--version&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fpp --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fpp version 0.9.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A few usage examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>git st | fpp&lt;/code>: modified files in a git repository&lt;/li>
&lt;li>&lt;code>fd -e ts --type file | fpp&lt;/code>: files with a given extension&lt;/li>
&lt;li>&lt;code>ack -l {pattern} | fpp&lt;/code>: files that match a given pattern&lt;/li>
&lt;/ul>
&lt;p>To continuously edit files in a loop, use &lt;code>fpp -ko&lt;/code> (&lt;code>ko&lt;/code> stands for
&lt;code>--keep-open&lt;/code>).&lt;/p></description></item><item><title>Espanso: hello world</title><link>https://perrotta.dev/2025/05/espanso-hello-world/</link><pubDate>Fri, 16 May 2025 17:40:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/espanso-hello-world/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2025/03/maccy-pin-items/">Previously&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Sometimes it&amp;rsquo;s useful to have certain code snippets be easily accessible from
the clipboard manager.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>This workflow is decent for temporary entries. For semi-permanent ones, I
should look into &lt;a href="https://espanso.org/">Espanso&lt;/a> at some point. For now,
&lt;a href="https://perrotta.dev/2025/01/raycast-snippets/">Raycast Snippets&lt;/a> fills in this
role.&lt;/p>
&lt;/blockquote>
&lt;p>Today is the day!&lt;/p>
&lt;p>&lt;a href="https://espanso.org/">Espanso&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Supercharge your typing| experience.&lt;/p>
&lt;p>Tired of typing the same sentences over and over? Discover the incredible
power of a full-blown text expander.&lt;/p>
&lt;/blockquote>
&lt;p>So?&lt;/p>
&lt;blockquote>
&lt;p>How it works&lt;/p>
&lt;p>Espanso detects when you type a keyword&lt;/p>
&lt;p>Today is :date&lt;/p>
&lt;p>(becomes) Today is 05/16/2025&lt;/p>
&lt;p>and replaces it while you&amp;rsquo;re typing.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s just like &lt;a href="https://www.raycast.com/core-features/snippets">Text Expander&lt;/a>
from Raycast snippets.&lt;/p>
&lt;p>It&amp;rsquo;s available on all major OSes (Windows, Linux, macOS). I am testing it on
macOS. Installation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install espanso
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After installing it and opening it, give it all sorts of System Accessibility
permissions so that it can perform its magic.&lt;/p>
&lt;p>This is just a &amp;ldquo;hello world&amp;rdquo; post, therefore I am not going to list every single
capability it has. Let&amp;rsquo;s just keep it simple and get our feet wet.&lt;/p>
&lt;p>I have to type &lt;code>helm ls -A --max 9999 | grep -i {release}&lt;/code> &lt;a href="https://perrotta.dev/2024/08/helm-list-all-installed-charts-in-the-cluster/">all the time&lt;/a>, and I&amp;rsquo;m fed
up with it.&lt;/p>
&lt;p>I want to create a &lt;code>:helm:ls&lt;/code> expansion that will trigger that command
expansion.&lt;/p>
&lt;p>Run &lt;code>espanso edit&lt;/code>. It opens a stock &lt;code>base.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># espanso match file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># For a complete introduction, visit the official docs at: https://espanso.org/docs/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># You can use this file to define the base matches (aka snippets)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># that will be available in every application when using espanso.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Matches are substitution rules: when you type the &amp;#34;trigger&amp;#34; string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># it gets replaced by the &amp;#34;replace&amp;#34; string.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">matches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Simple text replacement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:espanso&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Hi there!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># NOTE: espanso uses YAML to define matches, so pay attention to the indentation!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># But matches can also be dynamic:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Print the current date&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:date&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;{{mydate}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: mydate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span>: date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">format&lt;/span>: &lt;span style="color:#98c379">&amp;#34;%m/%d/%Y&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Print the output of a shell command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:shell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;{{output}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span>: shell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cmd&lt;/span>: &lt;span style="color:#98c379">&amp;#34;echo &amp;#39;Hello from your shell&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># And much more! For more information, visit the docs: https://espanso.org/docs/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The file is self-contained and well-documented enough that I do not need to look
up any docs nor use AI to add the desired entry:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># [...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">matches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># [...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:helm:ls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;helm ls --max 9999 -A | grep -i&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the file is saved, it&amp;rsquo;s magic ✨, and it takes effect immediately.&lt;/p>
&lt;p>Example usage&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>:helm:ls redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;becomes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm ls --max &lt;span style="color:#d19a66">9999&lt;/span> -A | grep -i redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For reference, this is the full path to the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% espanso edit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Editing file: /Users/thiago.perrotta/Library/Application Support/espanso/match/base.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am particularly excited it&amp;rsquo;s YAML and it&amp;rsquo;s accessible in a stable location: it
should be quite easy to integrate it with my dotfiles later on.&lt;/p>
&lt;p>Its out-of-the-box usability (for developers who prefer text files) and
perceived speed are better than Raycast snippets.&lt;/p>
&lt;p>There are so many possibilities to explore: command &lt;del>espansions&lt;/del> expansions, LLM prompts,
email greetings, canned responses, and so on.&lt;/p>
&lt;p>For Raycast snippets I was using &lt;code>@@&lt;/code> as a prefix. Espanso seems to recommend
&lt;code>:&lt;/code>. Let&amp;rsquo;s see which one I will stick to.&lt;/p>
&lt;p>Also, I&amp;rsquo;d like to thank Farzad for the recommendation via email. It wasn&amp;rsquo;t the
first time I had heard about Espanso, but it has reinforced my desire to try it
out.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>In order to type a plain &lt;code>:helm:ls&lt;/code> without expansion (e.g. for this blog
post), type the folowing: &lt;code>:helm:l{left arrow}{right arrow}s&lt;/code>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Stack Overflow is almost dead</title><link>https://perrotta.dev/2025/05/stack-overflow-is-almost-dead/</link><pubDate>Thu, 15 May 2025 23:14:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/stack-overflow-is-almost-dead/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2025/01/why-self-answer-questions-in-your-own-blog-instead-of-stack-overflow/">Previously&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://blog.pragmaticengineer.com/stack-overflow-is-almost-dead/">Stack overflow is almost dead&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> by Gergely Orosz:&lt;/p>
&lt;blockquote>
&lt;p>Four months ago, we asked Are LLMs making Stack Overflow irrelevant? Data at
the time suggested that the answer is likely &amp;ldquo;yes:&amp;rdquo;&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Since then, things at Stack Overflow went from bad to worse. The volume of
questions asked has nearly dried up, new data shows:&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>This tallies with my memory of feeling that site moderators had gone on a
power trip by closing legitimate questions. I stopped asking questions around
this time because the site felt unwelcome.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>ChatGPT is faster and it&amp;rsquo;s trained on StackOverflow data, so the quality of
answers is similar. Plus, ChatGPT is polite and answers all questions, in
contrast to StackOverflow moderators.&lt;/p>
&lt;/blockquote>
&lt;p>A bit of politeness&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> goes a long way, eh?&lt;/p>
&lt;p>Where do you ask novel questions these days?&lt;/p>
&lt;p>Stack Exchange is still my to-go site for that, but it&amp;rsquo;s starting to feel like a
ghost town. Oftentimes I end up self-answering my own question, because no one
else does. Nonetheless, I&amp;rsquo;d rather post on my blog if I know the answer in
advance. The reason to post on SE is when &lt;em>I don&amp;rsquo;t know&lt;/em>.&lt;/p>
&lt;p>It feels to me the best place to ask specific questions these days is wherever
the project is developed. GitHub or GitLab issues, Discourse (BBS / forums),
Discord&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, Slack&amp;hellip;and so on. There&amp;rsquo;s a lot of fragmentation. Perhaps that&amp;rsquo;s
not too bad after all, but it incurs additional effort.&lt;/p>
&lt;p>And where to ask general questions? Reddit&lt;sup id="fnref1:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, the Fediverse™, social media,
project-agnostic chat platforms / communities&amp;hellip;&lt;/p>
&lt;p>Perhaps one day we&amp;rsquo;ll just be able to tell our LLM agents to go out there in the
dark corners of the Web&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup> to ask a question for us.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I am (nit)picky. Gergely did &lt;strong>not&lt;/strong> capitalize &amp;ldquo;overflow&amp;rdquo;. &lt;em>This is plainly wrong&lt;/em>!!1! 🤷&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>🇨🇦&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>Ewwww.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4">
&lt;p>Will the Web even be alive by then?&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Cursor</title><link>https://perrotta.dev/2025/05/cursor/</link><pubDate>Thu, 15 May 2025 15:18:53 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/cursor/</guid><description>&lt;p>Meanwhile, in a conversation with a coworker&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Me&lt;/strong>: My &lt;em>aha!&lt;/em> moment from this week was to use
&lt;a href="https://cline.bot/">Cline&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with this new &amp;ldquo;Use the browser&amp;rdquo; integration.
It opens an embedded web browser within its pane and starts to use the cursor
to click around.&lt;/p>
&lt;p>&lt;strong>Coworker&lt;/strong>: &lt;a href="https://www.cursor.com/">Cursor&lt;/a>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, the IDE?&lt;/p>
&lt;p>&lt;strong>Me&lt;/strong>: Nooo, I mean, the mouse cursor, the pointer.&lt;/p>
&lt;/blockquote>
&lt;p>I was waiting for this moment when the overloaded &amp;ldquo;Cursor&amp;rdquo; term would become
ambiguous. It&amp;rsquo;s just somewhat of a funny coincidence that it appeared in the
context of one of its main competitors.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Cline: &lt;em>an AI-powered coding assistant that runs in VS Code&lt;/em>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Cursor: &lt;em>the AI Code Editor&lt;/em>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Github: dependabot: group updates</title><link>https://perrotta.dev/2025/05/github-dependabot-group-updates/</link><pubDate>Wed, 14 May 2025 15:08:40 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/github-dependabot-group-updates/</guid><description>&lt;p>&lt;a href="https://docs.github.com/en/code-security/getting-started/dependabot-quickstart-guide">dependabot&lt;/a>
supports
&lt;a href="https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference#groups--">grouping&lt;/a>
commits into fewer, targeted pull requests.&lt;/p>
&lt;p>A recent example in the repository of this blog:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>% git show
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit 1fa93bed4d0faa9dfcdd6e554201d708baa38dbb (HEAD -&amp;gt; master, origin/master, origin/HEAD)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;{email redacted}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Wed May 14 15:08:23 2025 +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> group dependabot updates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git .github/dependabot.yml .github/dependabot.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index d6ca206c..3a5d1b09 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- .github/dependabot.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ .github/dependabot.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -4,7 +4,15 @@ updates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> directory: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schedule:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> interval: monthly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ groups:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ all:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ patterns:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ - &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> - package-ecosystem: github-actions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> directory: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schedule:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> interval: monthly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ groups:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ all:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ patterns:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ - &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is better for my workflow because then I will have less pull requests to
deal with at once, instead of having to review them one by one for each
individual github action or git submodule bump.&lt;/p></description></item><item><title>VSCode: Github Pull Requests plug-in: collapse all comments by default</title><link>https://perrotta.dev/2025/05/vscode-github-pull-requests-plug-in-collapse-all-comments-by-default/</link><pubDate>Wed, 14 May 2025 14:40:34 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/vscode-github-pull-requests-plug-in-collapse-all-comments-by-default/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: I am constantly annoyed at opening files in VSCode with
PR comments being automatically expanded by default and occupying precious real
estate. Get rid of these comments!&lt;/p>
&lt;p>&lt;a href="https://github.com/Microsoft/vscode-pull-request-github/issues/665">Github
issue&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>From your user settings with &lt;code>&amp;quot;githubPullRequests.commentExpandState&amp;quot;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>I added the following to my &lt;code>settings.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;githubPullRequests.commentExpandState&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;collapseAll&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to file a great feature request</title><link>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</link><pubDate>Wed, 14 May 2025 13:46:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</guid><description>&lt;p>Obviously I&amp;rsquo;m biased to say this but I have just
&lt;a href="https://github.com/gruntwork-io/pre-commit/issues/130">filed&lt;/a> a high-quality
feature request for a software project I am interested to adopt. What makes it
great™:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>describe &lt;strong>concisely&lt;/strong> and &lt;strong>precisely&lt;/strong> &lt;strong>what&lt;/strong> you&amp;rsquo;re looking for&lt;/p>
&lt;ul>
&lt;li>being concise is essential: we live in a fast-paced world. If no one looks
at your FR, then it won&amp;rsquo;t move forward. Period.&lt;/li>
&lt;li>being precise (unambiguous) is important to avoid back-and-forth and
potential bikeshedding&lt;/li>
&lt;li>I prefer to write it using my own words. Using an LLM risks making your FR
robotic and unappealing for anyone to consider. YMMV.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>describe &lt;strong>why&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>what is the &lt;em>raison d&amp;rsquo;être&lt;/em> of the feature? What is the rationale behind it?
How does it make the project better? How does it improve the developer
experience?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>(&lt;em>optional&lt;/em>, but &lt;strong>highly recommended&lt;/strong>) suggest &lt;strong>how&lt;/strong> and offer to address it&lt;/p>
&lt;ul>
&lt;li>Everyone wants everything, but few people want to put in the effort to see
changes take place. Your FR has a much higher chance of becoming reality if
you volunteer your time, effort and expertise to implement the feature
yourself, rather than &lt;a href="https://xkcd.com/2347/">demanding&lt;/a> someone (likely an
unpaid volunteer) to do so for you.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>In my experience it&amp;rsquo;s better to file an issue / ticket / FR first, &lt;strong>prior to&lt;/strong>
sending a pull request. You &lt;em>cannot&lt;/em> know in advance whether the FR is welcome
by the project or its maintainers. Sending in a PR just to see its underlying
&lt;em>raison d&amp;rsquo;être&lt;/em> be rejected is a waste of time, besides being a frustrating
experience.&lt;/p>
&lt;p>Furthermore, the ticket doubles-down as documentation for the PR description /
commit message in the future, should the FR be accepted. The small overhead of
time to file a ticket is a reasonable trade-off.&lt;/p>
&lt;p>Now, even if your FR is great and very reasonable&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, there&amp;rsquo;s absolutely no
guarantee:&lt;/p>
&lt;ul>
&lt;li>you will even get a reply in the first place&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;li>back-and-forth chatter will be quick and responsive&lt;/li>
&lt;li>the maintainers / developers will agree with your sense of &amp;lsquo;usefulness&amp;rsquo;&lt;/li>
&lt;li>the maintainers / developers will agree with &lt;em>how&lt;/em> you believe it should be
tackled or implemented&lt;/li>
&lt;li>your follow-up PR will even be reviewed and, let alone, merged&lt;/li>
&lt;li>your merged PR will make it into a new point release&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Life is hard&lt;/em>. Nonetheless, do not give up! Open source software is beautiful
and serendipitous. :)&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s a subjective matter.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Sometimes it takes &lt;a href="https://github.com/funtoo/keychain/issues/119">more than 3
years&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Slack: Github bot: post notifications</title><link>https://perrotta.dev/2025/05/slack-github-bot-post-notifications/</link><pubDate>Mon, 12 May 2025 11:51:18 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/slack-github-bot-post-notifications/</guid><description>&lt;p>Assume your organization has the &lt;a href="https://github.com/integrations/slack">Github
bot&lt;/a> integrated with Slack, and it&amp;rsquo;s
already properly configured.&lt;/p>
&lt;p>Assume you have a channel called &lt;code>#team-reviews&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: subscribe the github repository &lt;code>my-org/my-repo&lt;/code> to post
updates to that channel.&lt;/p>
&lt;p>As per the
&lt;a href="https://github.com/integrations/slack?tab=readme-ov-file#subscribing-and-unsubscribing">documentation&lt;/a>,
use the &lt;code>/subscribe&lt;/code> and &lt;code>/unsubscribe&lt;/code> commands. Send them in the
&lt;code>#team-reviews&lt;/code> channel:&lt;/p>
&lt;pre tabindex="0">&lt;code>/github subscribe my-org/my-repo
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>✅ Subscribed to my-org/my-repo. This channel will receive notifications for
&lt;code>issues&lt;/code>, &lt;code>pulls&lt;/code>, &lt;code>commits&lt;/code>, &lt;code>releases&lt;/code>, &lt;code>deployments&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>In case you wish to subscribe to only pull requests and commits, follow up with:&lt;/p>
&lt;pre tabindex="0">&lt;code>/github unsubscribe my-org/my-repo issues,releases,deployments
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>✅ Subscribed to my-org/my-repo. This channel will receive notifications for
&lt;code>pulls&lt;/code>, &lt;code>commits&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>Repeat for as many repositories as needed.&lt;/p></description></item><item><title>Kagi: Small Web</title><link>https://perrotta.dev/2025/05/kagi-small-web/</link><pubDate>Sat, 10 May 2025 18:24:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/kagi-small-web/</guid><description>&lt;p>&lt;a href="https://help.kagi.com/kagi/company/">Kagi&lt;/a> is a paid search engine.&lt;/p>
&lt;p>The &lt;a href="https://blog.kagi.com/small-web">Kagi Small Web&lt;/a> is:&lt;/p>
&lt;blockquote>
&lt;p>the non-commercial part of the web, crafted by individuals to express
themselves or share knowledge without seeking any financial gain. This concept
often evokes nostalgia for the early, less commercialized days of the web,
before the ad-supported business model took over the internet (and we started
fighting back!)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://benhoyt.com/writings/the-small-web-is-beautiful/">Context&lt;/a>.&lt;/p>
&lt;p>Kagi supports searching websites within the Small Web via a &lt;a href="https://help.kagi.com/kagi/features/lenses.html">dedicated
lens&lt;/a> (think of it as a search
scope).&lt;/p>
&lt;p>They also provide a integrated &lt;a href="https://kagi.com/api/v1/smallweb/feed/">RSS
feed&lt;/a> (think of it as a &amp;ldquo;small web
&lt;a href="https://en.wikipedia.org/wiki/Planet_(software)">planet&lt;/a>&amp;rdquo;).&lt;/p>
&lt;p>And, also, a &lt;a href="https://kagi.com/smallweb">navigator&lt;/a> (think of it as StumbleUpon
or Digg in the early days).&lt;/p>
&lt;p>The small web somewhat correlates with the &lt;a href="https://indieweb.org/">IndieWeb&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>What is the IndieWeb?&lt;/p>
&lt;p>The IndieWeb is a people-focused alternative to the &amp;ldquo;corporate web&amp;rdquo;.&lt;/p>
&lt;p>We are a community of independent and personal websites based on the
principles of: owning your domain and using it as your primary online
identity, publishing on your own site first (optionally elsewhere), and owning
your content.&lt;/p>
&lt;/blockquote>
&lt;p>It is a great source of serendipity.&lt;/p></description></item><item><title>helm-secrets + vals: string interpolation</title><link>https://perrotta.dev/2025/05/helm-secrets--vals-string-interpolation/</link><pubDate>Thu, 08 May 2025 15:25:14 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/helm-secrets--vals-string-interpolation/</guid><description>&lt;p>&lt;a href="https://github.com/jkroepke/helm-secrets">helm-secrets&lt;/a> is:&lt;/p>
&lt;blockquote>
&lt;p>a helm plugin that helps to manage secrets with Git workflow and store them
anywhere.&lt;/p>
&lt;/blockquote>
&lt;p>It uses &lt;a href="https://github.com/helmfile/vals">vals&lt;/a> underneath, which is a:&lt;/p>
&lt;blockquote>
&lt;p>Helm-like configuration values loader with support for various sources&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;including, in particular, &lt;a href="https://www.hashicorp.com/en/products/vault">HashiCorp Vault&lt;/a>.&lt;/p>
&lt;p>The &lt;code>vals&lt;/code> syntax is documented
&lt;a href="https://github.com/helmfile/vals?tab=readme-ov-file#expression-syntax">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: construct a string composed of the following two vault
entries:&lt;/p>
&lt;ul>
&lt;li>&lt;code>vault://kv-v2/services/common/postgres/#url&lt;/code>&lt;/li>
&lt;li>&lt;code>vault://kv-v2/services/common/postgres/#params&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;to yield &lt;code>{url}?{params}&lt;/code>.&lt;/p>
&lt;p>How do we concatenate two vault entries?
The secret is in the &lt;code>+&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Finally, the optional trailing &lt;code>+&lt;/code> is the explicit &amp;ldquo;end&amp;rdquo; of the expression.
You usually don&amp;rsquo;t need it, as if omitted, it treats anything after &lt;code>ref+&lt;/code> and
before the new-line or the end-of-line as an expression to be evaluated. An
explicit &lt;code>+&lt;/code> is handy when you want to do a simple string interpolation. That
is, &lt;code>foo ref+SECRET1+ ref+SECRET2+ bar&lt;/code> evaluates to &lt;code>foo SECRET1_VALUE SECRET2_VALUE bar&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>The final result:&lt;/p>
&lt;pre tabindex="0">&lt;code>secrets+literal://ref+vault://kv-v2/services/common/postgres/#url+?ref+vault://kv-v2/services/common/postgres/#params
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;wherein &lt;code>secrets+literal://&lt;/code> comes from &lt;code>helm-secrets&lt;/code>. It needs to appear only
once. &lt;code>ref+vault://&lt;/code> comes from &lt;code>vals&lt;/code>, it appears once for each vault entry.&lt;/p></description></item><item><title>1Password SSH agent error</title><link>https://perrotta.dev/2025/05/1password-ssh-agent-error/</link><pubDate>Wed, 07 May 2025 12:52:00 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/1password-ssh-agent-error/</guid><description>&lt;p>A day in the life:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ssh &lt;span style="color:#56b6c2">{&lt;/span>my-server&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>STDERR:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign_and_send_pubkey: signing failed &lt;span style="color:#c678dd">for&lt;/span> ED25519 &lt;span style="color:#98c379">&amp;#34;/Users/thiago/.ssh/id_ed25519&amp;#34;&lt;/span> from agent: agent refused operation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git@github.com: Permission denied &lt;span style="color:#56b6c2">(&lt;/span>publickey&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fatal: Could not &lt;span style="color:#e5c07b">read&lt;/span> from remote repository.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Please make sure you have the correct access rights
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and the repository exists.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What&amp;rsquo;s the matter?&lt;/p>
&lt;p>My ssh config is integrated with the &lt;a href="https://developer.1password.com/docs/ssh/agent/">1Password ssh
agent&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>Host *
 # Use 1Password SSH agent when available
 # macOS only
 # Linux: &amp;#34;~/.1password/agent.sock&amp;#34;
 IdentityAgent &amp;#34;~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Solution&lt;/strong>: Ensure 1Password is unlocked, so that the agent can be used.&lt;/p>
&lt;p>It can be unlocked from its macOS app, or from the CLI (&lt;code>op signin --account {my-account}&lt;/code>).&lt;/p></description></item><item><title>ByteBurst Brigade</title><link>https://perrotta.dev/2025/05/byteburst-brigade/</link><pubDate>Tue, 06 May 2025 17:56:02 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/byteburst-brigade/</guid><description>&lt;p>If you have Telegram, you&amp;rsquo;re welcome to join &lt;a href="https://t.me/+OzLfJRhjA69iNWFh">ByteBurst
Brigade&lt;/a>, a supergroup I host with friends to
discuss Tech in general: privacy, self-hosting, news, workflows, etc.&lt;/p>
&lt;p>The noise in the group is low – arguably, that&amp;rsquo;s a feature, à la
&lt;a href="https://lobste.rs/about#invitations">lobsters&lt;/a>.&lt;/p></description></item><item><title>Slack snippets</title><link>https://perrotta.dev/2025/05/slack-snippets/</link><pubDate>Tue, 06 May 2025 17:48:15 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/slack-snippets/</guid><description>&lt;p>In order to post a large text file to Slack, use a &lt;a href="https://slack.com/intl/en-gb/help/articles/204145658-Create-or-paste-code-snippets-in-Slack">snippet&lt;/a>.
Snippet is short for &amp;ldquo;code snippet&amp;rdquo;.&lt;/p>
&lt;p>Type in &lt;code>/snippet&lt;/code>, then complete the wizard.&lt;/p>
&lt;p>You can choose the language – typically YAML, JSON or Shell – for syntax
highlighting.&lt;/p>
&lt;p>This is better than dumping the entire source within a pair of three backticks.&lt;/p></description></item><item><title>Do you like to live in danger?</title><link>https://perrotta.dev/2025/05/do-you-like-to-live-in-danger/</link><pubDate>Mon, 05 May 2025 18:11:23 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/do-you-like-to-live-in-danger/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude --dangerously-skip-permissions &lt;span style="color:#98c379">&amp;#34;fix the zizmor issue: pre-commit run --all-files zizmor&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ WARNING: Claude Code running in Bypass Permissions mode │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ In Bypass Permissions mode, Claude Code will not ask &lt;span style="color:#c678dd">for&lt;/span> your approval before running potentially dangerous commands. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ This mode should only be used in a sandboxed container/VM that has restricted internet access and can easily be restored &lt;span style="color:#c678dd">if&lt;/span> damaged. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ By proceeding, you accept all responsibility &lt;span style="color:#c678dd">for&lt;/span> actions taken &lt;span style="color:#c678dd">while&lt;/span> running in Bypass Permissions mode. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ https://docs.anthropic.com/s/claude-code-security │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ❯ 1. No, &lt;span style="color:#e5c07b">exit&lt;/span> │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 2. Yes, I accept │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enter to confirm · Esc to &lt;span style="color:#e5c07b">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>...&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>⏺ Great! The zizmor pre-commit check now passes. Let&amp;#39;s summarize the changes we made:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. Removed user-provided inputs &lt;span style="color:#c678dd">for&lt;/span> version numbers that could potentially be used &lt;span style="color:#c678dd">for&lt;/span> code injection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2. Replaced them with an auto-generated timestamp-based version when the workflow is manually triggered
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3. Maintained the existing behavior &lt;span style="color:#c678dd">for&lt;/span> automatic triggers &lt;span style="color:#56b6c2">(&lt;/span>using &lt;span style="color:#98c379">&amp;#34;latest&amp;#34;&lt;/span> tag&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This approach is more secure since:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. No user inputs are used in any &lt;span style="color:#e5c07b">command&lt;/span> execution context
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2. The version tag is generated from a trusted &lt;span style="color:#e5c07b">source&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>the system timestamp&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3. The workflow still provides versioned images when manually triggered, just with an automatically generated version instead of a user-provided one
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let the agentic overlords take over 😬🤖.&lt;/p>
&lt;p>How does it know it can do so?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% grep -i bypass ~/.claude.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;bypassPermissionsModeAccepted&amp;#34;&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview#control-claude-code-with-commands">Anthropic Docs&lt;/a>.&lt;/p></description></item><item><title>bkt: bypass cache</title><link>https://perrotta.dev/2025/05/bkt-bypass-cache/</link><pubDate>Mon, 05 May 2025 15:21:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/bkt-bypass-cache/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/bkt-cache-command-outputs/">Previously&lt;/a>.&lt;/p>
&lt;p>Whenever using &lt;a href="https://www.bkt.rs/">&lt;code>bkt&lt;/code>&lt;/a>, sometimes you may need to evict the
cache to get fresh data.&lt;/p>
&lt;p>Use the &lt;code>--force&lt;/code> option to do so. Usage:&lt;/p>
&lt;p>Replace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% bkt --ttl 30d -- &lt;span style="color:#56b6c2">{&lt;/span>my cool command&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% bkt --force --ttl 30d -- &lt;span style="color:#56b6c2">{&lt;/span>my cool command&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Github: pull request template</title><link>https://perrotta.dev/2025/05/github-pull-request-template/</link><pubDate>Sun, 04 May 2025 21:10:34 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/github-pull-request-template/</guid><description>&lt;p>To create a pull request template for a github repository, create a
&lt;code>.github/pull_request_template.md&lt;/code> file.&lt;/p>
&lt;p>Take advantage of &lt;a href="https://www.markdownguide.org/basic-syntax/">markdown
formatting&lt;/a>.&lt;/p>
&lt;p>I found the following prompt useful as a starting point for &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
within the repository:&lt;/p>
&lt;blockquote>
&lt;p>Suggest a template for this repository for new github PRs.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository">Upstream
docs&lt;/a>.&lt;/p></description></item><item><title>JIRA: stand-up mode</title><link>https://perrotta.dev/2025/05/jira-stand-up-mode/</link><pubDate>Fri, 02 May 2025 17:06:53 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/jira-stand-up-mode/</guid><description>&lt;p>&lt;a href="https://www.jakeworth.com/tils/jira-standup-mode/">Jira Standup Mode&lt;/a> via Jake
Worth:&lt;/p>
&lt;blockquote>
&lt;p>Jira recently launched &amp;lsquo;Standup Mode&amp;rsquo; feature, and love it!&lt;/p>
&lt;p>When you click the &amp;ldquo;Start Standup&amp;rdquo; button on any Jira board, your board
converts to a simplified, presentation version.&lt;/p>
&lt;p>On the left, each team member is listed in random order, which you can
re-shuffle. I like to avoid the same order of reports every day, so this helps
me.&lt;/p>
&lt;p>You can assign a timer for each member that restarts as you switch.&lt;/p>
&lt;/blockquote>
&lt;p>The default is 2 minutes. I like it.&lt;/p></description></item><item><title>Terminal autocorrection</title><link>https://perrotta.dev/2025/05/terminal-autocorrection/</link><pubDate>Fri, 02 May 2025 16:43:42 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/terminal-autocorrection/</guid><description>&lt;p>Appreciate this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gitp ushm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsh: correct &lt;span style="color:#98c379">&amp;#39;gitp&amp;#39;&lt;/span> to &lt;span style="color:#98c379">&amp;#39;git&amp;#39;&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>nyae&lt;span style="color:#56b6c2">]&lt;/span>? y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WARNING: You called a Git &lt;span style="color:#e5c07b">command&lt;/span> named &lt;span style="color:#98c379">&amp;#39;ushm&amp;#39;&lt;/span>, which does not exist.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Continuing in 1.0 seconds, assuming that you meant &lt;span style="color:#98c379">&amp;#39;pushm&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>branch &lt;span style="color:#98c379">&amp;#39;master&amp;#39;&lt;/span> &lt;span style="color:#e5c07b">set&lt;/span> up to track &lt;span style="color:#98c379">&amp;#39;origin/master&amp;#39;&lt;/span> by rebasing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Everything up-to-date
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://hunden.linuxkompis.se/2018/08/04/spell-check-and-auto-correction-of-commands-in-zsh.html">&lt;code>zsh&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://andycarter.dev/blog/auto-correct-git-commands">&lt;code>git&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>The ack + xargs + sed pattern</title><link>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</link><pubDate>Wed, 30 Apr 2025 16:20:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</guid><description>&lt;p>I employ this pattern almost every day:&lt;/p>
&lt;ul>
&lt;li>use &lt;a href="https://beyondgrep.com/">&lt;code>ack&lt;/code>&lt;/a> to search for a given string in a codebase (git repo)&lt;/li>
&lt;li>use &lt;a href="https://man.archlinux.org/man/xargs.1">&lt;code>xargs&lt;/code>&lt;/a> to iterate through each finding&lt;/li>
&lt;li>use &lt;a href="https://www.gnu.org/software/sed/manual/sed.html">&lt;code>sed&lt;/code>&lt;/a> to make a text transformation&lt;/li>
&lt;/ul>
&lt;p>Example of the day:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l | xargs -n &lt;span style="color:#d19a66">1&lt;/span> gsed -i -e &lt;span style="color:#98c379">&amp;#39;s/limit: 2/limit: 5/g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Given multiple &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD app manifests&lt;/a> in the form:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">syncPolicy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">retry&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">limit&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">backoff&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">duration&lt;/span>: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">factor&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">maxDuration&lt;/span>: 1m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>limit: 2&lt;/code> with &lt;code>limit: 5&lt;/code> in all files. That&amp;rsquo;s what the command above
does:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ack -l&lt;/code> lists all files that match the given pattern&lt;/li>
&lt;li>pipe to &lt;code>xargs -n 1&lt;/code> iterates on each of them&lt;/li>
&lt;li>&lt;code>gsed -i&lt;/code> (GNU &lt;code>sed&lt;/code>) makes a text transformation in-place&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s not bulletproof, but it works most of the time.&lt;/p>
&lt;p>Sometimes I use &lt;a href="https://github.com/sharkdp/fd">&lt;code>fd&lt;/code>&lt;/a> to narrow the search down
to a file pattern. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fd -e yaml | xargs ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, though, &lt;code>ack --yaml&lt;/code> would be even simpler.&lt;/p>
&lt;p>When &lt;code>sed&lt;/code> isn&amp;rsquo;t up for the job, &lt;code>awk&lt;/code> tends to be a decent alternative.&lt;/p>
&lt;p>Regular expression replacements aren&amp;rsquo;t always precise.
False positives can easily take place.
Adding &lt;code>\b&lt;/code> (word boundaries) sometimes helps.&lt;/p>
&lt;p>Other times it&amp;rsquo;s better to use a syntax-aware tool instead of &lt;code>sed&lt;/code>.&lt;/p>
&lt;p>For YAML, there&amp;rsquo;s &lt;a href="https://github.com/mikefarah/yq">&lt;code>yq&lt;/code>&lt;/a>.&lt;/p>
&lt;p>For JSON, there&amp;rsquo;s &lt;a href="https://jqlang.org/">&lt;code>jq&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>jq&lt;/code> is like &lt;code>sed&lt;/code> for JSON data - you can use it to slice and filter and map
and transform structured data with the same ease that &lt;code>sed&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>grep&lt;/code> and
friends let you play with text.&lt;/p>
&lt;/blockquote></description></item><item><title>YAML: complex keys</title><link>https://perrotta.dev/2025/04/yaml-complex-keys/</link><pubDate>Tue, 29 Apr 2025 13:06:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/yaml-complex-keys/</guid><description>&lt;p>&lt;strong>Today I learned&lt;/strong>: YAML complex keys (&lt;a href="https://stackoverflow.com/questions/33987316/what-is-a-complex-mapping-key-in-yaml">stack
overflow&lt;/a>).&lt;/p>
&lt;p>From the &lt;a href="https://yaml.org/spec/1.2.2/">spec&lt;/a>, § 2.11:&lt;/p>
&lt;blockquote>
&lt;p>A question mark and space (&lt;code>&amp;quot;? &amp;quot;&lt;/code>) indicate a complex mapping key. Within a
block collection, key/value pairs can start immediately following the dash,
colon, or question mark.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>? - Detroit Tigers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Chicago cubs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: - 2001-07-23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>? [ New York Yankees,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Atlanta Braves ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: [ 2001-07-02, 2001-08-12,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2001-08-14 ]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I noticed it when saving a &lt;code>values.yaml&lt;/code> file from &lt;a href="https://helm.sh/">helm&lt;/a> in
VSCode, which has auto-formatted it like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>diff --git a/helm/argocd/values.yaml b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index b0884b26d..928c02eb3 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- a/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -471,10 +471,12 @@ argo-cd:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Do not trigger a reconciliation when the reported status of a HorizontalPodAutoscaler or ExternalSecret changes.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # That would mean reconciling every application with a hpa every 5 seconds which is heavy on the cpu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#finding-resources-to-ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initially I thought this was a mistake that would yield a parse error.
Upon running &lt;code>helm template&lt;/code>, however, I observed it&amp;rsquo;s in fact a no-op.&lt;/p>
&lt;p>The LLM says:&lt;/p>
&lt;blockquote>
&lt;p>VS Code is reformatting your YAML that way because it&amp;rsquo;s interpreting the
structure as YAML mapping with complex keys.&lt;/p>
&lt;p>This happens when your keys contain special characters (like dots or
underscores) or are long strings — YAML interpreters sometimes use the &lt;code>? key :&lt;/code> value syntax to denote explicit mapping entries with complex keys.&lt;/p>
&lt;/blockquote>
&lt;p>I surely cannot deny it&amp;rsquo;s a long key. Go blame
&lt;a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#system-level-configuration">ArgoCD&lt;/a>
:P&lt;/p></description></item><item><title>GitHub: create a pull request from CLI</title><link>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</link><pubDate>Mon, 28 Apr 2025 14:12:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</guid><description>&lt;p>Using the &lt;a href="https://cli.github.com/">&lt;code>gh&lt;/code>&lt;/a> tool (the official GitHub CLI tool):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will prompt for more information.&lt;/p>
&lt;p>To skip all prompts and simply use the commit message to fill in the PR Title
and the PR description, pass &lt;code>--fill&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --fill
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --help | grep -- --fill
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> to skip this, or use &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span> to autofill these values from git commits.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alongside &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span>, the values specified by &lt;span style="color:#98c379">`&lt;/span>--title&lt;span style="color:#98c379">`&lt;/span> and/or &lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> will
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --fill Use commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-first Use first commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-verbose Use commits msg+body &lt;span style="color:#c678dd">for&lt;/span> description
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>macOS: delete file, bypass trash</title><link>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</link><pubDate>Fri, 25 Apr 2025 16:37:28 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</guid><description>&lt;p>To delete a file in Finder on macOS without moving it to the trash, press
&lt;code>Option&lt;/code> + &lt;code>Command&lt;/code> + &lt;code>Delete&lt;/code> upon selecting the file.&lt;/p>
&lt;p>When using the CLI, of course, &lt;code>rm&lt;/code> is enough.&lt;/p></description></item><item><title>Delete newlines in a pipe</title><link>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</link><pubDate>Fri, 25 Apr 2025 11:59:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given &lt;code>{cmd}&lt;/code> that emits lots of blank lines, delete all
blank lines in a pipe.&lt;/p>
&lt;p>The following is a very elegant (and easy to remember!) way to do so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | awk &lt;span style="color:#98c379">&amp;#39;NF&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the LLM:&lt;/p>
&lt;blockquote>
&lt;p>When you use awk &amp;lsquo;NF&amp;rsquo;, it evaluates to true for lines where NF is greater than
zero—that is, lines that are not empty or do not consist solely of whitespace.
This makes it a concise way to filter out blank lines.&lt;/p>
&lt;/blockquote>
&lt;p>Other ways with classic tools and regular expressions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | grep -v &lt;span style="color:#98c379">&amp;#39;^[[:space:]]*$&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | sed -e &lt;span style="color:#98c379">&amp;#39;/^[[:space:]]*$/d&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>They are just a bit harder to remember.&lt;/p></description></item><item><title>The LLM journey</title><link>https://perrotta.dev/2025/04/the-llm-journey/</link><pubDate>Thu, 24 Apr 2025 03:14:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-llm-journey/</guid><description>&lt;p>&lt;em>Narrator&amp;rsquo;s voice&lt;/em>: &lt;a href="https://harper.blog/2025/04/17/an-llm-codegen-heros-journey/">An LLM Codegen Hero&amp;rsquo;s Journey
&lt;/a> by Harper Reed.&lt;/p>
&lt;p>I don&amp;rsquo;t have anything to add, go read Harper&amp;rsquo;s post.&lt;/p></description></item><item><title>HashiCorp Vault from helm values</title><link>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</link><pubDate>Wed, 23 Apr 2025 16:56:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Populate HashiCorp Vault with select keys from &lt;code>helm get values&lt;/code> for a given chart release.&lt;/p>
&lt;p>The following script works:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e"># Usage: Tweak entries as needed and then run the script.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># It&amp;#39;s an associative array: a dictionary, a hash map&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Key: the entry to be populated in vault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Value: a `jq` JSON selector from the output of `helm get values -o json`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">declare&lt;/span> -A &lt;span style="color:#e06c75">entries&lt;/span>&lt;span style="color:#56b6c2">=(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.accessKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.accessKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.secretKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.secretKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiPassword&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiPassword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiUser&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiUser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.adminpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.adminpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.password&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.ropass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.ropass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.rwpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.rwpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.token&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.verificationToken&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.verificationToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main&lt;span style="color:#56b6c2">()&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> entry in &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>!entries[@]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$entry&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">entries&lt;/span>[&lt;span style="color:#e06c75">$entry&lt;/span>]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">content&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>helm get values -n tools mychart -o json | jq -r &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$value&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Populating vault &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379"> from helm value &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">: &lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$FIRST&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#98c379">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv put -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv patch -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv get -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm ~/.vault-token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>FIRST&lt;/code>: In the first time we need to create an entry (&lt;code>vault kv put&lt;/code>), in the
second time we need to patch it (&lt;code>vault kv patch&lt;/code>).&lt;/p></description></item><item><title>Github PRs: do not submit</title><link>https://perrotta.dev/2025/04/github-prs-do-not-submit/</link><pubDate>Wed, 23 Apr 2025 12:47:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-prs-do-not-submit/</guid><description>&lt;p>Sometimes you want to send a pull request for review to your teammates and want
to ensure they do not accidentally prematurely merge it.&lt;/p>
&lt;p>One way to do so is to note in the commit message / PR description that it
should not be merged. Nonetheless, humans don&amp;rsquo;t always read instructions, our
attention span is quite limited.&lt;/p>
&lt;p>It would be more robust to employ a mechanism to prevent the PR from being
submitted, even if someone attempts to do so.&lt;/p>
&lt;p>You could leave the PR as a draft. However, this could have the side effect that
not all CI checks may run. You don&amp;rsquo;t want surprising failures later on, that
could slow you down.&lt;/p>
&lt;p>I like the following approach, which is partly inspired by an internal presubmit
check at Google: write &amp;ldquo;DO NOT SUBMIT&amp;rdquo; in the PR title, and have a CI check
(github action&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>) fail in this situation. Mark the action as
&lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks">required&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>If status checks are required for a repository, the required status checks
must pass before you can merge your branch into the protected branch. For more
information, see About protected branches.&lt;/p>
&lt;/blockquote>
&lt;p>Use the following github action (&lt;code>.github/workflows/pr-checks.yml&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">name&lt;/span>: PR Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">permissions&lt;/span>: read-all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pull_request&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">types&lt;/span>: [opened, edited, synchronize]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">concurrency&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">group&lt;/span>: ${{ github.workflow }}-${{ github.ref }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cancel-in-progress&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pr-checks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">runs-on&lt;/span>: ubuntu-latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">&amp;#39;&amp;#34;DO NOT SUBMIT&amp;#34; check&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">PR_TITLE&lt;/span>: ${{ github.event.pull_request.title }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">run&lt;/span>: |&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;Title: $PR_TITLE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> if [[ &amp;#34;${PR_TITLE,,}&amp;#34; =~ &amp;#34;do not submit&amp;#34; ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;::error::PR title &amp;#39;$PR_TITLE&amp;#39; must not contain &amp;#39;DO NOT SUBMIT&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> fi&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>${PR_TITLE,,}&lt;/code> converts the PR title to lowercase so that the comparison is
case insensitive.&lt;/p>
&lt;p>&lt;code>=~ &amp;quot;do not submit&amp;quot;&lt;/code> is a regular expression to check if the title includes the
&amp;ldquo;DO NOT SUBMIT&amp;rdquo; string.&lt;/p>
&lt;p>With the action in place, I can just update my PR title by prepending &lt;code>DO NOT SUBMIT:&lt;/code> to it. The prefix doubles down as a documentation of my intent.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I don&amp;rsquo;t think I&amp;rsquo;ll ever remember the difference between a github action
and a github workflow. One is reusable, the other one is not. I always
forget which one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Alpine Linux: the maintainer workflow</title><link>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</link><pubDate>Sun, 20 Apr 2025 15:12:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</guid><description>&lt;p>I maintain &lt;a href="https://pkgs.alpinelinux.org/packages?name=&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=Thiago+Perrotta">a couple of
packages&lt;/a>
on Alpine Linux.&lt;/p>
&lt;p>Every now and then, a new software version is released, and it&amp;rsquo;s my duty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> as an
active package maintainer to update my packages.&lt;/p>
&lt;p>The typical workflow looks like the following.&lt;/p>
&lt;p>First I get an email notification from &amp;ldquo;Alpine Package DB&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Dear Thiago Perrotta&lt;/p>
&lt;p>This is an automatic message send from pkgs.alpinelinux.org
One or more of your aports have been flagged out of date based on
Anitya monitoring system &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/p>
&lt;p>argocd current: 2.14.2-r1 new: 2.14.9&lt;/p>
&lt;p>To update the package you can use our helper script:&lt;/p>
&lt;p>abump aport-version&lt;/p>
&lt;p>If the provided information is incorrect, please let us know on IRC
or &lt;a href="mailto:alpine-infra@alpinelinux.org">alpine-infra@alpinelinux.org&lt;/a>. Thanks!&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s important not to &lt;a href="https://opensource.com/business/15/12/avoid-burnout-live-happy">burn oneself
out&lt;/a>.&lt;/p>
&lt;p>I treat these notifications as an FYI. They &lt;em>are not&lt;/em> prompts to make me
immediately go and update the packages&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. For packages with frequent updates,
like &lt;code>argocd&lt;/code>, I&amp;rsquo;ll let a few patch versions accumulate before I take action.
Other times it is handy to batch package upgrades together so to do them all at
once. I use my personal judgment here. At the very least, this email will
trigger a TODO in my task list, so that it will not be forgotten. &lt;em>At some
point&lt;/em> it will be taken care of.&lt;/p>
&lt;p>Once I am ready to update the package, I &lt;code>ssh&lt;/code> to my Alpine Linux server. There
is absolutely no requirement to update alpine linux packages from alpine linux,
but it&amp;rsquo;s the most convenient to do, and I already have an alpine linux system
anyway.&lt;/p>
&lt;p>Then &lt;code>cd aports/&lt;/code>. This is a local git clone of the &lt;a href="https://gitlab.alpinelinux.org/alpine/aports">aports
tree&lt;/a>
(&lt;a href="https://wiki.alpinelinux.org/wiki/Aports_tree">wiki&lt;/a>).&lt;/p>
&lt;p>&lt;code>git pull&lt;/code>. I tend to clean up after myself, so the last branch is likely
already &lt;code>master&lt;/code>. But, if not, then &lt;code>git reset --hard &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git pull&lt;/code>. Amen.&lt;/p>
&lt;p>Now the real fun starts. And it&amp;rsquo;s surprisingly quick and simple, it feels like
cheating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% abump argocd-2.14.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will update the version and checksums in the corresponding &lt;code>APKBUILD&lt;/code> and
trigger a package build.&lt;/p>
&lt;p>It&amp;rsquo;s sensible to check the package release notes or changelog to find potential
incompatibilities and/or updates to the build process. It&amp;rsquo;s also sensible to
look at the package diffs to inspect for potential malware, which is becoming
increasingly more common these days in open source packages. &amp;ldquo;Secure your supply
chain&amp;rdquo;, as they say it.&lt;/p>
&lt;p>If the build completes successfully, create a new branch (&lt;code>git nb argocd&lt;/code>),
commit, push it (&lt;code>git pushm&lt;/code>), then create a merge request (MR) on
&lt;a href="https://gitlab.alpinelinux.org/">GitLab&lt;/a>. I normally use the Web UI to do so,
but it&amp;rsquo;s also possible to do it with the CLI. A link to create the MR is printed
to stdout upon pushing the branch, which makes the process even easier.&lt;/p>
&lt;p>It could happen that the MR fails CI for some architectures (even if it works
locally on my machine™). These errors need to be dealt with.&lt;/p>
&lt;p>The commit message must follow a certain style. I have a pre-commit script set
up that does it for me. It is typically in this form:&lt;/p>
&lt;pre tabindex="0">&lt;code>testing/argocd: upgrade to 2.14.9
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a rule: only one package per merge request.&lt;/p>
&lt;p>If there are more packages to upgrade, I run &lt;code>git bd&lt;/code> (&amp;ldquo;branch delete&amp;rdquo;) and then
restart this process. It&amp;rsquo;s quite manageable, as I don&amp;rsquo;t maintain a lot of
packages. Perhaps it could be further automated if there were more packages
and/or if the package upgrades were more frequent.&lt;/p>
&lt;p>The final MR looks like the following:
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/83026">!83026&lt;/a>.&lt;/p>
&lt;p>Now I sit tight and wait for approval.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On a &lt;a href="https://xkcd.com/2347/">&lt;em>best-effort&lt;/em>&lt;/a> basis.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Unless it&amp;rsquo;s a security risk or incident (e.g. whenever there&amp;rsquo;s a CVE
associated with it).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub: vacation mode</title><link>https://perrotta.dev/2025/04/github-vacation-mode/</link><pubDate>Sun, 13 Apr 2025 01:02:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-vacation-mode/</guid><description>&lt;p>&lt;a href="https://github.blog/changelog/2019-01-08-set-your-status/">Since 2019&lt;/a> GitHub
allows setting a status on your profile page:&lt;/p>
&lt;blockquote>
&lt;p>You can now set your status on GitHub! Use your status to share specific
information with only your organization, or share a status with all of GitHub!
Optionally, you can indicate that you&amp;rsquo;re busy so your collaborators can
determine whether to mention someone else for a quicker response.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/personalizing-your-profile#setting-a-status">Documentation&lt;/a>.
&lt;strong>TL;DR&lt;/strong>: The most practical use case is to set your profile to &amp;ldquo;Busy&amp;rdquo; whenever
you take time off (whether it&amp;rsquo;s vacation or sick leave).&lt;/p>
&lt;p>It&amp;rsquo;s possible to limit the status visibility to a single organization, so that
it is not publicly visible.&lt;/p>
&lt;p>It&amp;rsquo;s also possible to automatically clear the status after a given period (e.g.
one week).&lt;/p>
&lt;p>Why is this useful?&lt;/p>
&lt;ul>
&lt;li>signal to your teammates that you&amp;rsquo;re OOO, without leaving then wondering why
you&amp;rsquo;re taking forever to review their PRs&lt;/li>
&lt;li>prevent team assignments in PR reviews to automatically select you when you&amp;rsquo;re
OOO:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>If you select the &amp;ldquo;Busy&amp;rdquo; option, when people @mention your username, assign
you an issue or pull request, or request a pull request review from you, a
note next to your username will show that you&amp;rsquo;re busy. You will also be
excluded from automatic review assignment for pull requests assigned to any
teams you belong to. For more information, see Managing code review settings
for your team.&lt;/p>
&lt;/blockquote></description></item><item><title>Pipe to Claude</title><link>https://perrotta.dev/2025/04/pipe-to-claude/</link><pubDate>Wed, 09 Apr 2025 17:56:05 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/pipe-to-claude/</guid><description>&lt;p>One of the most effective ways to resolve random software development problems
in 2025:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#e5c07b">command&lt;/span> that emits warnings or errors&lt;span style="color:#56b6c2">}&lt;/span> | claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>claude&lt;/code> is Anthropic&amp;rsquo;s &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
CLI LLM agent tool:&lt;/p>
&lt;blockquote>
&lt;p>Learn about Claude Code, an agentic coding tool made by Anthropic. Currently
in beta as a research preview.&lt;/p>
&lt;/blockquote>
&lt;p>There is a series of little / simple tasks I&amp;rsquo;ve been procrastinating (e.g.
linter issues) that can be quickly resolved with the assistance of a LLM tool.&lt;/p>
&lt;p>There&amp;rsquo;s no silver bullet here: all changes need to be properly reviewed and
tested. Nonetheless, even if the tool is wrong 50% of the time, it&amp;rsquo;s still
faster for me to use the LLM tool as an initial suggestion than having to
do the research myself from scratch.&lt;/p></description></item><item><title>Github Actions: ubuntu-latest tools</title><link>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</link><pubDate>Wed, 09 Apr 2025 01:00:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</guid><description>&lt;p>Which tools are installed in the Github Actions environment for &lt;code>ubuntu-latest&lt;/code>?&lt;/p>
&lt;p>&lt;a href="https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md">This
repository&lt;/a>
has the answer.&lt;/p></description></item><item><title>Against names</title><link>https://perrotta.dev/2025/04/against-names/</link><pubDate>Sun, 06 Apr 2025 12:54:04 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/against-names/</guid><description>&lt;p>&lt;a href="https://steveklabnik.com/writing/against-names/">Against Names&lt;/a> by Steve
Klabnik:&lt;/p>
&lt;blockquote>
&lt;p>Specifically, if naming things is so hard… why do we insist on doing it all
the time?&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been meaning to convert to &lt;a href="https://github.com/jj-vcs/jj">&lt;code>jj&lt;/code>&lt;/a>. The post
has an extra argument to do so.&lt;/p></description></item><item><title>First Alpine Linux package in Community</title><link>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</link><pubDate>Tue, 01 Apr 2025 14:27:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</guid><description>&lt;p>How wholesome: someone sent a MR (Merge Request)
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/82047">!82047&lt;/a> in
&lt;code>alpine/aports&lt;/code> with the &lt;a href="https://github.com/google/yamlfmt">&lt;code>yamlfmt&lt;/code>&lt;/a> package
I maintain, moving it from &lt;code>testing/&lt;/code> to &lt;code>community/&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This means the package will be included in the next release of Alpine (3.22) as
part of its official repositories (unlike &amp;ldquo;testing&amp;rdquo;, which is only included in
&amp;ldquo;edge&amp;rdquo;).&lt;/p>
&lt;p>&lt;strong>In other words&lt;/strong>: This is the first time a package I maintain will make it to the
official repositories of a Linux distro I like!&lt;/p>
&lt;p>&lt;strong>Next milestone&lt;/strong>: Follow suit with a project I maintain.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I did not initiate this: it has just happened organically / spontaneously.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>AppleScript discoverability: more Amphetamine</title><link>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</link><pubDate>Tue, 01 Apr 2025 13:32:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</guid><description>&lt;p>Previously: &lt;a href="https://perrotta.dev/2025/03/amphetamine-keep-awake/">Amphetamine: Keep awake&lt;/a>.&lt;/p>
&lt;p>The previous setup would turn my external monitor off upon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span> &lt;span style="color:#c678dd">to&lt;/span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I needed to modify it to issue that command only when the session is not yet
active.&lt;/p>
&lt;p>Via &lt;a href="https://apple.stackexchange.com/questions/46521/how-do-i-find-out-the-applescript-commands-available-for-a-particular-app">Apple Stack
Exchange&lt;/a>
I noticed I could open the &lt;code>Script Editor.app&lt;/code>, then &lt;code>File &amp;gt; Open Dictionary...&lt;/code>, then select &lt;code>Amphetamine.app&lt;/code>.&lt;/p>
&lt;p>This would open a new window with a list of all available AppleScript commands
to my disposal.&lt;/p>
&lt;p>I quickly spotted one called &lt;code>session is active&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Returns boolean - true or false - indicating whether there is an active session&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;that&amp;rsquo;s exactly what I needed!&lt;/p>
&lt;p>Now I just needed to combine &lt;code>if&lt;/code> + &lt;code>session is active&lt;/code> + &lt;code>start a new session&lt;/code>.&lt;/p>
&lt;p>I don&amp;rsquo;t know AppleScript, and I didn&amp;rsquo;t intend to specialize on it now. In the
old days, I would have used a search engine and/or consulted a Stack Exchange
website to figure out what is the &lt;code>if&lt;/code> syntax. Or maybe even have introspected
the AppleScript documentation / manual.&lt;/p>
&lt;p>But we&amp;rsquo;re in 2025.&lt;/p>
&lt;p>I write &lt;code>llm applescript if &amp;quot;session is active&amp;quot; tell application to start new session&lt;/code> in Chrome. &lt;code>llm&lt;/code> is aliased to
&lt;code>https://chatgpt.com/?hints=search&amp;amp;ref=ext&amp;amp;q=%s&lt;/code>. ChatGPT Search happily tells
me what the correct syntax is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">not&lt;/span> (&lt;span style="color:#e06c75">session&lt;/span> &lt;span style="color:#56b6c2">is&lt;/span> &lt;span style="color:#e06c75">active&lt;/span>) &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">if&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">tell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I follow up with &lt;code>inline in osascript&lt;/code>, which results in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exactly what I was looking for.&lt;/p>
&lt;p>Moments later there&amp;rsquo;s a new commit in my corp dotfiles:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git show b306e31597b63007bb8c3aadb56340cdb6f52703
commit b306e31597b63007bb8c3aadb56340cdb6f52703
Author: Thiago Perrotta &amp;lt;{email redacted}&amp;gt;
Date: Tue Apr 1 13:31:33 2025 +0200

 better amphetamine

diff --git profile/.profile.d/functions_corp.sh profile/.profile.d/functions_corp.sh
index e58333a..365c176 100644
--- profile/.profile.d/functions_corp.sh
+++ profile/.profile.d/functions_corp.sh
@@ -19,7 +19,7 @@ redacted_login() {
 # Run at the start of the work day
 prodaccess() {
 echo &amp;#34;--&amp;gt; Amphetamine&amp;#34;
- osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;
+ osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>llm: remove stored key</title><link>https://perrotta.dev/2025/03/llm-remove-stored-key/</link><pubDate>Fri, 28 Mar 2025 14:09:41 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/llm-remove-stored-key/</guid><description>&lt;p>I was just trying &lt;a href="https://simonwillison.net/">Simon Willison&lt;/a>&amp;rsquo;s excellent CLI
&lt;a href="https://llm.datasette.io/en/stable/index.html">llm&lt;/a> tool:&lt;/p>
&lt;blockquote>
&lt;p>A CLI utility and Python library for interacting with Large Language Models,
both via remote APIs and models that can be installed and run on your own
machine.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s straightforward to set API Keys with it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wanted to set one for &lt;a href="https://www.anthropic.com/claude">Anthropic Claude&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But it turns out the correct name is &lt;code>anthropic&lt;/code>, not &lt;code>claude&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> anthropic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I wanted to clean up the &lt;code>claude&lt;/code> entry.&lt;/p>
&lt;p>Surprisingly, there&amp;rsquo;s no &lt;code>llm key remove&lt;/code> or &lt;code>llm key delete&lt;/code> command!
&lt;a href="https://llm.datasette.io/en/stable/help.html#llm-keys-help">Docs&lt;/a>.&lt;/p>
&lt;p>The workaround: edit the &lt;code>keys.json&lt;/code> file directly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output above is from macOS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e06c75">$EDITOR&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>llm keys path&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>keys.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;claude&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove &lt;code>claude&lt;/code> from it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And it&amp;rsquo;s done! Verify with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anthropic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Amphetamine: Keep awake</title><link>https://perrotta.dev/2025/03/amphetamine-keep-awake/</link><pubDate>Fri, 28 Mar 2025 00:14:32 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/amphetamine-keep-awake/</guid><description>&lt;p>&lt;a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The most awesome keep-awake app ever created for macOS. Amphetamine can keep
your Mac, and optionally its display(s), awake through a super simple on/off
switch, or automatically through easy-to-configure Triggers. Amphetamine is
extremely powerful and includes advanced features for those who need them, yet
remains intuitive and easy-to-use for those who don&amp;rsquo;t need all of the bells
and whistles.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s like &lt;a href="https://www.caffeine-app.net/">Caffeine&lt;/a> (or one of its dozen
clones), but better.&lt;/p>
&lt;p>Here&amp;rsquo;s how I use it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>on my personal laptop, whenever I am streaming a movie or a TV show (e.g. via
&lt;a href="https://jellyfin.org/">jellyfin&lt;/a>, so that it doesn&amp;rsquo;t cut off the streaming in
the middle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on my work computer, as soon as I start the work day, so that the VPN stays
connected for the whole day, as well as my SSH sessions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Upon launching it a system tray icon appears. A left-click opens up its
contextual menu, exposing lots of knobs and details. A right-click toggles it on
/ off.&lt;/p>
&lt;p>I configure the toggle so that it stays awake for a default of 4 hours for my
personal laptop, and 8-10 hours for my work computer (=the duration of an usual
work day).&lt;/p>
&lt;p>If you don&amp;rsquo;t specify a limit then it stays awake indefinitely, which is
counterproductive: (i) spending more energy and battery than necessary and (ii)
from an operational security perspective, it &lt;em>should&lt;/em> ideally self-lock at some
point, in case you forget to do so.&lt;/p>
&lt;p>I just care about keeping internet and sessions connectivity alive, but it&amp;rsquo;s
also possible to configure it to keep the display on.&lt;/p>
&lt;p>For bonus productivity, configure it to always launch at login, so that
activating it is just one (right) click away.&lt;/p>
&lt;p>Apparently I activated it more than 180 times in my personal laptop, effectively
keeping it awake for more than 24 days. At work, more than 250 sessions for more
than 8 days&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>When writing this post, I just learned that I can activate it via
&lt;a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can augment my &lt;a href="https://perrotta.dev/2024/10/prodaccess/">&lt;code>prodaccess&lt;/code>&lt;/a> script
with that.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>There is definitely something odd with these numbers.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>pre-commit: make a hook opt-in</title><link>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</link><pubDate>Thu, 27 Mar 2025 13:22:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</guid><description>&lt;p>Recently we added the following hook to our &lt;a href="https://pre-commit.com">pre-commit&lt;/a>
setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be triggered with &lt;code>pre-commit run --all-files helm-lock&lt;/code>.&lt;/p>
&lt;p>It turned out to be an issue because not every developer has read-only access
to our helm repositories.&lt;/p>
&lt;p>The workaround was to make this hook opt-in.&lt;/p>
&lt;p>We can do so by adding it to the &lt;a href="https://pre-commit.com/#confining-hooks-to-run-at-certain-stages">manual stage&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - manual
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be then invoked like this: &lt;code>pre-commit run --all-files helm-lock --hook-stage manual&lt;/code>.&lt;/p>
&lt;p>An alternative could have been to instruct people to set
&lt;a href="https://pre-commit.com/#temporarily-disabling-hooks">&lt;code>SKIP=helm-lock&lt;/code>&lt;/a>, however
&lt;a href="https://world.hey.com/jason/software-defaults-15955a8e">defaults&lt;/a> are powerful.&lt;/p></description></item><item><title>1password CLI + direnv integration</title><link>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</link><pubDate>Wed, 26 Mar 2025 14:15:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</guid><description>&lt;p>Let&amp;rsquo;s stay you&amp;rsquo;re working on a terraform module that has a sensitive variable
named &lt;code>api_key&lt;/code> in &lt;code>variables.tf&lt;/code>.&lt;/p>
&lt;p>When running &lt;code>terraform apply&lt;/code>, you&amp;rsquo;ll need to supply its value. Every. Single.
Time.&lt;/p>
&lt;p>We can make it persistent by setting &lt;code>export TF_VAR_api_key={my value}&lt;/code>.
However this is only persistent within the current shell.&lt;/p>
&lt;p>To make it persistent across multiple sessions, create a &lt;code>.envrc&lt;/code> file at the
root module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">={&lt;/span>my value&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then source it: &lt;code>source ~/.envrc&lt;/code>. Now you have to source it every single time
you open a new shell.&lt;/p>
&lt;p>We can use &lt;a href="http://direnv.net/">&lt;code>direnv&lt;/code>&lt;/a> to do so automatically. It has been
&lt;a href="https://perrotta.dev/2022/01/direnv-automate-your-environment-variables/">previously covered&lt;/a>. But&amp;hellip;now we have
a secret stored as plain text in our filesystem.&lt;/p>
&lt;p>We could store it in a more secure place, like a password manager, and then have
a mechanism automatically fetch its value.&lt;/p>
&lt;h2 id="first-approach">First approach&lt;/h2>
&lt;p>When using 1Password, the &lt;a href="https://developer.1password.com/docs/cli/">1Password
CLI&lt;/a> is such a mechanism.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>op run --no-masking -- op &lt;span style="color:#e5c07b">read&lt;/span> &lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can fetch the secret reference path from 1Password:
&lt;a href="https://developer.1password.com/docs/cli/secret-references/">docs&lt;/a>. Click &amp;ldquo;Copy
Secret Reference&amp;rdquo; in the corresponding entry item.&lt;/p>
&lt;h2 id="second-approach">Second approach&lt;/h2>
&lt;p>The above is one possibility, and it works flawlessly, but there&amp;rsquo;s a second
approach that uses &lt;code>op run&lt;/code> alone with a secret reference that is dynamically
replaced.&lt;/p>
&lt;p>Create an &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the &lt;code>.envrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>terraform apply&lt;/code> via &lt;code>op run&lt;/code>, as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>op run --env-file&lt;span style="color:#56b6c2">=&lt;/span>.env -- terraform apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/">https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nshipster.com/1password-cli/">https://nshipster.com/1password-cli/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>