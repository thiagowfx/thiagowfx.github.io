<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Dev on not just serendipity</title><link>https://www.perrotta.dev/tags/dev/</link><description>Recent content in Dev on not just serendipity</description><generator>Hugo -- 0.133.0</generator><language>en-us</language><copyright>Copyright Â© 2021 - 2024 Thiago Perrotta Â· CC BY-NC-SA 4.0 Â· RSS Â· Made with â™¥ in ðŸ‡¨ðŸ‡¦</copyright><lastBuildDate>Sun, 18 Aug 2024 17:32:48 +0200</lastBuildDate><atom:link href="https://www.perrotta.dev/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>apk autoupdate on alpine linux</title><link>https://www.perrotta.dev/2024/08/apk-autoupdate-on-alpine-linux/</link><pubDate>Sun, 18 Aug 2024 17:32:48 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/apk-autoupdate-on-alpine-linux/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Upon running &lt;code>doas apk upgrade&lt;/code> on Alpine Linux, select
packages with binaries backed by system services should be automatically
restarted.&lt;/p></description><content:encoded><![CDATA[<p><strong>Problem statement</strong>: Upon running <code>doas apk upgrade</code> on Alpine Linux, select
packages with binaries backed by system services should be automatically
restarted.</p>
<p>Deb-based systems have
<a href="https://manpages.debian.org/bookworm/debian-goodies/checkrestart.8.en.html"><code>checkrestart(8)</code></a>.</p>
<p>On Alpine, the best available approach as of today is <a href="https://github.com/jirutka/apk-autoupdate/">https://github.com/jirutka/apk-autoupdate/</a>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas apk add apk-autoupdate
</span></span><span style="display:flex;"><span>$EDITOR /etc/apk/autoupdate.conf
</span></span></code></pre></div><p>Then make the two following changes<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>:</p>
<pre tabindex="0"><code># Because the default is &#39;*&#39;, which will prevent all services from restarting.
services_blacklist=&#34;&#34;

# List of services that should be restarted upon package upgrades.
services_whitelist=&#34;miniflux tailscale&#34;
</code></pre><p>From this point on, whenever there are system upgrades for the aforementioned
services (<code>doas apk upgrade</code>), they will be automatically restarted. There&rsquo;s no
need for <code>doas /etc/init.d/miniflux restart</code>.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>h/t to @fossdd for replying to my
<a href="https://github.com/jirutka/apk-autoupdate/issues/8">https://github.com/jirutka/apk-autoupdate/issues/8</a> thread.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>JSON schema negation</title><link>https://www.perrotta.dev/2024/08/json-schema-negation/</link><pubDate>Tue, 13 Aug 2024 11:27:17 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/json-schema-negation/</guid><description>&lt;p>&lt;a href="https://json-schema.org/">JSON Schema&lt;/a> is a powerful validation tool to enforce
a given structure and/or data type in JSON and YAML files.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: Disallow &lt;code>aws.iam_role&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, with the implicit goal of
allowing &lt;code>aws.iamRole&lt;/code>. Because naming and sticking to conventions is hard.&lt;/p>
&lt;p>Illustration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">aws&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">iamRole&lt;/span>: &lt;span style="color:#ae81ff">fooArn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">iam_role&lt;/span>: &lt;span style="color:#ae81ff">barArn &lt;/span> &lt;span style="color:#75715e"># &amp;lt;-- disallow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><content:encoded><![CDATA[<p><a href="https://json-schema.org/">JSON Schema</a> is a powerful validation tool to enforce
a given structure and/or data type in JSON and YAML files.</p>
<p><strong>Problem statement</strong>: Disallow <code>aws.iam_role</code><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, with the implicit goal of
allowing <code>aws.iamRole</code>. Because naming and sticking to conventions is hard.</p>
<p>Illustration:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">aws</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">iamRole</span>: <span style="color:#ae81ff">fooArn</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">iam_role</span>: <span style="color:#ae81ff">barArn </span> <span style="color:#75715e"># &lt;-- disallow</span>
</span></span></code></pre></div><p>We can accomplish this with the following schema (<code>% cat values.schema.json</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;$schema&#34;</span>: <span style="color:#e6db74">&#34;http://json-schema.org/draft-07/schema#&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;title&#34;</span>: <span style="color:#e6db74">&#34;Schema that disallows aws.iam_role&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;object&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;additionalProperties&#34;</span>: <span style="color:#66d9ef">true</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;properties&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;aws&#34;</span>: {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;object&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;additionalProperties&#34;</span>: <span style="color:#66d9ef">true</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;not&#34;</span>: {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;required&#34;</span>: [<span style="color:#e6db74">&#34;iam_role&#34;</span>]
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Test</strong>: <code>helm lint</code> should fail that schema validation with the aforementioned
input.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>This is for a <a href="https://helm.sh/docs/topics/charts/#schema-files">helm
chart</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>â˜… Self-documented Makefiles</title><link>https://www.perrotta.dev/2024/08/self-documented-makefiles/</link><pubDate>Thu, 08 Aug 2024 10:42:49 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/self-documented-makefiles/</guid><description>&lt;p>&lt;code>Makefile&lt;/code>s are often great &lt;code>bash&lt;/code> script replacements. Instead of creating a
&lt;code>bash&lt;/code> script with multiple functions with various dependencies (from a
topological graph viewpoint), just create a bunch of &lt;code>Makefile&lt;/code> targets.&lt;/p></description><content:encoded><![CDATA[<p><code>Makefile</code>s are often great <code>bash</code> script replacements. Instead of creating a
<code>bash</code> script with multiple functions with various dependencies (from a
topological graph viewpoint), just create a bunch of <code>Makefile</code> targets.</p>
<p>Recently I found myself writing the following <code>Makefile</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#75715e"># This Makefile is used to bootstrap the ArgoCD installation in the cluster.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># It is idempotent.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>ROOT <span style="color:#f92672">:=</span> <span style="color:#66d9ef">$(</span>shell git rev-parse --show-toplevel<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>TERRAFORM_GITHUB_PATH <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/terraform/modules/global-github&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>TERRAFORM <span style="color:#f92672">:=</span> terraform
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">all</span><span style="color:#f92672">:</span> webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Update helm dependencies.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">helm helm-dep-update</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/argocd&#34;</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/external-secrets&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Edit all files.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">edit</span><span style="color:#f92672">:</span> edit-webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Modify github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">edit-webhook webhook-edit</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#e6db74">&#34;</span>$$<span style="color:#e6db74">EDITOR&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">/main.tf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Apply github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">webhook</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">$(</span>TERRAFORM<span style="color:#66d9ef">)</span> -chdir<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> apply
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">.PHONY</span><span style="color:#f92672">:</span> all edit edit-webhook helm helm-dep-update webhook webhook-edit
</span></span></code></pre></div><p>As you can see, there are a bunch of comments on top of each target. The
question is: How to surface these comments to the user?</p>
<p>A <code>make help</code> command would be great.</p>
<p>With a bit of searching, I found:</p>
<ul>
<li><a href="https://gist.github.com/prwhite/8168133">https://gist.github.com/prwhite/8168133</a></li>
<li><a href="https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html">https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html</a></li>
</ul>
<p>These were good starting points. The technique was to transform the above
<code>Makefile</code> into the following one:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#75715e"># This Makefile is used to bootstrap the ArgoCD installation in the cluster.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># It is idempotent.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>ROOT <span style="color:#f92672">:=</span> <span style="color:#66d9ef">$(</span>shell git rev-parse --show-toplevel<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>TERRAFORM_GITHUB_PATH <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/terraform/modules/global-github&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>TERRAFORM <span style="color:#f92672">:=</span> terraform
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">all</span><span style="color:#f92672">:</span> webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">helm helm-dep-update</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Update helm dependencies.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/argocd&#34;</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/external-secrets&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">edit</span><span style="color:#f92672">:</span> edit-webhook  <span style="color:#75715e">## Edit all files.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">edit-webhook webhook-edit</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Modify github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#e6db74">&#34;</span>$$<span style="color:#e6db74">EDITOR&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">/main.tf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">webhook</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Apply github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#66d9ef">$(</span>TERRAFORM<span style="color:#66d9ef">)</span> -chdir<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> apply
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">.PHONY</span><span style="color:#f92672">:</span> all edit edit-webhook helm helm-dep-update webhook webhook-edit
</span></span></code></pre></div><p>Then we would add a <code>help</code> target to parse the comments after the <code>##</code>.</p>
<p>The first source suggested:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>           <span style="color:#75715e">## Show this help.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@fgrep -h <span style="color:#e6db74">&#34;##&#34;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | fgrep -v fgrep | sed -e <span style="color:#e6db74">&#39;s/\\$$//&#39;</span> | sed -e <span style="color:#e6db74">&#39;s/##//&#39;</span>
</span></span></code></pre></div><p>It is simple and gets the job done, but the formatting was poor:</p>
<pre tabindex="0"><code>% make help
help:            Show this help.
helm helm-dep-update:   Update helm dependencies.
edit: edit-webhook   Edit all files.
edit-webhook webhook-edit:   Modify github webhooks to the deploy servers.
webhook:   Apply github webhooks to the deploy servers.
</code></pre><p>The second source suggested:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	@grep -E <span style="color:#e6db74">&#39;^[a-zA-Z_-]+:.*?## .*$$&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | sort | awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; {printf &#34;\033[36m%-30s\033[0m %s\n&#34;, $$1, $$2}&#39;</span>
</span></span></code></pre></div><p>&hellip;which produces:</p>
<pre tabindex="0"><code>% make help
edit                           Edit all files.
webhook                        Apply github webhooks to the deploy servers.
</code></pre><p>The formatting is great, but alas it does not match multiple targets in a single
line.</p>
<p>I could have modified the targets to be like this:</p>
<pre tabindex="0"><code>edit-webhook: webhook-edit
webhook-edit:  ## Description here
</code></pre><p>However then I would have to duplicate their comments. I wanted to do better.</p>
<p>With a bit of LLM<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> magic from GPT-4o, we can have the best of both worlds,
supporting both single and multiple targets in the same line:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Show this help.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@grep -E <span style="color:#e6db74">&#39;^[a-zA-Z_-]+([ \t]+[a-zA-Z_-]+)*:[ \t]*## .*$$&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; {n=split($$1, targets, /[ \t]+/); for (i=1; i&lt;=n; i++) {if (targets[i] != &#34;&#34;) printf &#34;\033[36m%-30s\033[0m %s\n&#34;, targets[i], $$2}}&#39;</span> | sort
</span></span></code></pre></div><p>The output (amazing!):</p>
<pre tabindex="0"><code>% make help
edit-webhook                   Modify github webhooks to the deploy servers.
helm                           Update helm dependencies.
helm-dep-update                Update helm dependencies.
help                           Show this help.
webhook                        Apply github webhooks the deploy servers.
webhook-edit                   Modify github webhooks to the deploy servers.
</code></pre><p>The chat session: <a href="https://chatgpt.com/share/f9872dfa-650e-4a0c-b974-701181c237c6">https://chatgpt.com/share/f9872dfa-650e-4a0c-b974-701181c237c6</a>.</p>
<p>We could also add:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span>.DEFAULT_GOAL <span style="color:#f92672">:=</span> help
</span></span></code></pre></div><p>&hellip;to ensure that a plain <code>make</code> invokation behaves like <code>make help</code>.</p>
<p><strong>Edit(2024-08-08)</strong>: I had to make one small adaptation<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> to make it work with
dependencies, which is the whole point of <code>make</code>:</p>
<pre tabindex="0"><code>help:  ## Show this help.
	@grep -E &#39;^[.a-zA-Z_-]+([ \t]+[.a-zA-Z_-]+)*:[ \t.a-zA-Z_-]*## .*$$&#39; $(MAKEFILE_LIST) | awk &#39;BEGIN {FS = &#34;:.*?## &#34;}; {n=split($$1, targets, /[ \t]+/); for (i=1; i&lt;=n; i++) {if (targets[i] != &#34;&#34;) printf &#34;\033[36m%-30s\033[0m %s\n&#34;, targets[i], $$2}}&#39; | sort
</code></pre><p>The previous version would not recognize the following entry:</p>
<pre tabindex="0"><code>all-in-dev: edit webhook  ## Run all necessary steps in the development environment.`
</code></pre><div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>If I&rsquo;ll start to talk about &ldquo;AI&rdquo; in this blog, the very least I can do is
to call them what they really are: <strong>LLMs</strong>. The &ldquo;AI&rdquo; acronym is currently <em>way</em>
too hyped.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Never fully trust LLMs. Well, drop the <em>fully</em>. Just <strong>never trust LLMs</strong>,
period.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Optimize PNG images</title><link>https://www.perrotta.dev/2024/08/optimize-png-images/</link><pubDate>Tue, 06 Aug 2024 14:39:31 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/optimize-png-images/</guid><description>&lt;p>Before checking &lt;code>.png&lt;/code> images into git repositories, you should optimize them â€“
mostly for their file size.&lt;/p></description><content:encoded><![CDATA[<p>Before checking <code>.png</code> images into git repositories, you should optimize them â€“
mostly for their file size.</p>
<p>The Chromium project provides <a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/tools/resources/optimize-png-files.sh">this
script</a>
to do so. It boils down to installing and running the following executables:</p>
<ul>
<li><code>optipng</code>: <a href="https://optipng.sourceforge.net/">https://optipng.sourceforge.net/</a></li>
<li><code>pngcrush</code>: <a href="https://pmt.sourceforge.io/pngcrush/">https://pmt.sourceforge.io/pngcrush/</a></li>
<li><code>pngout</code>: <a href="https://www.jonof.id.au/kenutils.html">https://www.jonof.id.au/kenutils.html</a></li>
</ul>
<p>The first two are available via homebrew.</p>]]></content:encoded></item><item><title>kubectl: print all secret values in plain text</title><link>https://www.perrotta.dev/2024/08/kubectl-print-all-secret-values-in-plain-text/</link><pubDate>Tue, 06 Aug 2024 13:37:31 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/kubectl-print-all-secret-values-in-plain-text/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/">kubernetes
secret&lt;/a> with more
than one key-value pair, print &lt;strong>all&lt;/strong> of them in plain text (i.e.
base64-decoded in this context).&lt;/p></description><content:encoded><![CDATA[<p><strong>Problem statement</strong>: Given a <a href="https://kubernetes.io/docs/concepts/configuration/secret/">kubernetes
secret</a> with more
than one key-value pair, print <strong>all</strong> of them in plain text (i.e.
base64-decoded in this context).</p>
<p><strong>Edit(2024-08-08)</strong>: It turns out I made a mistake. The effect of the post
below is akin to <code>kubectl describe [...] -o yaml</code>. I&rsquo;ll keep the post for
bookkeeping purposes anyway.</p>
<p>Basically, something like:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl cat secret -n infra-services my-cool-secret
</span></span></code></pre></div><p>Except that there is no <code>kubectl cat</code>, what a shame. It would be really great if
we had it, for consistency with <code>systemctl cat</code>. Oh well.</p>
<p>There is <code>kubectl edit</code> though â€“ amen, just like <code>systemctl edit</code>. This will
open your <code>$EDITOR</code>. It&rsquo;s often inconvenient to copy text to the clipboard from
your terminal-based editor though, due to intricacies of different terminals,
shells, terminal multiplexers, and OSC-52, therefore I don&rsquo;t deem this as an
acceptable solution.</p>
<p>There is a simple trick though:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>EDITOR<span style="color:#f92672">=</span>cat kubectl edit secret -n infra-services my-cool-secret
</span></span></code></pre></div><p>&hellip;which works exactly as you would expect <code>kubectl cat</code> to behave. It displays
a warning at the end:</p>
<pre tabindex="0"><code>Edit cancelled, no changes made.
</code></pre><p>&hellip;however it can be duly ignored.</p>
<p>If we didn&rsquo;t have this trick, we could have:</p>
<ul>
<li>written a bloated tool in golang to pipe to e.g. <a href="https://github.com/ashleyschuett/kubernetes-secret-decode">https://github.com/ashleyschuett/kubernetes-secret-decode</a> (<a href="https://itnext.io/secrets-in-plain-text-13a98f54ef97">via</a>)</li>
<li>used the <code>kubectl edit</code> trick above, with a decent terminal and OSC-52 setup</li>
<li>used <code>jq</code> with its <code>map</code> and <code>base64d</code> constructs (c.f. <a href="https://stackoverflow.com/questions/50286066/kubernetes-kubectl-print-all-secrets">Stack
Overflow</a>)</li>
<li>used <code>kubectl describe</code> with <code>-o jsonpath</code>, specifying every single field, one
by one (super tedious) c.f. <a href="https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/">this previous post</a></li>
</ul>]]></content:encoded></item><item><title>Direnv nested</title><link>https://www.perrotta.dev/2024/08/direnv-nested/</link><pubDate>Thu, 01 Aug 2024 01:02:10 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/direnv-nested/</guid><description>&lt;p>I covered &lt;a href="https://www.perrotta.dev/2022/01/direnv-automate-your-environment-variables/">&lt;code>direnv&lt;/code>&lt;/a> before.&lt;/p>
&lt;p>&lt;strong>New scenario&lt;/strong>: Given a directory structure with two nested &lt;code>.envrc&lt;/code>s:&lt;/p></description><content:encoded><![CDATA[<p>I covered <a href="https://www.perrotta.dev/2022/01/direnv-automate-your-environment-variables/"><code>direnv</code></a> before.</p>
<p><strong>New scenario</strong>: Given a directory structure with two nested <code>.envrc</code>s:</p>
<pre tabindex="0"><code>% tree -a top
top
â”œâ”€â”€ .envrc
â””â”€â”€ inner
    â””â”€â”€ .envrc
</code></pre><p>It turns out that, surprisingly, <code>cd top/inner</code> will load <em>only</em>
<code>top/inner/.envrc</code>. The top-level <code>top/.envrc</code> will <em>not</em> be automatically
loaded.</p>
<p>This is intentional, meant for security reasons.</p>
<p>In order to source the parent <code>.envrc</code>, add <code>source_up</code> to the inner one.</p>
<p>Alternatively, <code>source_env ..</code> also works. I prefer <code>source_up</code>.</p>
<p>There&rsquo;s also <code>source_up_if_exists</code>, which works gracefully even if there&rsquo;s
no env file to source upwards.</p>
<p>The full list of built-in functions is available here:
<a href="https://direnv.net/man/direnv-stdlib.1.html">https://direnv.net/man/direnv-stdlib.1.html</a></p>
<p><strong>Reference</strong>: <a href="https://github.com/direnv/direnv/issues/757">https://github.com/direnv/direnv/issues/757</a></p>
<p><strong>Use Case</strong>: Add top-level environment variables to <code>top/.envrc</code>. Add <code>layout</code>
to <code>top/inner/.envrc</code>. For example, perhaps <code>inner</code> is a custom <code>git</code> repository
/ project.</p>]]></content:encoded></item><item><title>Docker on Alpine Linux</title><link>https://www.perrotta.dev/2024/07/docker-on-alpine-linux/</link><pubDate>Tue, 30 Jul 2024 22:56:58 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/docker-on-alpine-linux/</guid><description>&lt;p>In this post: how to properly start &lt;code>docker&lt;/code> on an Alpine Linux server.&lt;/p></description><content:encoded><![CDATA[<p>In this post: how to properly start <code>docker</code> on an Alpine Linux server.</p>
<p>First, install <code>docker</code> and friends:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas apk add docker docker-cli docker-compose
</span></span></code></pre></div><p>Then start the <code>docker</code> service:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas service docker start
</span></span></code></pre></div><p>Check if it started successfully:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>service docker status
</span></span></code></pre></div><p>If not, then look at the logs:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>less /var/log/docker.log
</span></span></code></pre></div><p>I got an error:</p>
<pre tabindex="0"><code>failed to start daemon: error initializing graphdriver: driver not supported
</code></pre><p>The suggestion was to change the driver to <code>overlay2</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% $EDITOR /etc/docker/daemon.json
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;storage-driver&#34;</span>: <span style="color:#e6db74">&#34;overlay2&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>Then restart <code>docker</code>.</p>
<p>I got another error:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>level<span style="color:#f92672">=</span>error msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;failed to mount overlay: no such device&#34;</span> storage-driver<span style="color:#f92672">=</span>overlay2
</span></span></code></pre></div><p>The suggestion was to reboot:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas reboot
</span></span></code></pre></div><p>Then start <code>docker</code> again:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas service docker start
</span></span></code></pre></div><p>And now everything works!</p>]]></content:encoded></item><item><title>Parallel</title><link>https://www.perrotta.dev/2024/07/parallel/</link><pubDate>Wed, 24 Jul 2024 14:48:09 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/parallel/</guid><description>&lt;p>Apparently there are two Unix-y ways to run commands in parallel:&lt;/p>
&lt;ul>
&lt;li>GNU parallel: &lt;a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/&lt;/a>&lt;/li>
&lt;li>moreutils parallel: &lt;a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>Apparently there are two Unix-y ways to run commands in parallel:</p>
<ul>
<li>GNU parallel: <a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/</a></li>
<li>moreutils parallel: <a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/</a></li>
</ul>
<p>A simple example with <code>wc -l</code>:</p>
<p>GNU receives input from stdin:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>find . -type f | parallel wc -l
</span></span></code></pre></div><p>Moreutils receives input from command-line arguments:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>parallel wc -l -- <span style="color:#66d9ef">$(</span>find . -type f<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><p>Style aside, the annoyance is that they are not compatible in Debian, Ubuntu and
macOS (homebrew), due to both having the <code>parallel</code> executable:</p>
<ul>
<li><a href="https://superuser.com/questions/917577/how-can-i-install-gnu-parallel-alongside-moreutils-on-ubuntu-debian">https://superuser.com/questions/917577/how-can-i-install-gnu-parallel-alongside-moreutils-on-ubuntu-debian</a></li>
<li><a href="https://askubuntu.com/questions/1191516/what-happens-to-usr-bin-parallel-if-i-install-the-moreutils-on-top-of-the-paral">https://askubuntu.com/questions/1191516/what-happens-to-usr-bin-parallel-if-i-install-the-moreutils-on-top-of-the-paral</a></li>
</ul>
<p>Debian thread wherein no consensus is achieved:
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=597050">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=597050</a></p>
<p>I will stick to <code>moreutils</code> due to its simplicity and richer suite.
Nonetheless, it would be better if we didn&rsquo;t have binary clashes like this. It
is really annoying and developer-unfriendly.</p>
<p>Of course, my favorite Linux distributions do not have this issue:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% apk info -L moreutils | grep parallel
</span></span><span style="display:flex;"><span>usr/bin/parallel-moreutils
</span></span></code></pre></div><p>&hellip;Alpine just installs <code>parallel</code> from <code>moreutils</code> with another name.</p>
<p>Arch Linux <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/moreutils/-/blob/main/PKGBUILD?ref_type=heads">does the
same</a>:</p>
<pre tabindex="0"><code>mv &#34;$pkgdir&#34;/usr/bin/parallel &#34;$pkgdir&#34;/usr/bin/parallel-moreutils
</code></pre><p>Moreover, GNU Parallel has an annoying citation notice, which the Arch Linux
package <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/parallel/-/blob/main/0001-Remove-citation-things.patch?ref_type=heads">helpfully
removes</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://bugs.launchpad.net/ubuntu/+source/parallel/+bug/1779764">Some</a>
<a href="https://news.ycombinator.com/item?id=15319715">context</a>. Not everyone works
in academia. Also it&rsquo;s quite weird that the program is called &ldquo;GNU
parallel&rdquo;, is published under the GPL, and yet does not seemingly follow the
<a href="https://www.gnu.org/licenses/gpl-faq.en.html#RequireCitation">GPL
guidelines</a>.
<a href="https://git.savannah.gnu.org/cgit/parallel.git/tree/doc/citation-notice-faq.txt#n27">This</a>
is the official FAQ of the program.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Alpine Linux: How to install all manpages (idiomatically)</title><link>https://www.perrotta.dev/2024/07/alpine-linux-how-to-install-all-manpages-idiomatically/</link><pubDate>Sat, 20 Jul 2024 16:19:53 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/alpine-linux-how-to-install-all-manpages-idiomatically/</guid><description>&lt;p>This post is a reply to
&lt;a href="https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html">https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html&lt;/a>.&lt;/p>
&lt;p>The author describes their experience while attempting to install all man pages
for all the packages in use in their system.&lt;/p>
&lt;p>The breakdown progression has some valuable insights on how a typical Unix
sysadmin addresses a problem. I tend to adopt a similar approach when entering
unknown territory.&lt;/p>
&lt;p>However, in Alpine Linux, there is a better way.&lt;/p></description><content:encoded><![CDATA[<p>This post is a reply to
<a href="https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html">https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html</a>.</p>
<p>The author describes their experience while attempting to install all man pages
for all the packages in use in their system.</p>
<p>The breakdown progression has some valuable insights on how a typical Unix
sysadmin addresses a problem. I tend to adopt a similar approach when entering
unknown territory.</p>
<p>However, in Alpine Linux, there is a better way.</p>
<h2 id="solution">Solution</h2>
<p>There is a <code>docs</code> metapackage:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% apk info docs
</span></span><span style="display:flex;"><span>docs-0.2-r6 description:
</span></span><span style="display:flex;"><span>Meta package <span style="color:#66d9ef">for</span> pulling in all documentation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>docs-0.2-r6 webpage:
</span></span><span style="display:flex;"><span>https://alpinelinux.org
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>docs-0.2-r6 installed size:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4096</span> B
</span></span></code></pre></div><p>All you have to do is:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% doas apk add docs
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>1/125<span style="color:#f92672">)</span> Installing mandoc-doc <span style="color:#f92672">(</span>1.14.6-r13<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>2/125<span style="color:#f92672">)</span> Installing docs <span style="color:#f92672">(</span>0.2-r6<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>3/125<span style="color:#f92672">)</span> Installing libseccomp-doc <span style="color:#f92672">(</span>2.5.5-r1<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>4/125<span style="color:#f92672">)</span> Installing busybox-doc <span style="color:#f92672">(</span>1.36.1-r31<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>...<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>Likewise, it is trivial to get rid of all man pages:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% doas apk del docs
</span></span></code></pre></div><p>I would like to give a few other suggestions to the author, if we were to assume
there is no <code>docs</code> metapackage:</p>
<ul>
<li>
<p><strong>Step 2</strong>: You could also <code>cat /etc/apk/world</code>
(<a href="https://serverfault.com/questions/1032488/alpine-linux-apk-list-out-directly-installed-packages-by-apk-add">reference</a>).</p>
</li>
<li>
<p><strong>Step 4</strong>: <code>combine</code> from <a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils</a> is more
user-friendly than <code>comm</code>. I need to look up how to use <code>comm</code> every single
time, whereas <code>combine</code> is much easier to remember.</p>
</li>
</ul>
<h2 id="appendix">Appendix</h2>
<p>This was also a typical <a href="https://www.perrotta.dev/2024/06/xy-problem/">xyproblem</a> example:</p>
<ul>
<li>
<p>What is the attempt? &ldquo;I want to install, via <code>apk add</code>, all <code>foo-doc</code> packages
for every <code>foo</code> package on my system&rdquo;.</p>
</li>
<li>
<p>What is the end goal? &ldquo;I want to install all man pages for the installed
packages on my system&rdquo;.</p>
</li>
</ul>]]></content:encoded></item><item><title>kubectl: get all logs from all pods</title><link>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</link><pubDate>Mon, 15 Jul 2024 13:23:35 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</guid><description>&lt;p>Frequently:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But how do you know what hash to use after &lt;code>server-&lt;/code>?&lt;/p></description><content:encoded><![CDATA[<p>Frequently:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
</span></span></code></pre></div><p>But how do you know what hash to use after <code>server-</code>?</p>
<p><strong>Option 1)</strong>: TAB auto-completion:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-&lt;TAB&gt;
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>tab completion for <code>kubectl</code> isn&rsquo;t always properly set up</li>
<li>if there is more than one pod, you would have to type in the first few letters
of the hash before hitting TAB again, that&rsquo;s annoying and non-ergonomic</li>
</ul>
<p><strong>Option 2)</strong>: subshell</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd <span style="color:#66d9ef">$(</span>kubectl get pod -n argocd | grep argocd-repo-server | cut -f1 -d<span style="color:#e6db74">&#39; &#39;</span> | head -1<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>a lot of typing</li>
<li><code>head -1</code> is necessary in case there are multiple pods<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
</ul>
<p><strong>Option 3)</strong>: get all logs from all pods that match a given label</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd -l app<span style="color:#f92672">=</span>app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>--all-containers<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--ignore-errors<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>This is much more ergonomic.</p>
<p>You still need to figure out what label to use though:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl describe pod -n argocd argocd-repo-server-5d59975687-dxnh7 | grep -A7 -i labels:
</span></span><span style="display:flex;"><span>Labels:           app.kubernetes.io/component<span style="color:#f92672">=</span>repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/managed-by<span style="color:#f92672">=</span>Helm
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/name<span style="color:#f92672">=</span>argocd-repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/part-of<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/version<span style="color:#f92672">=</span>v2.11.4
</span></span><span style="display:flex;"><span>                  helm.sh/chart<span style="color:#f92672">=</span>argo-cd-7.3.4
</span></span><span style="display:flex;"><span>                  pod-template-hash<span style="color:#f92672">=</span>5d59975687
</span></span></code></pre></div><p><strong>Source</strong>: <a href="https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller">https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller</a></p>
<p>Happy logging!</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Or <code>tail -1</code>, for that matter.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>kubectl: get secret with jsonpath and add a newline</title><link>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</link><pubDate>Tue, 09 Jul 2024 11:36:34 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</guid><description>&lt;p>When retrieving opaque secrets with &lt;code>kubectl&lt;/code>, one will often invoke this
typical command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;{.data.value}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ&lt;span style="color:#f92672">==&lt;/span>ubuntu@ubuntu:~ $
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But isn&amp;rsquo;t this ugly? The prompt is concatenated with the output.&lt;/p></description><content:encoded><![CDATA[<p>When retrieving opaque secrets with <code>kubectl</code>, one will often invoke this
typical command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>But isn&rsquo;t this ugly? The prompt is concatenated with the output.</p>
<p>It turns out <code>jsonpath</code> can emit a newline for improved readability:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Note that the <code>{&quot;\n&quot;}</code> <strong>must</strong> be quoted.</p>
<p>And then you could pipe it to <code>base64 -d</code> afterwards, as usual, and it&rsquo;s a no-op:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d
</span></span><span style="display:flex;"><span>you are curious arent youubuntu@ubuntu:~ $
</span></span></code></pre></div><p>However, the <code>base64</code> output also swallows the newline. This can be resolved
with a simple <code>echo</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d <span style="color:#f92672">&amp;&amp;</span> echo
</span></span><span style="display:flex;"><span>you are curious arent you
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Newlines are hard, eh?</p>]]></content:encoded></item><item><title>icdiff: side-by-side diff</title><link>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</link><pubDate>Tue, 09 Jul 2024 10:47:51 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</guid><description>&lt;p>&lt;a href="https://www.jefftk.com/icdiff">&lt;code>icdiff&lt;/code>&lt;/a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:&lt;/p>
&lt;ul>
&lt;li>colored diff output&lt;/li>
&lt;li>side-by-side diff&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p><a href="https://www.jefftk.com/icdiff"><code>icdiff</code></a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:</p>
<ul>
<li>colored diff output</li>
<li>side-by-side diff</li>
</ul>
<p>The usual <code>diff</code> tool in Unix system has some basic color support<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.
Nonetheless, sometimes the output of <code>icdiff</code> is better, with little effort or
memorization.</p>
<p>Given two files (pardon my lack of creativity, but at least you know it&rsquo;s not AI
generated):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% cat first
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>% cat second
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>jesse
</span></span><span style="display:flex;"><span>pinkman
</span></span></code></pre></div><p>Plain <code>diff</code> output (terrible, IMHO):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff first second
</span></span><span style="display:flex;"><span>1,2d0
</span></span><span style="display:flex;"><span>&lt; gustavo
</span></span><span style="display:flex;"><span>&lt; fring
</span></span><span style="display:flex;"><span>4a3,4
</span></span><span style="display:flex;"><span>&gt; jesse
</span></span><span style="display:flex;"><span>&gt; pinkman
</span></span></code></pre></div><p>Better <code>diff</code> output:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff --color<span style="color:#f92672">=</span>auto -uN first second
</span></span><span style="display:flex;"><span>--- first	2024-07-09 10:50:01
</span></span><span style="display:flex;"><span>+++ second	2024-07-09 10:50:08
</span></span><span style="display:flex;"><span>@@ -1,4 +1,4 @@
</span></span><span style="display:flex;"><span>-gustavo
</span></span><span style="display:flex;"><span>-fring
</span></span><span style="display:flex;"><span> walter
</span></span><span style="display:flex;"><span> white
</span></span><span style="display:flex;"><span>+jesse
</span></span><span style="display:flex;"><span>+pinkman
</span></span></code></pre></div><p>&hellip;which is why I have <code>alias diff=&quot;diff --color=auto -uN&quot;</code> in my shell config /
dotfiles.</p>
<p>With <code>icdiff</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% icdiff first second
</span></span><span style="display:flex;"><span>first            second
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter           walter
</span></span><span style="display:flex;"><span>white            white
</span></span><span style="display:flex;"><span>                 jesse
</span></span><span style="display:flex;"><span>                 pinkman
</span></span></code></pre></div><p>Two observations:</p>
<ul>
<li>in this blog you cannot see the colors, therefore this example is meh</li>
<li><code>icdiff</code> will happily utilize your full terminal width, positioning the second
column quite to the right in case, thereby fully utilizing the available space</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>And there&rsquo;s also <code>colordiff</code>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Github-flavoured Markdown: Callouts</title><link>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</link><pubDate>Thu, 04 Jul 2024 10:17:08 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</guid><description>&lt;p>Since the end of the last year it&amp;rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!NOTE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Highlights information that users should take into account, even when skimming.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!TIP]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Optional information to help a user be more successful.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!IMPORTANT]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Crucial information necessary for users to succeed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!WARNING]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!CAUTION]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Negative potential consequences of an action.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the spirit of &lt;a href="https://github.com/jhuangtw/xg2xg">xg2xg&lt;/a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&amp;ldquo;caution&amp;rdquo;):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>Note: This is a note.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tip: This is a tip.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: This is a warning.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Important: This is important.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>Since the end of the last year it&rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!NOTE]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Highlights information that users should take into account, even when skimming.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!TIP]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Optional information to help a user be more successful.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!IMPORTANT]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Crucial information necessary for users to succeed.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!WARNING]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!CAUTION]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Negative potential consequences of an action.
</span></span></span></code></pre></div><p>In the spirit of <a href="https://github.com/jhuangtw/xg2xg">xg2xg</a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&ldquo;caution&rdquo;):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span>Note: This is a note.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Tip: This is a tip.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Warning: This is a warning.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Important: This is important.
</span></span></code></pre></div><p>Sources:</p>
<ul>
<li><a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/</a></li>
<li><a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925</a></li>
</ul>]]></content:encoded></item><item><title>Pipes: RSS Manipulation</title><link>https://www.perrotta.dev/2024/07/pipes-rss-manipulation/</link><pubDate>Wed, 03 Jul 2024 21:50:24 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/pipes-rss-manipulation/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes&lt;/a> is not around
anymore, however there is a modern replacement for it: &lt;a href="https://www.pipes.digital/">https://www.pipes.digital/&lt;/a>.&lt;/p></description><content:encoded><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes</a> is not around
anymore, however there is a modern replacement for it: <a href="https://www.pipes.digital/">https://www.pipes.digital/</a>.</p>
<p>It was on Hacker News recently: <a href="https://news.ycombinator.com/item?id=40841980">https://news.ycombinator.com/item?id=40841980</a></p>
<p>Here is a practical use case for it: to filter out unwanted episodes from
podcast RSS feeds.</p>
<p>I follow <a href="https://jovemnerd.com.br/podcasts/nerdcast">Jovem Nerd - Nerdcasts</a>.
They are a Brazilian podcast.</p>
<p>However, in the recent years, they added a lot of other (unrelated) podcasts
from their network to the main NerdCast feed, effectively polluting it. The
cleaner and elegant action to do would have been to publish individual RSS feeds
for each of their podcast series, and perhaps an additional one to contain all
of them, for those who would like to subscribe to everything. But that&rsquo;s not
what they do.</p>
<p>This is an effective marketing strategy for them, because the smaller podcast
series benefit from the exposure in the main feed. At the same time, this is
hostile to listeners, as we end up receiving bundling of episodes we are not
looking for.</p>
<p>Enter the new Pipes.</p>
<p>With it I can build the following pipeline:</p>
<ul>
<li>fetch the nerdcast feed: <a href="https://api.jovemnerd.com.br/feed-nerdcast/">https://api.jovemnerd.com.br/feed-nerdcast/</a></li>
<li>filter only the items that contain &ldquo;NerdCast&rdquo; in <code>item.title</code></li>
<li>publish a new feed</li>
</ul>
<p>The end result (&ldquo;NerdCast ONLY&rdquo;):</p>
<ul>
<li>Preview: <a href="https://www.pipes.digital/feedpreview/VqaEW4qJ">https://www.pipes.digital/feedpreview/VqaEW4qJ</a></li>
<li>Raw feed: <a href="https://www.pipes.digital/feed/VqaEW4qJ">https://www.pipes.digital/feed/VqaEW4qJ</a>?</li>
</ul>
<p>You are welcome.</p>
<p>Documentation: <a href="https://www.pipes.digital/docs">https://www.pipes.digital/docs</a></p>]]></content:encoded></item><item><title>Terraform: perform a global update</title><link>https://www.perrotta.dev/2024/07/terraform-perform-a-global-update/</link><pubDate>Tue, 02 Jul 2024 12:33:37 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/terraform-perform-a-global-update/</guid><description>&lt;p>Given a &lt;code>terraform/modules&lt;/code> directory tree, we would like to globally update the
minimum required terraform version in all modules.&lt;/p></description><content:encoded><![CDATA[<p>Given a <code>terraform/modules</code> directory tree, we would like to globally update the
minimum required terraform version in all modules.</p>
<ul>
<li>Option 1: Use <code>ack</code> or <code>fd</code> + <code>sed</code>.</li>
<li>Option 2: Use <a href="https://github.com/minamijoyo/tfupdate"><code>tfupdate</code></a>, which can
be installed via <code>homebrew</code> or your favorite package manager (c.f.
<a href="https://repology.org/project/tfupdate/versions">repology</a>).</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ tfupdate terraform -r terraform/modules -v <span style="color:#e6db74">&#39;~&gt; 1.6.6&#39;</span>
</span></span></code></pre></div>]]></content:encoded></item><item><title>Explain a crontab expression</title><link>https://www.perrotta.dev/2024/07/explain-a-crontab-expression/</link><pubDate>Mon, 01 Jul 2024 18:48:47 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/explain-a-crontab-expression/</guid><description>&lt;p>Given, for example, &lt;code>0 0 * * *&lt;/code>, how do you figure out when it will run?&lt;/p></description><content:encoded><![CDATA[<p>Given, for example, <code>0 0 * * *</code>, how do you figure out when it will run?</p>
<ul>
<li>Option 1: Read the docs! The <a href="https://wiki.archlinux.org/title/Cron">ArchWiki</a>
is frequently a great reference. Alternatively, use your favorite search
engine.</li>
<li>Option 2: Ask ChatGPT! A simple <code>cron: 0 0 * * *</code> prompt is enough. No need
to embezzle it with <code>explain what this does</code> or <code>what does this do?</code>.</li>
<li>Option 3: Paste it into <a href="https://crontab.guru/">https://crontab.guru/</a>.</li>
</ul>]]></content:encoded></item><item><title>Localhost domain</title><link>https://www.perrotta.dev/2024/07/localhost-domain/</link><pubDate>Mon, 01 Jul 2024 11:34:34 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/localhost-domain/</guid><description>&lt;p>If you find yourself in a situation wherein http://localhost:1313 has issues,
you can use a domain that redirects to localhost. For example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://localdev.me:1313/">http://localdev.me:1313/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://demo.localdev.me:1313/">http://demo.localdev.me:1313/&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>If you find yourself in a situation wherein http://localhost:1313 has issues,
you can use a domain that redirects to localhost. For example:</p>
<ul>
<li><a href="http://localdev.me:1313/">http://localdev.me:1313/</a></li>
<li><a href="http://demo.localdev.me:1313/">http://demo.localdev.me:1313/</a></li>
</ul>
<blockquote>
<p>When Iâ€™m doing local development, I sometimes need a domain name that routes
back to localhost. Iâ€™ve long run into cases where I need subdomains and ended
up modifying my local hosts file. Iâ€™ve used this for a variety of situations
going back for a long time. From Kubernetes ingress work to web development.</p>
</blockquote>
<blockquote>
<p><code>localdev.me</code> DNS is served through amazon. The domain name and any subdomains
point to <code>127.0.0.1</code>.</p>
</blockquote>
<blockquote>
<p>The next time you need a custom domain or subdomain for local development,
instead of hancking your hosts file you might consider localdev.me.</p>
</blockquote>
<p>Source: <a href="https://codeengineered.com/blog/2022/localdev-me/">https://codeengineered.com/blog/2022/localdev-me/</a></p>]]></content:encoded></item><item><title>Copy files from laptop to Steam Deck</title><link>https://www.perrotta.dev/2024/06/copy-files-from-laptop-to-steam-deck/</link><pubDate>Sun, 30 Jun 2024 15:05:37 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/copy-files-from-laptop-to-steam-deck/</guid><description>&lt;p>Let&amp;rsquo;s say the files you want to copy are in &lt;code>~/Downloads&lt;/code>.&lt;/p></description><content:encoded><![CDATA[<p>Let&rsquo;s say the files you want to copy are in <code>~/Downloads</code>.</p>
<p>Start a local HTTP server on your laptop:</p>
<pre tabindex="0"><code>$ cd ~/Downloads
$ python3 -m http.server
Serving HTTP on :: port 8000 (http://[::]:8000/) ...
</code></pre><p>Find the IP address of your laptop within your LAN:</p>
<pre tabindex="0"><code>$ ifconfig  # macOS
$ ip addr   # linux
</code></pre><p>Now go to your Steam Deck, access <code>http://&lt;ip&gt;:8000</code> via the installed web
browser, and download your files.</p>
<p>Alternatively, run <code>wget</code> / <code>curl</code> in a terminal.</p>]]></content:encoded></item><item><title>Rename files in bulk</title><link>https://www.perrotta.dev/2024/06/rename-files-in-bulk/</link><pubDate>Wed, 19 Jun 2024 13:39:04 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/rename-files-in-bulk/</guid><description>&lt;p>Whenever the files are in the same directory, &lt;code>vidir&lt;/code> from &lt;a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils&lt;/a> is the best
interactive tool.&lt;/p>
&lt;p>If files are scattered across multiple directories, consider using the
&lt;a href="https://man.archlinux.org/man/rename.1.en">&lt;code>rename&lt;/code>&lt;/a> utility from &lt;code>util-linux&lt;/code>.&lt;/p></description><content:encoded><![CDATA[<p>Whenever the files are in the same directory, <code>vidir</code> from <a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils</a> is the best
interactive tool.</p>
<p>If files are scattered across multiple directories, consider using the
<a href="https://man.archlinux.org/man/rename.1.en"><code>rename</code></a> utility from <code>util-linux</code>.</p>
<p>A simple example to rename all <code>readme.md</code> files to <code>README.md</code> for consistency:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>rename <span style="color:#e6db74">&#39;s/readme\.md/README.md/&#39;</span> **/*
</span></span></code></pre></div><p>A more recent example (2024-07-25):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>rename <span style="color:#e6db74">&#39;s/promtail-global-testing/promtail-global/g&#39;</span> **/*
</span></span></code></pre></div><p>If there are nested directories that match the expression, you&rsquo;ll need to run
<code>rename</code> multiple times.</p>]]></content:encoded></item><item><title>Sleep forever</title><link>https://www.perrotta.dev/2024/06/sleep-forever/</link><pubDate>Sat, 15 Jun 2024 15:01:02 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/sleep-forever/</guid><description>&lt;p>The following commands will make the shell sleep indefinitely:&lt;/p></description><content:encoded><![CDATA[<p>The following commands will make the shell sleep indefinitely:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sleep inf
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sleep infinity
</span></span></code></pre></div><p>Previously I would call a command such as a <code>while true</code> loop or the <code>yes</code>
utility, but <code>sleep</code> is also handy.</p>]]></content:encoded></item></channel></rss>