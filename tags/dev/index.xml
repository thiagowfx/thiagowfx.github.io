<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet type="text/xsl" href="https://perrotta.dev//rss.xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on ¬ just serendipity 🍀</title><link>https://perrotta.dev/tags/dev/</link><description>Recent content in Dev on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Tue, 21 Oct 2025 08:15:41 +0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>GitHub: the organization has enabled or enforced SAML sso</title><link>https://perrotta.dev/2025/10/github-the-organization-has-enabled-or-enforced-saml-sso/</link><pubDate>Tue, 21 Oct 2025 08:15:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/github-the-organization-has-enabled-or-enforced-saml-sso/</guid><description>&lt;p>Error message when doing &lt;code>git push&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git push
ERROR: The &amp;#39;{corp}&amp;#39; organization has enabled or enforced SAML SSO.
To access this repository, you must use the HTTPS remote with a personal access token or SSH with an SSH key and passphrase that has been authorized for this organization.
Visit https://docs.github.com/articles/authenticating-to-a-github-organization-with-saml-single-sign-on/ for more information.

fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
&lt;/code>&lt;/pre>&lt;p>Even after authenticating by logging in, the error persists.&lt;/p>
&lt;p>The solution is to &lt;strong>restart the ssh agent&lt;/strong>.&lt;/p>
&lt;p>How to do so is out of scope of this post, because it depends on which one you
use.&lt;/p>
&lt;p>For the 1Password ssh agent, the following has worked for me:&lt;/p>
&lt;ul>
&lt;li>disable it by toggling the checkbox: Settings &amp;gt; Developer &amp;gt; SSH Agent &amp;gt; Use the SSH Agent&lt;/li>
&lt;li>kill the ssh agent (&lt;code>pkill ssh-agent&lt;/code>)&lt;/li>
&lt;li>kill open ssh multiplexing connections (e.g. with &lt;code>pkill&lt;/code>):&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>% pgrep -afl ssh
48564 ssh: /tmp/ssh-control-bda8786786c69753cc9ddd9fb7c06aaff3768a70 [mux]
50845 ssh: /tmp/ssh-control-bda8786786c69753cc9ddd9fb7c06aaff3768a70 [mux]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>quit 1Password, then reopen it&lt;/li>
&lt;li>re-enable the 1Password ssh agent&lt;/li>
&lt;li>&lt;code>git push&lt;/code> again&lt;/li>
&lt;/ul>
&lt;p>Surely there is a way to script this?&lt;/p></description></item><item><title>Instagram: unfollow non-followers</title><link>https://perrotta.dev/2025/10/instagram-unfollow-non-followers/</link><pubDate>Tue, 21 Oct 2025 00:13:11 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/instagram-unfollow-non-followers/</guid><description>&lt;p>Sometimes connections simply fade away. Life happens. Privacy prevails. Then why
don&amp;rsquo;t people remove them both ways (follower + following)? If you don&amp;rsquo;t want to
stay connected with someone any longer, it is good courtesy to do so
symmetrically. If you just unfollow someone, without removing them from your
follower list, then you tacitly demonstrate that you care to a great extent
about invisible internet karma points /shrug.&lt;/p>
&lt;p>Instagram doesn&amp;rsquo;t make it easy to find those who do not follow you back.
However, it is possible to obtain this information with a little bit of
scripting.&lt;/p>
&lt;ul>
&lt;li>Go to &lt;a href="https://www.instagram.com/download/request/">Go to Instagram → Settings → Privacy and security → Download your
information&lt;/a>.&lt;/li>
&lt;li>Choose JSON (not HTML).&lt;/li>
&lt;li>Select &amp;ldquo;Connections&amp;rdquo; only and, for the period, choose from the beginning of time&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/li>
&lt;li>Confirm the prompt.&lt;/li>
&lt;li>Instagram will email you a ZIP file. That should take a couple of minutes.&lt;/li>
&lt;li>Download the ZIP (&lt;code>instagram-{username}-YYYY-MM-DD-{id}.zip&lt;/code>) and unpack it.
Structure:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% tree connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── followers_and_following
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── blocked_profiles.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── close_friends.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── follow_requests_you&lt;span style="color:#98c379">&amp;#39;ve_received.json
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ├── followers_1.json
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ├── following.json
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ├── hide_story_from.json
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ├── pending_follow_requests.json
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ├── profiles_you&amp;#39;&lt;/span>ve_favorited.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── recent_follow_requests.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── recently_unfollowed_profiles.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── removed_suggestions.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>(Yes, one of these files has a &lt;code>'&lt;/code> in the name. It was not a typo.)&lt;/p>
&lt;p>We&amp;rsquo;re interested in &lt;code>followers_N.json&lt;/code> and &lt;code>following.json&lt;/code>.&lt;/p>
&lt;p>From this point on, vibe code and chill. A single, well-crafted prompted is
enough. For example:&lt;/p>
&lt;pre tabindex="0">&lt;code>You are a world-class software developer.

I exported all my Instagram data.

Write a python script to parse all people I follow that do not follow me back.

Output username + profile URLs in each line.
&lt;/code>&lt;/pre>&lt;p>I am a fan of this one-shot prompt structure / style&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;ul>
&lt;li>you are a superb ${FOO}&lt;/li>
&lt;li>this is some context for you&lt;/li>
&lt;li>do this for me&lt;/li>
&lt;li>output in the desired format&lt;/li>
&lt;/ul>
&lt;p>The resulting script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/usr/bin/env python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">csv&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">from&lt;/span> &lt;span style="color:#e06c75">pathlib&lt;/span> &lt;span style="color:#c678dd">import&lt;/span> &lt;span style="color:#e06c75">Path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Base path where your JSON files are&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">base&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">Path&lt;/span>(&lt;span style="color:#98c379">&amp;#34;connections/followers_and_following&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">def&lt;/span> &lt;span style="color:#61afef;font-weight:bold">extract_usernames&lt;/span>(&lt;span style="color:#e06c75">file_path&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;&amp;#34;&amp;#34;Extract Instagram usernames from a followers/following JSON file.&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">with&lt;/span> &lt;span style="color:#e5c07b">open&lt;/span>(&lt;span style="color:#e06c75">file_path&lt;/span>) &lt;span style="color:#c678dd">as&lt;/span> &lt;span style="color:#e06c75">f&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">data&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">json&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">load&lt;/span>(&lt;span style="color:#e06c75">f&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Handle both old and new formats&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e5c07b">isinstance&lt;/span>(&lt;span style="color:#e06c75">data&lt;/span>, &lt;span style="color:#e5c07b">dict&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e06c75">v&lt;/span> &lt;span style="color:#56b6c2">in&lt;/span> &lt;span style="color:#e06c75">data&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">values&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e5c07b">isinstance&lt;/span>(&lt;span style="color:#e06c75">v&lt;/span>, &lt;span style="color:#e5c07b">list&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">data&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">v&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">not&lt;/span> &lt;span style="color:#e5c07b">isinstance&lt;/span>(&lt;span style="color:#e06c75">data&lt;/span>, &lt;span style="color:#e5c07b">list&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">raise&lt;/span> &lt;span style="color:#e06c75">ValueError&lt;/span>(&lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#98c379">&amp;#34;Unexpected format in &lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#e06c75">file_path&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">usernames&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e06c75">item&lt;/span> &lt;span style="color:#56b6c2">in&lt;/span> &lt;span style="color:#e06c75">data&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">entry&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">item&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">get&lt;/span>(&lt;span style="color:#98c379">&amp;#34;string_list_data&amp;#34;&lt;/span>, [])[&lt;span style="color:#d19a66">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">username&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">entry&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">get&lt;/span>(&lt;span style="color:#98c379">&amp;#34;value&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#e06c75">entry&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">get&lt;/span>(&lt;span style="color:#98c379">&amp;#34;href&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;&amp;#34;&lt;/span>)&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">rstrip&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>)&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">split&lt;/span>(&lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span>)[&lt;span style="color:#56b6c2">-&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#e06c75">entry&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">get&lt;/span>(&lt;span style="color:#98c379">&amp;#34;username&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">username&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">usernames&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">add&lt;/span>(&lt;span style="color:#e06c75">username&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">except&lt;/span> &lt;span style="color:#e06c75">Exception&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">continue&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e06c75">usernames&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># --- Load followers (handles multiple files) ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">followers&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">set&lt;/span>()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e06c75">path&lt;/span> &lt;span style="color:#56b6c2">in&lt;/span> &lt;span style="color:#e06c75">base&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">glob&lt;/span>(&lt;span style="color:#98c379">&amp;#34;followers_*.json&amp;#34;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">followers&lt;/span> &lt;span style="color:#56b6c2">|=&lt;/span> &lt;span style="color:#e06c75">extract_usernames&lt;/span>(&lt;span style="color:#e06c75">path&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># --- Load following ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">following&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">extract_usernames&lt;/span>(&lt;span style="color:#e06c75">base&lt;/span> &lt;span style="color:#56b6c2">/&lt;/span> &lt;span style="color:#98c379">&amp;#34;following.json&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># --- Compute differences ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">not_following_back&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">sorted&lt;/span>(&lt;span style="color:#e06c75">following&lt;/span> &lt;span style="color:#56b6c2">-&lt;/span> &lt;span style="color:#e06c75">followers&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">you_dont_follow_back&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">sorted&lt;/span>(&lt;span style="color:#e06c75">followers&lt;/span> &lt;span style="color:#56b6c2">-&lt;/span> &lt;span style="color:#e06c75">following&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">mutuals&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">sorted&lt;/span>(&lt;span style="color:#e06c75">followers&lt;/span> &lt;span style="color:#56b6c2">&amp;amp;&lt;/span> &lt;span style="color:#e06c75">following&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">def&lt;/span> &lt;span style="color:#61afef;font-weight:bold">write_csv&lt;/span>(&lt;span style="color:#e06c75">filename&lt;/span>, &lt;span style="color:#e06c75">users&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">with&lt;/span> &lt;span style="color:#e5c07b">open&lt;/span>(&lt;span style="color:#e06c75">filename&lt;/span>, &lt;span style="color:#98c379">&amp;#34;w&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">newline&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">encoding&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;utf-8&amp;#34;&lt;/span>) &lt;span style="color:#c678dd">as&lt;/span> &lt;span style="color:#e06c75">f&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">writer&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">csv&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">writer&lt;/span>(&lt;span style="color:#e06c75">f&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">writer&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">writerow&lt;/span>([&lt;span style="color:#98c379">&amp;#34;username&amp;#34;&lt;/span>, &lt;span style="color:#98c379">&amp;#34;profile_url&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e06c75">user&lt;/span> &lt;span style="color:#56b6c2">in&lt;/span> &lt;span style="color:#e06c75">users&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">writer&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">writerow&lt;/span>([&lt;span style="color:#e06c75">user&lt;/span>, &lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#98c379">&amp;#34;https://www.instagram.com/&lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#e06c75">user&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">print&lt;/span>(&lt;span style="color:#98c379">f&lt;/span>&lt;span style="color:#98c379">&amp;#34;✅ Saved &lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#e5c07b">len&lt;/span>(&lt;span style="color:#e06c75">users&lt;/span>)&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379"> entries to &lt;/span>&lt;span style="color:#98c379">{&lt;/span>&lt;span style="color:#e06c75">filename&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># --- Write results ---&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">write_csv&lt;/span>(&lt;span style="color:#98c379">&amp;#34;not_following_back.csv&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">not_following_back&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">write_csv&lt;/span>(&lt;span style="color:#98c379">&amp;#34;you_dont_follow_back.csv&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">you_dont_follow_back&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">write_csv&lt;/span>(&lt;span style="color:#98c379">&amp;#34;mutuals.csv&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">mutuals&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The script was tested in a real account, and I&amp;rsquo;m pleased to state that it works
as intended.&lt;/p>
&lt;p>If you use it for the sake of unfollowing people&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup> then it&amp;rsquo;s advisable not to
automate the unfollowing process, as Instagram could potentially block you.
Instead, do it manually.&lt;/p>
&lt;p>May the reduced noise increase your serenity.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Or else it won&amp;rsquo;t work.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I am not here to claim what prompt is the best. Just keep it simple and
carry on.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>Why would you run it otherwise?&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The Apple Store</title><link>https://perrotta.dev/2025/10/the-apple-store/</link><pubDate>Sat, 18 Oct 2025 12:49:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/the-apple-store/</guid><description>&lt;p>After owning an iPhone 14 Pro for more than two and a half years, its maximum
battery capacity degraded to &lt;strong>~76%&lt;/strong>. It is not a terrible number, but the
general recommendation is to take action whenever it goes below &lt;strong>80%&lt;/strong>, which
happened a couple of months ago.&lt;/p>
&lt;p>In this state I am forced to carry a portable charger wherever I go if I want
to keep my peace of mind and eliminate &amp;ldquo;battery anxiety&amp;rdquo;.&lt;/p>
&lt;p>The natural course of action for many at this point would be to simply buy the
newest and shiniest iPhone.&lt;/p>
&lt;p>Yet, I love to fight against &lt;a href="https://en.wikipedia.org/wiki/Planned_obsolescence">planned
obsolescence&lt;/a>, and will
happily do what I can, even if it yields a bit of friction.&lt;/p>
&lt;p>One of my favorite aspects of being an iPhone user is the ability to get superb
support from Apple&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. In particular, they have a &lt;a href="https://support.apple.com/iphone/repair/battery-replacement">battery
replacement&lt;/a>
program.&lt;/p>
&lt;p>All you have to do is:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://getsupport.apple.com/?caller=sfaq&amp;amp;SG=SG003&amp;amp;category_id=SC0999&amp;amp;symptom_id=99911">schedule an appointment&lt;/a> in the Genius Bar,&lt;/li>
&lt;li>bring your iPhone there,&lt;/li>
&lt;li>and then retrieve it a couple of hours later&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> (&amp;ldquo;same day service&amp;rdquo;).&lt;/li>
&lt;/ul>
&lt;p>Is it cost effective? Hell yes. I paid about 10% of the original purchase
price, and it&amp;rsquo;s like I just got a brand new iPhone.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>But only if I am &lt;del>privileged&lt;/del> lucky enough to live in a city that has
one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In my case, 3 hours.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Backlinks</title><link>https://perrotta.dev/2025/10/backlinks/</link><pubDate>Fri, 17 Oct 2025 16:58:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/backlinks/</guid><description>&lt;p>I famously do not run any kind of analytics in this blog, neither server-side or
client-side.&lt;/p>
&lt;p>I genuinely have no idea how many people subscribe to it via RSS, and how many
&amp;ldquo;page hits&amp;rdquo; it has been accumulating over its lifetime.&lt;/p>
&lt;p>This is very clearly stated in the homepage.
I take it as a badge of honor.&lt;/p>
&lt;p>That said, I am not saying that running analytics is evil or unethical.
There are various ethical and privacy-friendly analytics tools out there.&lt;/p>
&lt;p>Without analytics, how am I able to keep myself motivated? How can I know
whether I am yelling at the clouds, screaming on to the void?&lt;/p>
&lt;p>The main trick is to write primarily for myself. Writing is a great way to
rearrange my thoughts and make them more coherent and livid.&lt;/p>
&lt;p>A second form of &amp;ldquo;not feeling lonely&amp;rdquo; in the interwebs is to talk to people (or
have people talk to you). Sometimes friends message me in chat apps. Sometimes
strangers email me&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. Sometimes a long-time ex-coworker mentions a past post of
mine helped them. It is always cool to hear from people&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. There is a gentle
&amp;ldquo;Reply via email&amp;rdquo; link below every blog post in this site.&lt;/p>
&lt;p>Last: &lt;strong>Backlinks&lt;/strong>!&lt;/p>
&lt;p>Every few months I try to remember to check who is linking back to my blog.
There are various ways to get insights about this:&lt;/p>
&lt;p>&lt;strong>Public&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://marginalia-search.com/site/perrotta.dev?view=links">Marginalia&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Private&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://search.google.com/search-console/links/drilldown?resource_id=sc-domain%3Aperrotta.dev&amp;amp;type=DOMAIN&amp;amp;target=&amp;amp;domain=">Google&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.bing.com/webmasters/backlinks?siteUrl=https://perrotta.dev/">Bing&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Observing slow organic growth, without the pressure to cross-post in social
media platforms or social link aggregators, makes life peaceful and serene.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Please do not be shy, say hello :-)&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I should write more frequently to authors of blog posts I enjoy. We&amp;rsquo;re
(slowly) getting there.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Distributing my own scripts via homebrew</title><link>https://perrotta.dev/2025/10/distributing-my-own-scripts-via-homebrew/</link><pubDate>Fri, 17 Oct 2025 16:38:40 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/distributing-my-own-scripts-via-homebrew/</guid><description>&lt;p>Thanks &lt;a href="https://justin.searls.co/posts/how-to-distribute-your-own-scripts-via-homebrew/">Justin
Searls&lt;/a>
for the idea:&lt;/p>
&lt;blockquote>
&lt;p>I use Homebrew all the time. Whenever I see a new CLI that offers an npm or uv
install path alongside a brew one, I choose brew every single time.&lt;/p>
&lt;/blockquote>
&lt;p>Me too.&lt;/p>
&lt;blockquote>
&lt;p>And yet, when it comes time to publish a CLI of my own, I usually just ship it
as a Ruby gem or an npm package, because I had (and have!) no fucking clue how
Homebrew works. I&amp;rsquo;m not enough of a neckbeard to peer behind the curtain as
soon as root directories like /usr and /opt are involved, so I never bothered
before today.&lt;/p>
&lt;/blockquote>
&lt;p>I understand how package managers work, and I&amp;rsquo;m even a package maintainer in
Alpine Linux and Arch Linux, but until now I never bothered to package my own
projects for others to consume.&lt;/p>
&lt;p>Previously I talked about my new &lt;a href="https://perrotta.dev/2025/09/pancake-potpourri-scripts/">pancake&lt;/a> repository. It consists of miscellaneous self-contained executables. As such, it is a great candidate for packaging.&lt;/p>
&lt;p>I won&amp;rsquo;t submit it to upstream homebrew because it is overly specific, but that
doesn&amp;rsquo;t prevent me from packaging it in a &lt;a href="https://docs.brew.sh/Taps">standalone
repository&lt;/a>.&lt;/p>
&lt;p>In order to do so, I simply created a &lt;code>pancake.rb&lt;/code> &lt;a href="https://github.com/thiagowfx/pancake/blob/1a58c53e3984b0a0b34b750a73dab793aff5ebe5/Formula/pancake.rb">Formula&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#e5c07b">Pancake&lt;/span> &lt;span style="color:#56b6c2">&amp;lt;&lt;/span> &lt;span style="color:#e06c75">Formula&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">desc&lt;/span> &lt;span style="color:#98c379">&amp;#34;A collection of useful shell scripts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">homepage&lt;/span> &lt;span style="color:#98c379">&amp;#34;https://github.com/thiagowfx/pancake&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">head&lt;/span> &lt;span style="color:#98c379">&amp;#34;https://github.com/thiagowfx/pancake.git&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">def&lt;/span> &lt;span style="color:#61afef;font-weight:bold">install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_china_mfa/aws_china_mfa.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;op_login_all/op_login_all.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;pritunl_login/pritunl_login.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;sd_world/sd_world.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">test&lt;/span> &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Basic test to ensure the scripts are installed and executable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To install it, first tap the repository&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew tap thiagowfx/pancake https://github.com/thiagowfx/pancake.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then install it, from &lt;code>HEAD&lt;/code> because it is not currently versioned:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install --HEAD pancake
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List all package contents:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew ls pancake
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/op_login_all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/pritunl_login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/sd_world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/sbom.spdx.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There&amp;rsquo;s no need to fiddle with &lt;code>$PATH&lt;/code>, as this is already handled by homebrew:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% which aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% ls -al /opt/homebrew/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxr-xr-x@ - thiago.perrotta &lt;span style="color:#d19a66">13&lt;/span> Oct 14:43 /opt/homebrew/bin/aws_china_mfa -&amp;gt; ../Cellar/pancake/HEAD-1a58c53/bin/aws_china_mfa*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>If this idea sticks, I intend to create a dedicated
&lt;code>thiagowfx/homebrew-pancake&lt;/code> repo, so that you can tap it with &lt;code>brew tap thiagowfx/pancake&lt;/code>, without the need of specifying the full repository URL
as per
&lt;a href="https://docs.brew.sh/Taps#repository-naming-conventions-and-assumptions">docs&lt;/a>.
For now though, the formula is hosted in the same repository as the
executables.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>MCP: model context protocol considered harmful</title><link>https://perrotta.dev/2025/10/mcp-model-context-protocol-considered-harmful/</link><pubDate>Fri, 17 Oct 2025 13:07:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/mcp-model-context-protocol-considered-harmful/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2025/10/claude-code-adding-my-first-mcp-server/">Previously&lt;/a>.&lt;/p>
&lt;p>I configured my &lt;a href="https://www.claude.com/product/claude-code">Claude Code&lt;/a>
instance at work to include exactly 3 MCP servers:&lt;/p>
&lt;ul>
&lt;li>github&lt;/li>
&lt;li>playwright (browser automation / testing)&lt;/li>
&lt;li>atlassian (JIRA, Confluence, etc)&lt;/li>
&lt;/ul>
&lt;p>Sensible, right? It&amp;rsquo;s not like I&amp;rsquo;m a heavy user of MCPs. I mostly care about:&lt;/p>
&lt;ul>
&lt;li>PR introspection / creation&lt;/li>
&lt;li>occasional unit / integration testing in the browser&lt;/li>
&lt;li>JIRA (read access)&lt;/li>
&lt;/ul>
&lt;p>I didn&amp;rsquo;t even have the opportunity to add an MCP for Docker or Kubernetes yet.&lt;/p>
&lt;p>And yet:&lt;/p>
&lt;pre tabindex="0">&lt;code>% claude
&amp;gt; /context
 ⎿
 Context Usage
 ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ claude-sonnet-4-5-20250929 · 133k/200k tokens (67%)
 ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁
 ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ System prompt: 2.5k tokens (1.2%)
 ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ ⛁ System tools: 13.8k tokens (6.9%)
 ⛁ ⛁ ⛁ ⛁ ⛀ ⛀ ⛶ ⛶ ⛶ ⛶ ⛁ MCP tools: 71.7k tokens (35.9%)
 ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛁ Custom agents: 209 tokens (0.1%)
 ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛁ Messages: 8 tokens (0.0%)
 ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛶ ⛝ ⛝ ⛝ ⛶ Free space: 67k (33.4%)
 ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ Autocompact buffer: 45.0k tokens (22.5%)
 ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝ ⛝

 MCP tools · /mcp
 └ mcp__playwright__browser_close (playwright): 573 tokens
 └ mcp__playwright__browser_resize (playwright): 622 tokens
 └ mcp__playwright__browser_console_messages (playwright): 595 tokens
 └ mcp__playwright__browser_handle_dialog (playwright): 626 tokens
 └ mcp__playwright__browser_evaluate (playwright): 671 tokens
 └ mcp__playwright__browser_file_upload (playwright): 626 tokens
 └ mcp__playwright__browser_fill_form (playwright): 776 tokens
 └ mcp__playwright__browser_install (playwright): 591 tokens
 └ mcp__playwright__browser_press_key (playwright): 620 tokens
 └ mcp__playwright__browser_type (playwright): 728 tokens
 └ mcp__playwright__browser_navigate (playwright): 598 tokens
 └ mcp__playwright__browser_navigate_back (playwright): 578 tokens
 └ mcp__playwright__browser_network_requests (playwright): 580 tokens
 └ mcp__playwright__browser_take_screenshot (playwright): 826 tokens
 └ mcp__playwright__browser_snapshot (playwright): 584 tokens
 └ mcp__playwright__browser_click (playwright): 753 tokens
 └ mcp__playwright__browser_drag (playwright): 709 tokens
 └ mcp__playwright__browser_hover (playwright): 636 tokens
 └ mcp__playwright__browser_select_option (playwright): 684 tokens
 └ mcp__playwright__browser_tabs (playwright): 652 tokens
 └ mcp__playwright__browser_wait_for (playwright): 650 tokens
 └ mcp__atlassian__atlassianUserInfo (atlassian): 583 tokens
 └ mcp__atlassian__getAccessibleAtlassianResources (atlassian): 592 tokens
 └ mcp__atlassian__getConfluenceSpaces (atlassian): 1.1k tokens
 └ mcp__atlassian__getConfluencePage (atlassian): 830 tokens
 └ mcp__atlassian__getPagesInConfluenceSpace (atlassian): 975 tokens
 └ mcp__atlassian__getConfluencePageFooterComments (atlassian): 873 tokens
 └ mcp__atlassian__getConfluencePageInlineComments (atlassian): 905 tokens
 └ mcp__atlassian__getConfluencePageDescendants (atlassian): 799 tokens
 └ mcp__atlassian__createConfluencePage (atlassian): 895 tokens
 └ mcp__atlassian__updateConfluencePage (atlassian): 911 tokens
 └ mcp__atlassian__createConfluenceFooterComment (atlassian): 834 tokens
 └ mcp__atlassian__createConfluenceInlineComment (atlassian): 1.0k tokens
 └ mcp__atlassian__searchConfluenceUsingCql (atlassian): 911 tokens
 └ mcp__atlassian__getJiraIssue (atlassian): 869 tokens
 └ mcp__atlassian__editJiraIssue (atlassian): 803 tokens
 └ mcp__atlassian__createJiraIssue (atlassian): 1.2k tokens
 └ mcp__atlassian__getTransitionsForJiraIssue (atlassian): 857 tokens
 └ mcp__atlassian__transitionJiraIssue (atlassian): 1.3k tokens
 └ mcp__atlassian__lookupJiraAccountId (atlassian): 708 tokens
 └ mcp__atlassian__searchJiraIssuesUsingJql (atlassian): 856 tokens
 └ mcp__atlassian__addCommentToJiraIssue (atlassian): 913 tokens
 └ mcp__atlassian__getJiraIssueRemoteIssueLinks (atlassian): 919 tokens
 └ mcp__atlassian__getVisibleJiraProjects (atlassian): 943 tokens
 └ mcp__atlassian__getJiraProjectIssueTypesMetadata (atlassian): 794 tokens
 └ mcp__atlassian__getJiraIssueTypeMetaWithFields (atlassian): 777 tokens
 └ mcp__atlassian__search (atlassian): 640 tokens
 └ mcp__atlassian__fetch (atlassian): 685 tokens
 └ mcp__github__add_comment_to_pending_review (github): 914 tokens
 └ mcp__github__add_issue_comment (github): 644 tokens
 └ mcp__github__add_sub_issue (github): 701 tokens
 └ mcp__github__assign_copilot_to_issue (github): 724 tokens
 └ mcp__github__create_and_submit_pull_request_review (github): 708 tokens
 └ mcp__github__create_branch (github): 638 tokens
 └ mcp__github__create_issue (github): 732 tokens
 └ mcp__github__create_or_update_file (github): 768 tokens
 └ mcp__github__create_pending_pull_request_review (github): 698 tokens
 └ mcp__github__create_pull_request (github): 719 tokens
 └ mcp__github__create_repository (github): 661 tokens
 └ mcp__github__delete_file (github): 664 tokens
 └ mcp__github__delete_pending_pull_request_review (github): 650 tokens
 └ mcp__github__fork_repository (github): 613 tokens
 └ mcp__github__get_commit (github): 728 tokens
 └ mcp__github__get_file_contents (github): 717 tokens
 └ mcp__github__get_issue (github): 627 tokens
 └ mcp__github__get_issue_comments (github): 690 tokens
 └ mcp__github__get_label (github): 616 tokens
 └ mcp__github__get_latest_release (github): 594 tokens
 └ mcp__github__get_me (github): 576 tokens
 └ mcp__github__get_release_by_tag (github): 634 tokens
 └ mcp__github__get_tag (github): 615 tokens
 └ mcp__github__get_team_members (github): 616 tokens
 └ mcp__github__get_teams (github): 589 tokens
 └ mcp__github__list_branches (github): 660 tokens
 └ mcp__github__list_commits (github): 773 tokens
 └ mcp__github__list_issue_types (github): 580 tokens
 └ mcp__github__list_issues (github): 886 tokens
 └ mcp__github__list_label (github): 637 tokens
 └ mcp__github__list_pull_requests (github): 821 tokens
 └ mcp__github__list_releases (github): 660 tokens
 └ mcp__github__list_sub_issues (github): 677 tokens
 └ mcp__github__list_tags (github): 661 tokens
 └ mcp__github__merge_pull_request (github): 695 tokens
 └ mcp__github__pull_request_read (github): 879 tokens
 └ mcp__github__push_files (github): 739 tokens
 └ mcp__github__remove_sub_issue (github): 671 tokens
 └ mcp__github__reprioritize_sub_issue (github): 768 tokens
 └ mcp__github__request_copilot_review (github): 640 tokens
 └ mcp__github__search_code (github): 777 tokens
 └ mcp__github__search_issues (github): 824 tokens
 └ mcp__github__search_pull_requests (github): 830 tokens
 └ mcp__github__search_repositories (github): 817 tokens
 └ mcp__github__search_users (github): 760 tokens
 └ mcp__github__submit_pending_pull_request_review (github): 719 tokens
 └ mcp__github__update_issue (github): 852 tokens
 └ mcp__github__update_pull_request (github): 786 tokens
 └ mcp__github__update_pull_request_branch (github): 655 tokens
&lt;/code>&lt;/pre>&lt;p>The Sonnet 4 model has a context window of 200k tokens.&lt;/p>
&lt;p>These 3 MCP servers, alone, consume about one third of them. &lt;strong>36%&lt;/strong>!&lt;/p>
&lt;p>If you account for system tools + the system prompt in the mix, practically half
of the total available context window is already gone.&lt;/p>
&lt;p>MCP tool definitions are wasteful, taking valuable &lt;del>real&lt;/del> virtual estate,
distracting the model, increasing overall costs.&lt;/p>
&lt;p>&lt;img src="https://i.imgflip.com/a9djwa.jpg" alt="south park agent context window aaaand it&amp;rsquo;s gone">&lt;/p>
&lt;p>As &lt;a href="https://simonwillison.net/2025/Oct/14/agentic-engineering/">Simon Willison&lt;/a>
already noted from &lt;a href="https://steipete.me/posts/just-talk-to-it">Peter Steinberger&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>He shares my preference for CLI utilities over MCPs:&lt;/p>
&lt;blockquote>
&lt;p>I can just refer to a cli by name. I don&amp;rsquo;t need any explanation in my agents
file. The agent will try $randomcrap on the first call, the cli will present
the help menu, context now has full info how this works and from now on we
good. I don&amp;rsquo;t have to pay a price for any tools, unlike MCPs which are a
constant cost and garbage in my context. Use GitHub&amp;rsquo;s MCP and see 23k tokens
gone. Heck, they did make it better because it was almost 50.000 tokens when
it first launched. Or use the gh cli which has basically the same feature
set, models already know how to use it, and pay zero context tax.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>To me this feels comparable to using a full-blown desktop environment in Linux
Desktop versus rolling your tiling window manager and building from scratch
an environment tailored to your own needs.&lt;/p>
&lt;p>Stay safe from the bloat out there.&lt;/p>
&lt;p>&lt;strong>Update(2025-10-18)&lt;/strong>: See also &lt;a href="https://simonwillison.net/2025/Oct/16/claude-skills/#skills-compared-to-mcp">Skills c:ompared to
MCP&lt;/a>.&lt;/p></description></item><item><title>git: reset default branch</title><link>https://perrotta.dev/2025/10/git-reset-default-branch/</link><pubDate>Thu, 16 Oct 2025 17:20:45 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/git-reset-default-branch/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given an existing repository whose default branch is
&lt;code>master&lt;/code>, make it become &amp;ldquo;fresh&amp;rdquo; (=fully reset it), as if it had just been
created.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># backup the current default branch, just in case&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch backup-old-master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push origin backup-old-master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># create an orphan branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git checkout --orphan temp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># remove everything – use one or some of the following, accordingly&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git reset --hard
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm &lt;span style="color:#56b6c2">{&lt;/span>all files&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rm &lt;span style="color:#56b6c2">{&lt;/span>all files&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># create an initial commit – c.f. https://perrotta.dev/2025/02/git-blank-commit/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git blank
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># delete the old default branch&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -D master
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># rename temp to master, pick one of the following&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git rb master &lt;span style="color:#7f848e"># this is my alias for &amp;#34;rename branch&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -m master &lt;span style="color:#7f848e"># the native way&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># override the current master&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git push --force origin master
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>pipx run → uvx</title><link>https://perrotta.dev/2025/10/pipx-run-uvx/</link><pubDate>Thu, 16 Oct 2025 15:41:58 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/pipx-run-uvx/</guid><description>&lt;p>Replaced all occurrences of &lt;code>pipx run&lt;/code> in my projects with &lt;code>uvx&lt;/code>.&lt;/p>
&lt;p>&lt;a href="https://docs.astral.sh/uv/guides/tools/">&lt;code>uvx docs&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The uvx command invokes a tool without installing it.&lt;/p>
&lt;/blockquote>
&lt;p>Perfect for one-off tool executions (&amp;ldquo;one-shots&amp;rdquo;). For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.bin/az_switch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Switch active account in Azure&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">exec&lt;/span> uvx az-account-switcher &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$@&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Alpine Linux: usr-merge</title><link>https://perrotta.dev/2025/10/alpine-linux-usr-merge/</link><pubDate>Wed, 15 Oct 2025 11:16:36 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/alpine-linux-usr-merge/</guid><description>&lt;p>&lt;a href="https://alpinelinux.org/posts/2025-10-01-usr-merge.html">Alpine Linux&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The Alpine Linux Technical Steering Committee (TSC) has decided to change the
base filesystem hierarchy. In the future, /lib, /bin, and /sbin will be
symbolic links to their /usr counterparts, and every package shall be
installed under the /usr paths. For now, /usr/bin and /usr/sbin will continue
to be independent paths, but that might change if the Filesystem Hierarchy
Standard (FHS) gets updated.&lt;/p>
&lt;/blockquote>
&lt;p>Just like Arch Linux has been doing &lt;a href="https://www.archlinux.org/news/binaries-move-to-usrbin-requiring-update-intervention/">for
ages&lt;/a>
(2013).&lt;/p>
&lt;p>Fedora also did &lt;a href="https://fedoraproject.org/wiki/Changes/Unify_bin_and_sbin">a similar
move&lt;/a> this year.&lt;/p>
&lt;p>I&amp;rsquo;ve been running Alpine Linux since 3.15 (2021), its current version is 3.22.
The migration process has been quite straightforward.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk upgrade -aU &lt;span style="color:#7f848e"># perform a full system upgrade&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas apk add merge-usr &lt;span style="color:#7f848e"># install the migration script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas merge-usr --dryrun &lt;span style="color:#7f848e"># exec the migration script in dry-run mode&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If the dry-run succeeds:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas merge-usr &lt;span style="color:#7f848e"># exec the migration script&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ doas apk del merge-usr &lt;span style="color:#7f848e"># clean up&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fin.&lt;/p></description></item><item><title>git: partially cherry-pick a commit</title><link>https://perrotta.dev/2025/10/git-partially-cherry-pick-a-commit/</link><pubDate>Wed, 15 Oct 2025 11:08:27 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/git-partially-cherry-pick-a-commit/</guid><description>&lt;p>&lt;strong>OR&lt;/strong>: &amp;ldquo;cherry-pick a cherry-pick&amp;rdquo;.&lt;/p>
&lt;p>&lt;a href="https://adamj.eu/tech/2025/09/08/git-partial-cherry-pick/">Adam Johnson&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>git cherry-pick allows you to copy a commit another branch to your current
one.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>One limitation with a straight-up git cherry-pick, as above, is that it always
copies the entire commit. If a commit contains multiple changes, but you only
want one of them, you&amp;rsquo;ll need to undo the undesired cherry-picked changes.
This can be tedious and error-prone.&lt;/p>
&lt;/blockquote>
&lt;p>The trick is to use the &lt;a href="https://git-scm.com/docs/git-cherry-pick">&lt;code>-n&lt;/code>
(&lt;code>--no-commit&lt;/code>)&lt;/a> argument to prevent changes from
being committed right away.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git cherry-pick -n &lt;span style="color:#56b6c2">{&lt;/span>branch or SHA&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This happens to be the default in
&lt;a href="https://mercurial-scm.org/help/commands/graft">mercurial&lt;/a> with &lt;code>hg graft&lt;/code>.&lt;/p>
&lt;p>As such, another possibility is to create an alias:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-gitconfig" data-lang="gitconfig">[alias]
 graft = cherry-pick -n
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git graft &lt;span style="color:#56b6c2">{&lt;/span>branch or SHA&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>git: list branches by recent activity</title><link>https://perrotta.dev/2025/10/git-list-branches-by-recent-activity/</link><pubDate>Wed, 15 Oct 2025 10:59:58 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/git-list-branches-by-recent-activity/</guid><description>&lt;p>Tweak &lt;code>~/.gitconfig&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-gitconfig" data-lang="gitconfig">[alias]
 xl = branch -vv

[branch]
	sort = -committerdate
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Result&lt;/strong>: &lt;code>git xl&lt;/code> will print your repository branches sorted by the most
recent ones in terms of activity, instead of the alphabetical default.&lt;/p>
&lt;p>I have this setting for a long time, and IMHO it&amp;rsquo;s a better default.&lt;/p>
&lt;p>&lt;a href="https://tekin.co.uk/2021/11/listing-most-recent-git-branches">This post&lt;/a> by
Tekin Süleyman prompted me to share it.&lt;/p></description></item><item><title>git: commit with the wrong email</title><link>https://perrotta.dev/2025/10/git-commit-with-the-wrong-email/</link><pubDate>Tue, 14 Oct 2025 13:50:36 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/git-commit-with-the-wrong-email/</guid><description>&lt;p>You are sending a PR upstream.&lt;/p>
&lt;p>You accidentally commit it with the wrong email.&lt;/p>
&lt;p>First, you prevent this mistake from happening again by updating your
&lt;code>~/.gitconfig&lt;/code>.&lt;/p>
&lt;p>And now you need to fix the most recent commit.&lt;/p>
&lt;p>You can easily do so with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git commit --amend --reset-author --no-edit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, with &lt;a href="https://github.com/thiagowfx/.dotfiles">my aliases&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git uncommit &lt;span style="color:#56b6c2">&amp;amp;&amp;amp;&lt;/span> git recommit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Random word</title><link>https://perrotta.dev/2025/10/random-word/</link><pubDate>Mon, 13 Oct 2025 11:29:08 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/random-word/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: get a random word via shell scripting. Assume a typical
Unix / POSIX environment is available.&lt;/p>
&lt;p>There are various ways to do so.&lt;/p>
&lt;h2 id="dictionary-shuffle">Dictionary shuffle&lt;/h2>
&lt;p>Pick a random word from the system dictionary:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% shuf -n &lt;span style="color:#d19a66">1&lt;/span> /usr/share/dict/words
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>acrochordon
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-n&lt;/code> controls how many words to pick.&lt;/p>
&lt;p>Or use &lt;code>sort -R&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% sort -R /usr/share/dict/words | head -n &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>transcurrently
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>-R&lt;/code> is &lt;code>--random-sort&lt;/code>. I am amazed that this option even exists.&lt;/p>
&lt;h2 id="gibberish">Gibberish&lt;/h2>
&lt;p>Use &lt;code>/dev/urandom&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% tr -dc &lt;span style="color:#98c379">&amp;#39;a-z&amp;#39;&lt;/span> &amp;lt; /dev/urandom | head -c &lt;span style="color:#d19a66">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsdckwbs%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use OpenSSL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% openssl rand -base64 &lt;span style="color:#d19a66">12&lt;/span> | tr -dc &lt;span style="color:#98c379">&amp;#39;a-z&amp;#39;&lt;/span> | head -c &lt;span style="color:#d19a66">8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>hfwkwqmt%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Gmail: send email from plus address</title><link>https://perrotta.dev/2025/10/gmail-send-email-from-plus-address/</link><pubDate>Sun, 12 Oct 2025 19:09:37 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/gmail-send-email-from-plus-address/</guid><description>&lt;p>It is well-known that, given &lt;code>larry@gmail.com&lt;/code>, you can use the Gmail &amp;ldquo;plus
addressing&amp;rdquo; (+) feature with &lt;code>larry+{alias}@gmail.com&lt;/code> to receive emails in the
former.&lt;/p>
&lt;p>But what if you need to &lt;em>send&lt;/em> emails from &lt;code>larry+{alias}@gmail.com&lt;/code>?&lt;/p>
&lt;p>This turns out to be &lt;a href="https://webapps.stackexchange.com/questions/3598/is-there-any-way-to-send-an-email-from-a-gmail-plus-address">possible&lt;/a>.&lt;/p>
&lt;p>Add your plus email the same way you&amp;rsquo;d add any other email to &lt;a href="https://support.google.com/mail/answer/22370">send
from&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Use case&lt;/strong>: customer support. Some systems will allow replies from &lt;em>only&lt;/em> the
email address originally used to file a support ticket.&lt;/p></description></item><item><title>git: merge two repositories</title><link>https://perrotta.dev/2025/10/git-merge-two-repositories/</link><pubDate>Sun, 12 Oct 2025 15:52:06 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/git-merge-two-repositories/</guid><description>&lt;p>Daniel Roy Greenfeld, &lt;a href="https://daniel.feldroy.com/posts/til-2025-09-merging-two-git-projects">TIL: Merging two git projects&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Of course this task can be done with copy/paste. The challenge there is the
loss of git history. All the history of struggles and tribulations are gone.
More important is the attribution - unless any and all contributors are made
co-authors. But then the volume of attribution isn&amp;rsquo;t accurate, some one who
made one tiny change gets as much credit as the leading contributor.&lt;/p>
&lt;/blockquote>
&lt;p>Adapted to my own words: we will merge &amp;ldquo;atreides&amp;rdquo; into &amp;ldquo;harkonnen&amp;rdquo;.&lt;/p>
&lt;ul>
&lt;li>&lt;code>cd&lt;/code> to &lt;code>harkonnen&lt;/code>&lt;/li>
&lt;li>&lt;code>git remote add atreides {atreides git repo URL}&lt;/code>&lt;/li>
&lt;li>&lt;code>git fetch atreides&lt;/code> (or &lt;code>git fetch --all&lt;/code>)&lt;/li>
&lt;li>&lt;code>git merge atreides/master --allow-unrelated-histories&lt;/code> # or main, if applicable&lt;/li>
&lt;/ul>
&lt;p>Fin.&lt;/p></description></item><item><title>My favorite C compiler flags during development</title><link>https://perrotta.dev/2025/10/my-favorite-c-compiler-flags-during-development/</link><pubDate>Sun, 12 Oct 2025 15:34:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/my-favorite-c-compiler-flags-during-development/</guid><description>&lt;p>Chris Wellons, &lt;a href="https://nullprogram.com/blog/2023/04/29/">My favorite C compiler flags during development&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The major compilers have an enormous number of knobs. Most are highly
specialized, but others are generally useful even if uncommon. For warnings,
the venerable &lt;code>-Wall -Wextra&lt;/code> is a good start, but circumstances
improve by tweaking this warning set. This article covers high-hitting
development-time options in GCC, Clang, and MSVC that ought to get more
consideration.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>&lt;strong>Summary&lt;/strong>:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cc -g3 -Wall -Wextra -Wconversion -Wdouble-promotion
 -Wno-unused-parameter -Wno-unused-function -Wno-sign-conversion
 -fsanitize=undefined -fsanitize-trap ...
&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;p>Such a great post!&lt;/p>
&lt;p>Today I learned:&lt;/p>
&lt;blockquote>
&lt;p>Another common mistake in tutorials is using plain old -g instead of -g3
(read: &amp;ldquo;debug level 3&amp;rdquo;). That&amp;rsquo;s like using -O instead of -O3. It adds a lot
more debug information to the output, particularly enums and macros. The extra
information is useful and you&amp;rsquo;re better off having it!&lt;/p>
&lt;p>All the major build systems — CMake, Autotools, Meson, etc. — get this wrong
in their standard debug configurations. Producing a fully-featured debug build
from these systems is a constant battle for me. Often it&amp;rsquo;s easier to ignore
the build system entirely and cc -g3 **/*.c (plus sanitizers, etc.).&lt;/p>
&lt;/blockquote></description></item><item><title>IMEI</title><link>https://perrotta.dev/2025/10/imei/</link><pubDate>Sun, 12 Oct 2025 14:25:44 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/imei/</guid><description>&lt;p>To display the &lt;a href="https://en.wikipedia.org/wiki/International_Mobile_Equipment_Identity">IMEI&lt;/a> of your iphone, open the Phone / Dialer app and type in
&lt;code>*#06#&lt;/code>.&lt;/p>
&lt;p>The IMEI is an unique numeric identifier for &lt;em>devices&lt;/em>:&lt;/p>
&lt;blockquote>
&lt;p>GSM networks use the IMEI number to identify valid devices, and can stop a
stolen phone from accessing the network. For example, if a mobile phone is
stolen, the owner can have their network provider use the IMEI number to
blocklist the phone. This renders the phone useless on that network and
sometimes other networks, even if the thief changes the phone&amp;rsquo;s SIM card.&lt;/p>
&lt;/blockquote>
&lt;p>It is a good practice to have your IMEI stored somewhere secure, in case you
ever need to report to your carrier the phone (w)as stolen.&lt;/p>
&lt;p>If you see an EID, your device supports eSIM.&lt;/p>
&lt;p>What I didn&amp;rsquo;t know is that it&amp;rsquo;s
&lt;a href="https://en.wikipedia.org/wiki/Unstructured_Supplementary_Service_Data#Code_table">possible&lt;/a>
to change your SIM card PIN with the phone app as well:
&lt;code>**04*{old PIN}*{new PIN}*{new PIN}#&lt;/code>.&lt;/p></description></item><item><title>zoxide: fine-tuning</title><link>https://perrotta.dev/2025/10/zoxide-fine-tuning/</link><pubDate>Fri, 10 Oct 2025 15:08:11 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/zoxide-fine-tuning/</guid><description>&lt;p>&lt;a href="https://github.com/ajeetdsouza/zoxide">zoxide&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>It remembers which directories you use most frequently, so you can &amp;ldquo;jump&amp;rdquo; to them in just a few keystrokes.&lt;/p>
&lt;/blockquote>
&lt;p>For example:&lt;/p>
&lt;ul>
&lt;li>&lt;code>z perrotta.dev&lt;/code> jumps to &lt;code>~/Workspace/perrotta.dev/&lt;/code>&lt;/li>
&lt;li>&lt;code>z dotfiles&lt;/code> jumps to &lt;code>~/.dotfiles&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>I had one issue. Given these two directories:&lt;/p>
&lt;ul>
&lt;li>&lt;code>~/corp/gitops&lt;/code>&lt;/li>
&lt;li>&lt;code>~/corp/gitops-china&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>z gitops&lt;/code> was selecting the &lt;code>gitops-china&lt;/code> directory, which I barely use.&lt;/p>
&lt;p>In order to remove it from the frequently accessed directories list, do:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>zoxide remove ~/corp/gitops-china
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now &lt;code>z gitops&lt;/code> jumps to &lt;code>~/corp/gitops&lt;/code>, as I originally intend most of the
time.&lt;/p></description></item><item><title>Comma scripts</title><link>https://perrotta.dev/2025/10/comma-scripts/</link><pubDate>Fri, 10 Oct 2025 01:14:15 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/comma-scripts/</guid><description>&lt;p>Ricardo Ander-Egg
&lt;a href="https://ricardoanderegg.com/posts/executable-bin-scripts-instead-of-shell-aliases/">suggests&lt;/a>
to use executable scripts instead of shell aliases:&lt;/p>
&lt;blockquote>
&lt;p>I stopped using shell aliases and moved everything into executable scripts.&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been slowly doing the same. From his post, adapted:&lt;/p>
&lt;p>&lt;strong>Main Benefits&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>No need to source your shell rc after adding new scripts
&lt;ul>
&lt;li>Use immediately without reloading your shell&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>No need to edit your shell rc, just drop executable files in &lt;code>$HOME/.bin&lt;/code> (already in my &lt;code>$PATH&lt;/code>)
&lt;ul>
&lt;li>Faster iteration (edit script, re-run command, repeat)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Can be used out-of-the-box with &lt;code>fd&lt;/code> / &lt;code>find&lt;/code> / &lt;code>xargs&lt;/code> and friends&lt;/li>
&lt;/ul>
&lt;p>Another recommendation:&lt;/p>
&lt;p>Brandon Rhodes: &lt;a href="https://rhodesmill.org/brandon/2009/commands-with-comma/">Start all of your commands with a comma&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A quick experiment revealed in a flash that the comma was exactly the
character that I had been looking for! Every tool and shell that lay in arm&amp;rsquo;s
reach treated the comma as a perfectly normal and unobjectionable character in
a filename. By simply prefixing each of my custom commands with a comma, they
became completely distinct from system commands and thus free from any chance
of a collision.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>And, best of all, thanks to the magic of tab-completion, it became very easy
to browse my entire collection of commands. When trying to remember which of
my commands are available in my ~/bin/ directory on a given system, or when
simply trying to remember what some of my commands are called, I simply type a
comma followed by tab and my list of commands appears:&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>I heartily recommend this technique to anyone with their own ~/bin/ directory
who wants their command names kept clean, tidy, and completely orthogonal to
any commands that the future might bring to your system.&lt;/p>
&lt;/blockquote>
&lt;p>I used to do this with prefixes (&lt;code>t-&lt;/code> because of my first name initial, and then
&lt;a href="https://ianthehenry.com/posts/sd-my-script-directory/">&lt;code>sd-&lt;/code>&lt;/a>), but a
non-alphabetic character is more compelling.&lt;/p></description></item><item><title>Anki: find all suspended flashcards</title><link>https://perrotta.dev/2025/10/anki-find-all-suspended-flashcards/</link><pubDate>Wed, 08 Oct 2025 19:14:48 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/anki-find-all-suspended-flashcards/</guid><description>&lt;p>The following queries are useful to find flashcards (notes or cards) in
&lt;a href="https://apps.ankiweb.net/">Anki&lt;/a> that you&amp;rsquo;re struggling with.&lt;/p>
&lt;ul>
&lt;li>&lt;code>is:suspended&lt;/code>&lt;/li>
&lt;li>&lt;code>tag:leech&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The action item for each should be one of the following:&lt;/p>
&lt;ul>
&lt;li>do nothing for now&lt;/li>
&lt;li>delete the note / card if it&amp;rsquo;s no longer relevant e.g. perhaps it is barely
used&lt;/li>
&lt;li>enhance or rewrite the note / card for better retention and then unsuspend it&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s a slow process.&lt;/p></description></item><item><title>vim: reflow current paragraph</title><link>https://perrotta.dev/2025/10/vim-reflow-current-paragraph/</link><pubDate>Wed, 08 Oct 2025 18:03:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/vim-reflow-current-paragraph/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a paragraph (&lt;code>lorem_ipsum.txt&lt;/code>):&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Reflow it in such a way each line does not exceed a certain number of
characters, say, in the 72-80 range. The number is not important, so
long as it is applied consistently and uniformly within a single file.&lt;/p>
&lt;p>In the terminal we can achieve that with &lt;a href="https://man.archlinux.org/man/fmt.1">&lt;code>fmt(1)&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat lorem_ipsum.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>thiago.perrotta@thiagoperrotta-MacBook-Pro /tmp/thiago.perrotta-2025-10-08-eOaLRg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% fmt lorem_ipsum.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">cupidatat non proident, sunt in culpa qui officia deserunt mollit anim
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">id est laborum.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can also do it in-place (&lt;a href="https://man.archlinux.org/man/sponge.1">sponge(1)&lt;/a> from &lt;a href="https://perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fmt lorem_ipsum.txt | sponge lorem_ipsum.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% cat lorem_ipsum.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">commodo consequat. Duis aute irure dolor in reprehenderit in voluptate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">cupidatat non proident, sunt in culpa qui officia deserunt mollit anim
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">id est laborum.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Can we do it within &lt;code>vim&lt;/code>? Yes, with the following mapping:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">nnoremap&lt;/span> &amp;lt;&lt;span style="color:#e06c75">silent&lt;/span>&amp;gt; &lt;span style="color:#e06c75">W&lt;/span> &amp;lt;&lt;span style="color:#e06c75">Esc&lt;/span>&amp;gt;!&lt;span style="color:#e06c75">ipfmt&lt;/span>&amp;lt;&lt;span style="color:#e06c75">Enter&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Translation:&lt;/p>
&lt;ul>
&lt;li>&lt;code>&amp;lt;silent&amp;gt;&lt;/code>: does not echo the mapping in the vim command line&lt;/li>
&lt;li>&lt;code>&amp;lt;Esc&amp;gt;&lt;/code>: switch to normal mode&lt;/li>
&lt;li>&lt;code>!&lt;/code>: &lt;code>!{motion}{filter} Filter {motion} text lines through the external program {filter}.&lt;/code> (via &lt;code>:h !&lt;/code>).
&lt;ul>
&lt;li>Not to confound this with &lt;code>:!&lt;/code>: &lt;code>:!{cmd} Execute {cmd} with the shell. See also the 'shell' and 'shelltype' option. For the filter command, see |:range!|.&lt;/code> (via &lt;code>:h :!&lt;/code>)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>ip&lt;/code>: &amp;ldquo;inner paragraph&amp;rdquo; motion&lt;/li>
&lt;li>&lt;code>fmt&lt;/code>: the filter command&lt;/li>
&lt;li>&lt;code>&amp;lt;Enter&amp;gt;&lt;/code>: execute the command&lt;/li>
&lt;/ul>
&lt;p>Alternatively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">nnoremap&lt;/span> &amp;lt;&lt;span style="color:#e06c75">silent&lt;/span>&amp;gt; &lt;span style="color:#e06c75">Q&lt;/span> &lt;span style="color:#e06c75">gwip&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Wherein &lt;code>:h gw&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>gw{motion}	Format the lines that {motion} moves over. Similar to
			|gq| but puts the cursor back at the same position in
			the text. However, &amp;#39;formatprg&amp;#39; and &amp;#39;formatexpr&amp;#39; are
			not used.
&lt;/code>&lt;/pre>&lt;p>One difference is that &lt;code>gw&lt;/code> accounts for comment characters, whereas &lt;code>fmt&lt;/code> does
not. Example, given a &lt;code>.py&lt;/code> (python) file:&lt;/p>
&lt;pre tabindex="0">&lt;code># &amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;code>gw&lt;/code> does:&lt;/p>
&lt;pre tabindex="0">&lt;code># &amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod
# tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,
# quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo
# consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse
# cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non
# proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Whereas &lt;code>fmt&lt;/code> does:&lt;/p>
&lt;pre tabindex="0">&lt;code># &amp;#34;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do
eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad
minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip
ex ea commodo consequat. Duis aute irure dolor in reprehenderit in
voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur
sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt
mollit anim id est laborum.&amp;#34;
&lt;/code>&lt;/pre></description></item><item><title>Claude Code: adding my first MCP server</title><link>https://perrotta.dev/2025/10/claude-code-adding-my-first-mcp-server/</link><pubDate>Wed, 08 Oct 2025 00:31:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-adding-my-first-mcp-server/</guid><description>&lt;p>Lovely readers, I promise this is not turning into an AI blog&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. I am merely
documenting my baby steps.&lt;/p>
&lt;p>I use JIRA all the time. It&amp;rsquo;s our &lt;del>bug&lt;/del>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> issue tracker of choice.&lt;/p>
&lt;p>And, now that I am slowly incorporating Claude Code in my daily workflow for git
commits and pull requests, it only feels natural to connect JIRA to it, even if
only for the sake of retrieving information from existing tickets and/or adding
context to PRs.&lt;/p>
&lt;p>So here we go.&lt;/p>
&lt;p>&lt;a href="https://docs.claude.com/en/docs/claude-code/mcp">From the Anthropic documentation&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Atlassian&lt;/strong>&lt;/p>
&lt;p>Manage your Jira tickets and Confluence docs&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> &amp;lt;gitops project&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% claude mcp add --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added SSE MCP server atlassian with URL: https://mcp.atlassian.com/v1/sse to &lt;span style="color:#e5c07b">local&lt;/span> config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File modified: /Users/thiago.perrotta/.claude.json &lt;span style="color:#56b6c2">[&lt;/span>project: /Users/thiago.perrotta/gitops&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.claude.com/en/docs/claude-code/mcp#option-2%3A-add-a-remote-sse-server">SSE&lt;/a> stands for &amp;ldquo;Server-Side Events&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>SSE (Server-Sent Events) servers provide real-time streaming connections. Many
cloud services use this for live updates.&lt;/p>
&lt;/blockquote>
&lt;p>That command is idempotent:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp add --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MCP server atlassian already exists in &lt;span style="color:#e5c07b">local&lt;/span> config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What if I want to have it available for all projects? Use &lt;code>--scope user&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp add --scope user --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added SSE MCP server atlassian with URL: https://mcp.atlassian.com/v1/sse to user config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File modified: /Users/thiago.perrotta/.claude.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The modification to &lt;code>~/.claude.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [...]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;mcpServers&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;atlassian&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sse&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;https://mcp.atlassian.com/v1/sse&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So far so good. However no auth config was supplied yet.&lt;/p>
&lt;pre tabindex="0">&lt;code>% claude
&amp;gt; /mcp
Manage MCP servers
❯ 1. atlassian △ disconnected · Enter to login
&lt;/code>&lt;/pre>&lt;p>After pressing Enter and authenticating against our JIRA instance in a web
browser:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking MCP server health...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>atlassian: https://mcp.atlassian.com/v1/sse &lt;span style="color:#56b6c2">(&lt;/span>SSE&lt;span style="color:#56b6c2">)&lt;/span> - ✓ Connected
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% claude mcp get atlassian
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>atlassian:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Scope: User config &lt;span style="color:#56b6c2">(&lt;/span>available in all your projects&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Status: ✓ Connected
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> URL: https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To remove this server, run: claude mcp remove &lt;span style="color:#98c379">&amp;#34;atlassian&amp;#34;&lt;/span> -s user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>&amp;gt; /mcp
Atlassian MCP Server

Status: ✔ connected ✔ authenticated
URL: https://mcp.atlassian.com/v1/sse
Config location: /Users/thiago.perrotta/.claude.json [project: /Users/thiago.perrotta/gitops]
Capabilities: tools
Tools: 27 tools

❯ 1. View tools
 2. Re-authenticate
 3. Clear authentication
 4. Reconnect
 5. Disable
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>Tools for atlassian (27 tools)

❯ 1. Get current user information read-only
 2. List accessible resources read-only
 3. List Confluence spaces read-only
 4. Retrieve Confluence page read-only
↓ 5. List space pages read-only
&lt;/code>&lt;/pre>&lt;p>Let&amp;rsquo;s say I want to call the &amp;ldquo;Get current user information&amp;rdquo; tool.&lt;/p>
&lt;pre tabindex="0">&lt;code>Get current user information (atlassian) [read-only]

Tool name: atlassianUserInfo
Full name: mcp__atlassian__atlassianUserInfo

Description:
Get current user info from Atlassian
&lt;/code>&lt;/pre>&lt;p>Just describe it in natural language:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;current user in JIRA&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>Claude&lt;/strong>:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;gt; current user in JIRA
 ⎿ {
 &amp;#34;account_id&amp;#34;: &amp;#34;{redacted}&amp;#34;,
 &amp;#34;email&amp;#34;: &amp;#34;{redacted}&amp;#34;,
 … +22 lines (ctrl+o to expand)

⏺ Thiago Perrotta
 - Email: {redacted}
 - Account ID: {redacted}
 - Role: {redacted}
 - Department: {redacted}
 - Location: {redacted}
&lt;/code>&lt;/pre>&lt;p>Then I tried basic CRUD operations in natural language:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;create an issue&amp;rdquo; - create: followed by further prompts with issue details ✅&lt;/li>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;transition the issue to won&amp;rsquo;t do&amp;rdquo; – update / delete ✅&lt;/li>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;find an issue related to foo deployment in cluster bar&amp;rdquo;) – read ✅&lt;/li>
&lt;/ul>
&lt;p>Everything worked successfully.&lt;/p>
&lt;p>I also tried:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong> (plan mode on, thinking enabled): Propose a way to handle https://{corp}.atlassian.net/browse/INFRA-12528.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>⏺ I&amp;rsquo;ll fetch the details of the Jira issue to understand what needs to be handled.&lt;/p>
&lt;/blockquote>
&lt;p>I feel this will be quite useful from now on!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>For now?!?&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I blame &lt;em>Google&lt;/em>, the corporation, for getting me accustomed to saying
&amp;ldquo;file a bug&amp;rdquo; and &amp;ldquo;bug tracker&amp;rdquo;. Not every ticket is a bug. Atlassian is
trying to shovel the &amp;ldquo;work item&amp;rdquo; term onto us, but &amp;ldquo;issue&amp;rdquo; is the
appropriate concept.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Post-its in the laptop</title><link>https://perrotta.dev/2025/10/post-its-in-the-laptop/</link><pubDate>Tue, 07 Oct 2025 22:26:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/post-its-in-the-laptop/</guid><description>&lt;p>Poor man&amp;rsquo;s TODO list / task manager: sticking post-it notes in&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> the laptop,
next to the touchpad / trackpad. It is practically impossible to ignore them!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;em>On&lt;/em> the surface of the keyboard, not outside its lid case. &amp;ldquo;In&amp;rdquo; feels
appropriate because it refers to the &lt;em>inside&lt;/em> of the laptop. And now the
footnote is longer than the post!&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>macOS homebrew: downgrade a package</title><link>https://perrotta.dev/2025/10/macos-homebrew-downgrade-a-package/</link><pubDate>Tue, 07 Oct 2025 10:47:02 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/macos-homebrew-downgrade-a-package/</guid><description>&lt;p>Yesterday we could no longer ssh to deploy servers (via a ruby-based wrapper we
use).&lt;/p>
&lt;p>This was bad™.&lt;/p>
&lt;p>The error message looked like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>[...]
Seahorse::Client::NetworkingError: SSL_connect returned=1 errno=0 peeraddr={redacted}:443 state=error: certificate verify failed (unable to get certificate CRL)
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/net/protocol.rb:46:in `connect_nonblock&amp;#39;
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/net/protocol.rb:46:in `ssl_socket_connect&amp;#39;
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/net/http.rb:1674:in `connect&amp;#39;
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/net/http.rb:1580:in `do_start&amp;#39;
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/net/http.rb:1575:in `start&amp;#39;
/Users/thiago.perrotta/.rbenv/versions/3.2.4/lib/ruby/3.2.0/delegate.rb:87:in `method_missing&amp;#39;
[...]
&lt;/code>&lt;/pre>&lt;p>It was an error in OpenSSL.&lt;/p>
&lt;p>There had been a new release a few days earlier,
&lt;a href="https://github.com/openssl/openssl/releases/tag/openssl-3.6.0">3.6.0&lt;/a>.&lt;/p>
&lt;p>Suspicious!&lt;/p>
&lt;p>In order to restore our ability to ssh to deploy servers as quickly as possible,
we decided to downgrade to 3.5.&lt;/p>
&lt;p>This proved to be a bit more painful than it should have been in 2025:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew install openssl@3.5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew pin openssl@3.5 &lt;span style="color:#7f848e"># prevent upgrades&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>brew uninstall --ignore-dependencies openssl@3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>--ignore-dependencies&lt;/code> is needed because there is a ton of packages that depend
on OpenSSL.&lt;/p>
&lt;p>This is not enough.&lt;/p>
&lt;p>Using our ruby-based tool to ssh into servers would yield another error. The
tool was still trying to use OpenSSL 3.6.0, as the library paths were
hard-coded. Ugh.&lt;/p>
&lt;p>New attempt:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>rbenv install 3.3.9 &lt;span style="color:#7f848e"># compile / install a new version of ruby -&amp;gt; it will link against OpenSSL 3.5&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">$EDITOR&lt;/span> &amp;lt;mulch&amp;gt;/.ruby-version &lt;span style="color:#7f848e"># upgrade to the version above&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Installing a new version of ruby ends up compiling / linking libraries against
OpenSSL 3.5. Now we regained the ability to ssh.&lt;/p>
&lt;p>Now let&amp;rsquo;s investigate the root cause.&lt;/p>
&lt;p>There was no bug report in homebrew.&lt;/p>
&lt;p>Next: OpenSSL. &lt;a href="https://github.com/openssl/openssl/issues/28758">#28758&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>OpenSSL 3.6.0 results in error: certificate verify failed (unable to get certificate CRL) #28758&lt;/p>
&lt;/blockquote>
&lt;p>Yes! That&amp;rsquo;s the one.&lt;/p>
&lt;p>From there, someone linked to
&lt;a href="https://github.com/ruby/openssl/issues/949">&lt;code>ruby/openssl&lt;/code>&lt;/a> (a core gem), which
was precisely the issue we were having.&lt;/p>
&lt;p>There was another workaround in that thread, but we didn&amp;rsquo;t need it.&lt;/p>
&lt;p>Eventually a fix was
&lt;a href="https://github.com/ruby/openssl/issues/949#issuecomment-3370358680">released&lt;/a>.&lt;/p>
&lt;p>I thought to run &lt;code>gem update openssl&lt;/code> (or similar) to incorporate it, but it
turned out that &lt;code>openssl&lt;/code> is a system gem, therefore it was not listed in our
&lt;code>Gemfile.lock&lt;/code>.&lt;/p>
&lt;p>A workaround: explicitly add it to our &lt;code>gemspec&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">add_runtime_dependency&lt;/span> &lt;span style="color:#98c379">&amp;#39;openssl&amp;#39;&lt;/span>, &lt;span style="color:#98c379">&amp;#39;~&amp;gt; 3.2.2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then run &lt;code>bundle install&lt;/code>.&lt;/p>
&lt;p>Now everything works. We can undo the original workaround:&lt;/p>
&lt;pre tabindex="0">&lt;code>brew unpin openssl@3.5
brew uninstall openssl@3.5
brew install openssl@3
&lt;/code>&lt;/pre></description></item><item><title>claude code: custom commands</title><link>https://perrotta.dev/2025/10/claude-code-custom-commands/</link><pubDate>Mon, 06 Oct 2025 17:31:30 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-custom-commands/</guid><description>&lt;p>&lt;a href="https://www.claude.com/product/claude-code">Claude Code&lt;/a> supports &lt;a href="https://docs.claude.com/en/docs/claude-code/slash-commands#custom-slash-commands">custom commands&lt;/a>.&lt;/p>
&lt;p>The precise term is &amp;ldquo;custom slash commands&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Custom slash commands allow you to define frequently-used prompts as Markdown
files that Claude Code can execute. Commands are organized by scope
(project-specific or personal) and support namespacing through directory
structures.&lt;/p>
&lt;/blockquote>
&lt;p>I created my first custom slash command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.claude/commands/send-pr.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You are a world-class software developer who can write concise and descriptive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pull requests &lt;span style="color:#56b6c2">(&lt;/span>PRs&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sources of inspiration include:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Daniel Stenberg &lt;span style="color:#56b6c2">(&lt;/span>curl&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Junio Hamano &lt;span style="color:#56b6c2">(&lt;/span>git&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Linus Torvalds &lt;span style="color:#56b6c2">(&lt;/span>linux&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Send out a PR&lt;span style="color:#56b6c2">[&lt;/span>1&lt;span style="color:#56b6c2">]&lt;/span> corresponding to the current branch.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>If there&lt;span style="color:#98c379">&amp;#39;s a .github/PULL_REQUEST_TEMPLATE.md file, use it as template.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">If the current branch is &amp;#39;&lt;/span>main&lt;span style="color:#98c379">&amp;#39; or &amp;#39;&lt;/span>master&lt;span style="color:#98c379">&amp;#39;, create a local branch first.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">The branch name should be prefixed by my github username[2] and a slash.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">[1]: &amp;#39;&lt;/span>gh pr create&lt;span style="color:#98c379">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">[2]: &amp;#39;&lt;/span>gh api user --jq .login&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be &amp;ldquo;executed&amp;rdquo; with &lt;code>/send-pr&lt;/code>.&lt;/p>
&lt;p>&amp;ldquo;Execution&amp;rdquo; is merely &amp;ldquo;sending the prompt&amp;rdquo;.&lt;/p>
&lt;p>It&amp;rsquo;s akin to a snippet expander. Arguably one could do the same by setting a
&lt;code>:send-pr&lt;/code> snippet on e.g. &lt;a href="https://espanso.org/">Espanso&lt;/a>.&lt;/p>
&lt;p>Perhaps it is even better, as it would work with all CLI agents – not only
Claude Code. Well, we keep on experimenting.&lt;/p>
&lt;p>Reusable custom slash commands will be shared in my &lt;a href="https://github.com/thiagowfx/.dotfiles/tree/master/claude/.claude/commands">.dotfiles&lt;/a>.&lt;/p></description></item><item><title>New script: AWS China MFA login</title><link>https://perrotta.dev/2025/10/new-script-aws-china-mfa-login/</link><pubDate>Sat, 04 Oct 2025 11:34:58 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/new-script-aws-china-mfa-login/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/">Previously&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://github.com/thiagowfx/pancake/tree/5c4122f7ee0dd7917b3f21054a8e7d6b7101687a/aws_china_mfa">aws_china_mfa&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A script to authenticate to AWS China using MFA and export temporary session credentials.&lt;/p>
&lt;/blockquote>
&lt;p>The idea is simple. To log into AWS, we need the following environment variables
to be defined:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_PROFILE&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;china&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_ACCESS_KEY_ID&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;AKIAWHEATLICIOUSPANCAK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_SECRET_ACCESS_KEY&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;wSyrupyDeliciousSecretKeyForBreakfastDelight42&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_SESSION_TOKEN&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;FwoGZXIvYXdzEBaaDCakesYrUpSWeetToKenArEDelIcIoUs...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>AWS_PROFILE&lt;/code> is static and can be hard-coded. It&amp;rsquo;s also possible to supply it
to the &lt;code>aws&lt;/code> CLI via &lt;code>--profile&lt;/code>.&lt;/p>
&lt;p>The other three are fetched upon a successful authentication against AWS, using
MFA (multi-factor authentication) with an OTP.&lt;/p>
&lt;p>The usage experience of the script is like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ./aws_china_mfa.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Note: Script is being executed. To apply credentials, run:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">eval&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>./aws_china_mfa.sh china&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using AWS profile: china
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter the MFA token code &lt;span style="color:#c678dd">for&lt;/span> your AWS China account: &lt;span style="color:#d19a66">123456&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Retrieving MFA device ARN...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Requesting session token...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_PROFILE&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;china&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_ACCESS_KEY_ID&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;AKIAWHEATLICIOUSPANCAK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_SECRET_ACCESS_KEY&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;wSyrupyDeliciousSecretKeyForBreakfastDelight42&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">AWS_SESSION_TOKEN&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;FwoGZXIvYXdzEBaaDCakesYrUpSWeetToKenArEDelIcIoUs...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>✓ Successfully authenticated to AWS China
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copy and paste the &lt;span style="color:#e5c07b">export&lt;/span> commands above to apply credentials.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The script prompts the user for an OTP; that&amp;rsquo;s the only input.&lt;/p>
&lt;p>There are three ways to execute it:&lt;/p>
&lt;ul>
&lt;li>source it: the variables are then exported directly&lt;/li>
&lt;li>eval it: ditto&lt;/li>
&lt;li>execute it: in this mode it&amp;rsquo;s not possible to export the variables. Instead,
they are simply printed to stdout, and there&amp;rsquo;s a message instructing the user
to manually copy and paste the exports&lt;/li>
&lt;/ul>
&lt;p>Later on I added integration with 1Password, via &lt;code>--op-account&lt;/code> and &lt;code>--op-item&lt;/code>,
so that the OTP can be retrieved directly from it, without any user intervention
or interruption – besides using biometrics (touch ID) to confirm the
operation.&lt;/p></description></item><item><title>zizmor</title><link>https://perrotta.dev/2025/10/zizmor/</link><pubDate>Fri, 03 Oct 2025 12:44:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/zizmor/</guid><description>&lt;p>I originally heard of &lt;a href="https://docs.zizmor.sh/">zizmor&lt;/a> at &lt;a href="https://fosdem.org/2025/">FOSDEM 2025&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>zizmor is a static analysis tool for GitHub Actions. It can find and fix many
common security issues in typical GitHub Actions CI/CD setups.&lt;/p>
&lt;/blockquote>
&lt;p>One month later, I adopted it in the most important repos of our company.&lt;/p>
&lt;p>A few months later, I &lt;a href="https://perrotta.dev/2025/06/alpine-linux-packaging-track-new-software-releases/">added&lt;/a> it to the
Alpine Linux repositories, and am happily
&lt;a href="https://pkgs.alpinelinux.org/packages?name=zizmor">maintaining&lt;/a> it there.&lt;/p>
&lt;p>Now I use it &lt;em>everywhere&lt;/em>, via a git &lt;a href="https://pre-commit.com/">pre-commit&lt;/a> hook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/woodruffw/zizmor-pre-commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: b933184438555436e38621f46ceb0c417cbed400 # frozen&lt;/span>: v1.13.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: zizmor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The project has recently reached a milestone: &lt;a href="https://blog.yossarian.net/2025/09/14/one-year-of-zizmor">it has turned one year
old&lt;/a>. Its adoption,
community and feature set have all significantly increased during that time, in
a good way.&lt;/p>
&lt;p>The goal, impact and spirit of the project are all really great. And I&amp;rsquo;m sure
this is mainly thanks to the initiative and dedication of its author, &lt;a href="https://blog.yossarian.net/">William
Woodruff&lt;/a>.&lt;/p></description></item><item><title>.hushlogin</title><link>https://perrotta.dev/2025/10/.hushlogin/</link><pubDate>Thu, 02 Oct 2025 11:12:10 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/.hushlogin/</guid><description>&lt;p>When you create this file on macOS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% touch ~/.hushlogin
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>New shells spawn without noisy (&lt;a href="https://www.youtube.com/watch?v=3BBsF7VIQyo">hush!
hush!&lt;/a>) login messages.&lt;/p>
&lt;p>&lt;a href="https://nelson.cloud/quick-tip-mute-the-terminal-login-message-with-a-.hushlogin-file/">Nelson&lt;/a>
illustrates it with a couple of screenshots.&lt;/p></description></item><item><title>Claude Code: cheatsheet</title><link>https://perrotta.dev/2025/10/claude-code-cheatsheet/</link><pubDate>Wed, 01 Oct 2025 20:03:54 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-cheatsheet/</guid><description>&lt;p>A brain dump as of Oct 1st, 2025 of my head, all things &lt;a href="https://www.claude.com/product/claude-code">Claude Code&lt;/a>.&lt;/p>
&lt;h2 id="keyboard-shortcuts">Keyboard shortcuts&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Shift+Tab&lt;/code> to cycle through: &amp;ldquo;default&amp;rdquo; -&amp;gt; &amp;ldquo;⏵⏵ accept edits on&amp;rdquo; -&amp;gt; &amp;ldquo;⏸ plan mode on&amp;rdquo;
&lt;ul>
&lt;li>&amp;ldquo;⏵⏵ Accept edits on&amp;rdquo; is a comfortable mode to be on by default, especially
when paired with git commits as checkpoints.&lt;/li>
&lt;li>A well-curated tool whitelist (c.f. &lt;code>~/.claude/settings.json&lt;/code>) can further
enhance this mode.&lt;/li>
&lt;li>&amp;ldquo;⏵⏵ Accept edits on&amp;rdquo; is not the same as &lt;code>--dangerously-skip-permissions&lt;/code>:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Bypass all permission checks. Recommended only for sandboxes with no internet access.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>Tab&lt;/code> to toggle &amp;ldquo;Thinking on&amp;rdquo; / &amp;ldquo;Thinking off&amp;rdquo;
&lt;ul>
&lt;li>This is a brand new feature in &lt;a href="https://www.anthropic.com/news/enabling-claude-code-to-work-more-autonomously">Claude Code 2.0&lt;/a>, just released this week.
Hence I haven&amp;rsquo;t used it so far. Toggling the plan mode is typically enough
for my needs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Esc Esc&lt;/code> to clear input / &lt;code>/rewind&lt;/code> to a previous checkpoint
&lt;ul>
&lt;li>I prefer to &amp;ldquo;manually steer / tune&amp;rdquo; the LLM. Learn from past mistakes!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Ctrl-r&lt;/code> to search previous prompts – similarly to &lt;code>bash&lt;/code> / &lt;code>zsh&lt;/code> shell
history&lt;/li>
&lt;li>&lt;code>!&lt;/code> for shell mode e.g. &lt;code>! ls&lt;/code> or &lt;code>! git commit -a -m &amp;quot;msg&amp;quot;&lt;/code>. Good for
one-offs.
&lt;ul>
&lt;li>Alternatively, simply open a new shell tab / split / window.&lt;/li>
&lt;li>Alternatively, suspend Claude with &lt;code>Ctrl-z&lt;/code>:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Claude Code has been suspended. Run `fg` to bring Claude Code back.
Note: ctrl + z now suspends Claude Code, ctrl + _ undoes input.
[1] + 78756 suspended (signal) claude
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>/&lt;/code> for commands – TAB completion is available.&lt;/li>
&lt;li>&lt;code>@&lt;/code> for file paths e.g. &lt;code>@README.md&lt;/code> or &lt;code>@.env&lt;/code> – TAB completion is supported
&lt;ul>
&lt;li>Use &lt;code>@&lt;/code> to provide targeted context in prompts, for example: &lt;code>Upgrade @main.go to incorporate logging. Follow a pattern similar to @vendor/main.go. Update @README.md afterwards&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>#&lt;/code> to memorize (a.k.a. &amp;ldquo;add to memory&amp;rdquo;)
&lt;ul>
&lt;li>I don&amp;rsquo;t use this shortcut much. Instead, prefer editing &lt;code>CLAUDE.md&lt;/code> directly
for pristine, per-repo settings. This is comparable to having a local, per
git repo &lt;code>.gitignore&lt;/code> versus a &lt;code>~/.gitignore_global&lt;/code> that affects all
repositories.&lt;/li>
&lt;li>Project memory lives in &lt;code>CLAUDE.md&lt;/code>, user memory lives in
&lt;code>~/.claude/CLAUDE.md&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Ctrl-o&lt;/code> for verbose output&lt;/li>
&lt;li>&lt;code>Ctrl-t&lt;/code> to show TODOs&lt;/li>
&lt;li>&lt;code>Shift+Enter&lt;/code> for newline (&lt;code>\n&lt;/code>); pre-requisite: &lt;code>/terminal-setup&lt;/code>&lt;/li>
&lt;li>Emacs / readline keybindings generally work for text navigation: &lt;code>C-a&lt;/code>, &lt;code>C-e&lt;/code>,
&lt;code>C-b&lt;/code>, &lt;code>C-f&lt;/code>, &lt;code>C-u&lt;/code>, &lt;code>C-p&lt;/code>, &lt;code>C-n&lt;/code>, &lt;code>C-w&lt;/code>. There&amp;rsquo;s also a vim mode that can be
toggled with &lt;code>/vim&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Gripe&lt;/strong>: &lt;code>Ctrl-l&lt;/code> does not clear the screen. And neither does &lt;code>Esc Esc&lt;/code>.
Surely someone has already filed a feature request for this? There&amp;rsquo;s a
&lt;code>/clear&lt;/code> command, but it is meant to clear history and free up context, which
is totally different.&lt;/li>
&lt;li>&lt;code>Ctrl-_&lt;/code> to undo. I prefer &lt;code>C-w&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Gripe&lt;/strong>: It hard-codes mentioning &amp;ldquo;bash&amp;rdquo; in various places, instead of
&amp;ldquo;shell&amp;rdquo;. &lt;code>bash&lt;/code> is not the only POSIX shell out there. Heck, there&amp;rsquo;s even a
&lt;code>/bashes&lt;/code> command to list and manage background tasks.&lt;/li>
&lt;li>&lt;code>Esc&lt;/code> to interrupt (think of &lt;code>C-g&lt;/code> on Emacs).&lt;/li>
&lt;/ul>
&lt;p>Most of the above reference can be pulled up with:&lt;/p>
&lt;ul>
&lt;li>&lt;code>?&lt;/code> for help&lt;/li>
&lt;/ul>
&lt;p>A few handy comments not previously mentioned:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/cost&lt;/code>: show total cost + duration of the current session
&lt;ul>
&lt;li>See also: &lt;a href="https://perrotta.dev/2025/09/claude-ccusage/">ccusage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>/export&lt;/code>: copy the current conversation to the clipboard, or export it to a
file&lt;/li>
&lt;li>&lt;code>/init&lt;/code>: to bootstrap and scaffold / populate &lt;code>CLAUDE.md&lt;/code>&lt;/li>
&lt;li>&lt;code>/mcp&lt;/code> to manage MCP servers&lt;/li>
&lt;li>&lt;code>/resume&lt;/code>: resume a (previous) conversation.
&lt;ul>
&lt;li>Alternatively, launch &lt;code>claude&lt;/code> with &lt;a href="https://perrotta.dev/2025/09/claude--resume/">&lt;code>--resume&lt;/code>&lt;/a> in the desired CWD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="settings">Settings&lt;/h2>
&lt;p>My &lt;code>~/.claude/settings.json&lt;/code> at the time of this post:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;CLAUDE_CODE_ENABLE_TELEMETRY&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;permissions&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;allow&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(ansible-doc:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(command -v:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(fd:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(find:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr diff:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr list:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr review-comment list:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr view:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(grep:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(hadolint:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(helm template:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(ls:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(rg:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(yamllint:*)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;statusLine&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;command&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;bash ~/.claude/statusline.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;alwaysThinkingEnabled&amp;#34;&lt;/span>: &lt;span style="color:#e5c07b">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>no telemetry (privacy!)&lt;/li>
&lt;li>allow a couple of often used tools (utilities), especially read-only ones&lt;/li>
&lt;li>add a simple status line; originally scaffolded with &lt;code>/statusline&lt;/code>&lt;/li>
&lt;li>do not always think (it&amp;rsquo;s slow &amp;amp; expensive!)&lt;/li>
&lt;/ul>
&lt;p>&lt;code>settings.json&lt;/code> and &lt;code>statusline.sh&lt;/code> are both in my
&lt;a href="https://github.com/thiagowfx/.dotfiles">dotfiles&lt;/a>.&lt;/p></description></item><item><title>New script: sd-world: perform a full system upgrade</title><link>https://perrotta.dev/2025/10/new-script-sd-world-perform-a-full-system-upgrade/</link><pubDate>Wed, 01 Oct 2025 01:11:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/new-script-sd-world-perform-a-full-system-upgrade/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/01/sd-world-perform-a-full-system-upgrade/">Previously&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Whenever I want to upgrade any one of my systems, I run &lt;code>sd-world&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>Now the script has evolved, being &lt;a href="https://github.com/thiagowfx/pancake/blob/9b2cc8c6df6103d4ab1457e30353fe0711290aa2/sd-world/sd-world.sh">hosted&lt;/a> in &lt;a href="https://github.com/thiagowfx/pancake">pancake&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>it handles interruptions (Ctrl-C) more efficiently (it was my biggest gripe)&lt;/li>
&lt;li>the output is more user-friendly&lt;/li>
&lt;/ul>
&lt;p>Preview:&lt;/p>
&lt;pre tabindex="0">&lt;code>% ./sd_world.sh
Starting system upgrade...

Detected macOS system

Upgrading Homebrew...
==&amp;gt; Updating Homebrew...
Already up-to-date.
==&amp;gt; Upgrading 2 outdated packages:
node@18, python@3.11
==&amp;gt; Upgrading node@18 18.17.0 -&amp;gt; 18.19.0
==&amp;gt; Upgrading python@3.11 3.11.6 -&amp;gt; 3.11.7
✓ Homebrew upgrade completed successfully

Upgrading Mac App Store...
✓ Mac App Store upgrade completed successfully

Upgrading System Updates...
Software Update Tool

Finding available software
No new software available.
✓ System Updates upgrade completed successfully

Upgrading Claude Code...
Checking for updates...
claude-code v0.8.2 → v0.8.3 (latest)
Updated successfully! 🎉
✓ Claude Code upgrade completed successfully

Upgrading myrepos...
mr update: /Users/username/repos/project1
From github.com:user/project1
 abc1234..def5678 main -&amp;gt; origin/main
Updating abc1234..def5678
Fast-forward
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

mr update: finished (1 ok)
✓ myrepos upgrade completed successfully

Upgrade Summary:
Successfully upgraded: 5/5 package managers
All package managers upgraded successfully!
&lt;/code>&lt;/pre></description></item><item><title>git blame: prior commits</title><link>https://perrotta.dev/2025/09/git-blame-prior-commits/</link><pubDate>Mon, 29 Sep 2025 10:41:15 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/git-blame-prior-commits/</guid><description>&lt;p>Let&amp;rsquo;s say you want to inspect the history of a given file tracked in a git
repository. Straightforward with &lt;a href="https://man.archlinux.org/man/extra/git/git-blame.1.en">&lt;code>git-blame(1)&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git --no-pager blame templates/secret-aws-info.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5d478f6cb83b &lt;span style="color:#56b6c2">(&lt;/span>Kubernetes Astronaut 2025-08-05 10:49:07 -0400 1&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">{{&lt;/span>- &lt;span style="color:#c678dd">if&lt;/span> or &lt;span style="color:#56b6c2">(&lt;/span>eq .Values.config.cloud.provider &lt;span style="color:#98c379">&amp;#34;aws&amp;#34;&lt;/span>&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>not &lt;span style="color:#56b6c2">(&lt;/span>.Values.config.externalDNS&lt;span style="color:#56b6c2">)&lt;/span>.enabled&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aeb7c4d7b9b &lt;span style="color:#56b6c2">(&lt;/span>Thiago Perrotta 2025-04-06 13:11:45 +0200 2&lt;span style="color:#56b6c2">)&lt;/span> apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aeb7c4d7b9b &lt;span style="color:#56b6c2">(&lt;/span>Thiago Perrotta 2025-04-06 13:11:45 +0200 3&lt;span style="color:#56b6c2">)&lt;/span> kind: Secret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am not interested in &lt;code>5d478f6cb83b&lt;/code> though: it was just a refactoring change.
How can I look deeper in history? More specifically, I&amp;rsquo;d like to run &lt;code>git blame&lt;/code>
on a point in time
&lt;a href="https://stackoverflow.com/questions/5098256/how-can-i-view-prior-commits-with-git-blame">&lt;em>before&lt;/em>&lt;/a> commit &lt;code>5d478f6cb83b&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git --no-pager blame 5d478f6cb83b^ templates/secret-aws-info.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aeb7c4d7b9b &lt;span style="color:#56b6c2">(&lt;/span>Thiago Perrotta 2025-04-06 13:11:45 +0200 1&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">{{&lt;/span>- &lt;span style="color:#c678dd">if&lt;/span> or &lt;span style="color:#56b6c2">(&lt;/span>eq .Values.config.cloudProvider &lt;span style="color:#98c379">&amp;#34;aws&amp;#34;&lt;/span>&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>not &lt;span style="color:#56b6c2">(&lt;/span>.Values.config.externalDNS&lt;span style="color:#56b6c2">)&lt;/span>.enabled&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aeb7c4d7b9b &lt;span style="color:#56b6c2">(&lt;/span>Thiago Perrotta 2025-04-06 13:11:45 +0200 2&lt;span style="color:#56b6c2">)&lt;/span> apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1aeb7c4d7b9b &lt;span style="color:#56b6c2">(&lt;/span>Thiago Perrotta 2025-04-06 13:11:45 +0200 3&lt;span style="color:#56b6c2">)&lt;/span> kind: Secret
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And I could keep going on:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git --no-pager blame 1aeb7c4d7b9b^ templates/secret-aws-info.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>...&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Chromium project has a
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-hyper-blame.html">&lt;code>git-hyper-blame(1)&lt;/code>&lt;/a> script:&lt;/p>
&lt;blockquote>
&lt;p>Like git blame, but with the ability to ignore or bypass certain commits.&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;that enables tracking refactoring/cleanup commits on a permanent basis for
skipping blame.&lt;/p></description></item><item><title>New script: pritunl login via CLI</title><link>https://perrotta.dev/2025/09/new-script-pritunl-login-via-cli/</link><pubDate>Sun, 28 Sep 2025 14:07:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/new-script-pritunl-login-via-cli/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/05/pritunl-log-in-via-cli/">Previously&lt;/a>.&lt;/p>
&lt;p>Now, instead of a shell function, it evolved to a &lt;a href="https://github.com/thiagowfx/pancake/tree/7d35c10b4f8cccd61142bbca7a5d01e81cd5feed/pritunl_login">dedicated
script&lt;/a>
in &lt;a href="https://github.com/thiagowfx/pancake">pancake&lt;/a>.&lt;/p>
&lt;p>In my opinion it&amp;rsquo;s quite user-friendly:&lt;/p>
&lt;pre tabindex="0">&lt;code>% pritunl_login.sh stark-industries &amp;#39;op://Employee/x9zm2kddpq4nvbwrfhgtsjloey/password&amp;#39;
Connecting to Pritunl VPN...
Account: stark-industries
Password reference: op://Employee/x9zm2kddpq4nvbwrfhgtsjloey/password

Getting Pritunl profile ID...
Using profile ID: a1b2c3d4e5f6g7h8
Retrieving credentials from 1Password...
Starting VPN connection...
✓ VPN connection started successfully

Current VPN status:
| ID | NAME | STATE | AUTOSTART | ONLINE FOR | SERVER ADDRESS | CLIENT ADDRESS |
|------------------|------------------|--------|-----------|----------------|----------------|----------------|
| a1b2c3d4e5f6g7h8 | Stark Industries | Active | Enabled | 1 hour 52 mins | 203.0.113.42 | 10.0.0.15 |
&lt;/code>&lt;/pre></description></item><item><title>The get your shit together day</title><link>https://perrotta.dev/2025/09/the-get-your-shit-together-day/</link><pubDate>Sat, 27 Sep 2025 17:02:37 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/the-get-your-shit-together-day/</guid><description>&lt;p>Alex Kotliarskyi&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, &lt;a href="https://frantic.im/get-your-shit-together-day/">The Get Your Shit Together
Day&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The Get Your Shit Together day is a day off you take from work, family and
other obligations.&lt;/p>
&lt;p>It&amp;rsquo;s a day you dedicate fully to things you&amp;rsquo;ve been always postponing. Fix
squeaky door hinges, repot your plant, publish that blog post, start a side
project. Really anything on your todo list that has been there for years.&lt;/p>
&lt;p>On the Get Your Shit Together day you are not allowed to work on anything
typically considered urgent or important. There&amp;rsquo;s a whole life-worth of days
for that.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>If you read this far and this idea resonates with you, pick a random day next
month and block your calendar. I promise it&amp;rsquo;ll be worth it.&lt;/p>
&lt;/blockquote>
&lt;p>I love to do this during the December holidays.&lt;/p>
&lt;p>It&amp;rsquo;s a peaceful time.&lt;/p>
&lt;p>Easy to completely disconnect and just focus on these small, pesky little
things.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>From whom I got
&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/db481962368a094e2b5c852709d1da9d3cfc5c07/profile/.profile.d/functions.sh#L5">my&lt;/a>
beloved &lt;a href="https://frantic.im/cdtmp/">&lt;code>cdtmp&lt;/code>&lt;/a> shell alias.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Kubernetes: pod memory usage</title><link>https://perrotta.dev/2025/09/kubernetes-pod-memory-usage/</link><pubDate>Fri, 26 Sep 2025 11:54:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/kubernetes-pod-memory-usage/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a pod in Kubernetes, check its memory (RAM) usage.&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/54531646/checking-kubernetes-pod-cpu-and-memory-utilization">Stack
Overflow&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl top pod -n &lt;span style="color:#56b6c2">{&lt;/span>namespace&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>pod name&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>--containers&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>--containers=false:
 If present, print usage of containers within a pod.
&lt;/code>&lt;/pre>&lt;p>This only works if &lt;a href="https://github.com/kubernetes-sigs/metrics-server">metrics
server&lt;/a> is installed (it
should be!).&lt;/p>
&lt;p>There&amp;rsquo;s an alternative:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl describe PodMetrics &lt;span style="color:#56b6c2">{&lt;/span>pod name&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It must be &lt;code>PodMetrics&lt;/code>. &lt;code>PodMetric&lt;/code> does not work (ugh!&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% kubectl get PodMetric
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>error: the server doesn&amp;#39;t have a resource &lt;span style="color:#e5c07b">type&lt;/span> &lt;span style="color:#98c379">&amp;#34;PodMetric&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If metrics server is not available for some reason, then one needs to dive into
the container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl &lt;span style="color:#e5c07b">exec&lt;/span> -it &lt;span style="color:#56b6c2">{&lt;/span>pod name&lt;span style="color:#56b6c2">}&lt;/span> -n &lt;span style="color:#56b6c2">{&lt;/span>namespace&lt;span style="color:#56b6c2">}&lt;/span> -- /bin/sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;which won&amp;rsquo;t always work; not every container has &lt;code>/bin/sh&lt;/code>. Then read the
contents of &lt;code>/sys/fs/cgroup/memory/memory.usage_in_bytes&lt;/code>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Who designed this? Is it so hard to achieve consistency? Both &lt;code>kubectl get pod&lt;/code> and &lt;code>kubectl get pods&lt;/code> work. Why can&amp;rsquo;t it be the same with &lt;code>PodMetric&lt;/code>?
And, no, &lt;code>PodMetricses&lt;/code> does not work either.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>pancake: potpourri scripts</title><link>https://perrotta.dev/2025/09/pancake-potpourri-scripts/</link><pubDate>Thu, 25 Sep 2025 13:23:35 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/pancake-potpourri-scripts/</guid><description>&lt;p>I&amp;rsquo;ve been meaning to create a git repository to host a collection of
miscellaneous scripts / binaries that are too big to fit in shell aliases /
functions, or text snippets.&lt;/p>
&lt;p>This started today: &lt;a href="https://github.com/thiagowfx/pancake">https://github.com/thiagowfx/pancake&lt;/a>&lt;/p>
&lt;p>There&amp;rsquo;s no particular reason to call it &amp;ldquo;pancake&amp;rdquo;, just like there&amp;rsquo;s no special
reason to suffix my first name with &amp;ldquo;wfx&amp;rdquo;. Sometimes it is just what it is.&lt;/p>
&lt;p>I am still fleshing out a project structure, it shall become clearer as more
scripts are added over time.&lt;/p>
&lt;p>For now:&lt;/p>
&lt;pre tabindex="0">&lt;code>% z pancake
thiago@MacBook-Pro ~/Workspace/pancake (git)-[master]
% tree
.
├── LICENSE
├── op_login_all
│ ├── op_login_all.sh
│ └── README.md
└── README.md
&lt;/code>&lt;/pre></description></item><item><title>mv: case sensitivity</title><link>https://perrotta.dev/2025/09/mv-case-sensitivity/</link><pubDate>Thu, 25 Sep 2025 12:22:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/mv-case-sensitivity/</guid><description>&lt;p>From the series: why you should always use a case sensitive file system (like
most of Linux).&lt;/p>
&lt;p>By default, to my despair, macOS uses a case-insensitive file system(&lt;a href="https://discussions.apple.com/thread/251191099?sortBy=rank">1&lt;/a>, &lt;a href="https://docs.spryker.com/docs/dg/dev/integrate-and-configure/switch-to-a-case-sensitive-file-system-on-mac-os#create-the-disk-image">2&lt;/a>).&lt;/p>
&lt;p>We can pretend this is not an issue, and simply brush it under the carpet during
most sunny days.&lt;/p>
&lt;p>Nonetheless, at some point the dust must settle.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: rename &lt;code>justfile&lt;/code> to &lt;code>Justfile&lt;/code>.&lt;/p>
&lt;p>Too easy? On Linux, yes. On macOS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% mv justfile Justfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mv: &lt;span style="color:#98c379">&amp;#39;justfile&amp;#39;&lt;/span> and &lt;span style="color:#98c379">&amp;#39;Justfile&amp;#39;&lt;/span> are the same file
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Fine. Let&amp;rsquo;s do it the &amp;lsquo;&amp;lsquo;&amp;lsquo;hard&amp;rsquo;&amp;rsquo;&amp;rsquo; way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% mv justfile&lt;span style="color:#56b6c2">{&lt;/span>,.bkp&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mv justfile.bkp Justfile
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And life goes on.&lt;/p></description></item><item><title>An ordinary day with Claude</title><link>https://perrotta.dev/2025/09/an-ordinary-day-with-claude/</link><pubDate>Wed, 24 Sep 2025 13:34:58 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/an-ordinary-day-with-claude/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Thiago&lt;/strong>: make the same change &lt;a href="https://github.com/%7Borg%7D/%7Brepo2%7D/pull/5385">https://github.com/{org}/{repo2}/pull/5385&lt;/a> in this repo&lt;/p>
&lt;p>&lt;strong>Claude&lt;/strong>: I&amp;rsquo;ll help you apply the same changes from the {repo} PR to this repo. Let me first fetch the PR details to understand what changes need to be made.&lt;/p>
&lt;p>&lt;strong>Claude&lt;/strong>:&lt;/p>
&lt;pre tabindex="0">&lt;code>⏺ Fetch(https://github.com/{org}/{repo}/pull/5385)
⎿ Error: Request failed with status code 404
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Claude&lt;/strong>: Let me try using the GitHub CLI to get the PR information:&lt;/p>
&lt;pre tabindex="0">&lt;code>Bash(gh pr view 5385 --repo {org}/{repo} --json title,body,files)
&lt;/code>&lt;/pre>&lt;/blockquote>
&lt;p>A clever idea! And it works.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Thiago&lt;/strong>: make the same change &lt;a href="https://github.com/%7Borg%7D/%7Brepo3%7D/pull/5385">https://github.com/{org}/{repo3}/pull/5385&lt;/a> in this repo&lt;/p>
&lt;p>&lt;strong>Claude&lt;/strong>: I&amp;rsquo;ll help you apply the same change from the {repo} PR to this repo. Let me first fetch the PR details to understand what changes need to be made.&lt;/p>
&lt;p>&lt;strong>Claude&lt;/strong>:&lt;/p>
&lt;pre tabindex="0">&lt;code>⏺ Fetch(https://github.com/{org}/{repo}/pull/5385)
⎿ Error: Request failed with status code 404
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Claude&lt;/strong>: The PR link returns a 404 error, which means it might be a private repository or the PR doesn&amp;rsquo;t exist. Could you please provide:&lt;/p>
&lt;ol>
&lt;li>The specific changes that were made in that PR, or&lt;/li>
&lt;li>A description of what changes you&amp;rsquo;d like me to apply to this repo, or&lt;/li>
&lt;li>Access to view the PR if it&amp;rsquo;s in a private repository&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Claude&lt;/strong>: This will help me understand exactly what modifications you need me to make in this repository.&lt;/p>
&lt;/blockquote>
&lt;p>Poor Claude is overworked and needs to sleep and dream of electric sheep&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Seriously: it was exactly the same prompt, a few minutes apart from each
other. Is it so hard to achieve determinism and reproducibility?&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>homebrew: command-not-found</title><link>https://perrotta.dev/2025/09/homebrew-command-not-found/</link><pubDate>Tue, 23 Sep 2025 10:14:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/homebrew-command-not-found/</guid><description>&lt;p>As of &lt;a href="https://github.com/Homebrew/homebrew-command-not-found">Sep 22nd, 2025&lt;/a>,
homebrew &lt;em>natively&lt;/em> supports a &amp;ldquo;command-not-found&amp;rdquo; hook.&lt;/p>
&lt;p>The emphasis is on &lt;em>natively&lt;/em>.&lt;/p>
&lt;p>Previously this could be achieved with a tap:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew tap https://github.com/Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>src_files &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>brew --prefix&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">/Library/Taps/homebrew/homebrew-command-not-found/handler.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thus yielding this effect:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ghc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsh: correct &lt;span style="color:#98c379">&amp;#39;ghc&amp;#39;&lt;/span> to &lt;span style="color:#98c379">&amp;#39;gh&amp;#39;&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>nyae&lt;span style="color:#56b6c2">]&lt;/span>? n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The program &lt;span style="color:#98c379">&amp;#39;ghc&amp;#39;&lt;/span> can be found in the following formulae:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Try: brew install &amp;lt;selected formula&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The difference today is that there&amp;rsquo;s no need to tap an extra repository anymore
to do so; the hook is henceforth built directly into homebrew&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">hash&lt;/span> brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color:#d19a66">1&lt;/span> &lt;span style="color:#56b6c2">&amp;amp;&amp;amp;&lt;/span> src_files &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>brew --repository&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">/Library/Homebrew/command-not-found/handler.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For completeness, untap the command-not-found repository as it is no longer
needed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew doctor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please note that these warnings are just used to &lt;span style="color:#e5c07b">help&lt;/span> the Homebrew maintainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>with debugging &lt;span style="color:#c678dd">if&lt;/span> you file an issue. If everything you use Homebrew &lt;span style="color:#c678dd">for&lt;/span> is
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>working fine: please don&amp;#39;t worry or file an issue; just ignore this. Thanks!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: You have the following deprecated, official taps tapped:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Untap them with &lt;span style="color:#98c379">`&lt;/span>brew untap&lt;span style="color:#98c379">`&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew untap Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% Untapping homebrew/command-not-found...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Untapped &lt;span style="color:#56b6c2">(&lt;/span>2,572 files, 87.4MB&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My dotfiles diff:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>commit f02c9ab2b203a6235414924e7ddb4b8b6ac6ee52 (HEAD -&amp;gt; master)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;{redacted}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Tue Sep 23 10:16:47 2025 +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brew: command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git profile/.profile.d/10-brew.sh profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index 1828f77..97645f0 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -11,9 +11,8 @@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ -z &amp;#34;$HOMEBREW_PREFIX&amp;#34; ] &amp;amp;&amp;amp; [ -x /opt/homebrew/bin/brew ] &amp;amp;&amp;amp; eval &amp;#34;$(/opt/homebrew/bin/brew shellenv)&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # command-not-found hook
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-# setup: brew tap &amp;#34;homebrew/command-not-found&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-# https://github.com/Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-hash brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; src_files &amp;#34;$(brew --prefix)/Library/Taps/homebrew/homebrew-command-not-found/handler.sh&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+# brew --prefix works too
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+hash brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; src_files &amp;#34;$(brew --repository)/Library/Homebrew/command-not-found/handler.sh&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # GNU coreutils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path_munge &amp;#34;/opt/homebrew/opt/coreutils/libexec/gnubin&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/13d66a2b80efa02c611a747008124cbbb3ef3a8f/profile/.profilerc#L17">&lt;code>src_files&lt;/code>&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>go/keep-sorted</title><link>https://perrotta.dev/2025/09/go/keep-sorted/</link><pubDate>Mon, 22 Sep 2025 11:12:59 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/go/keep-sorted/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/keep-sorted/">Previously&lt;/a>,
&lt;a href="https://perrotta.dev/2025/03/using-keep-sorted-to-keep-your-~/.gitconfig-tidy/">previously&lt;/a>,
&lt;a href="https://perrotta.dev/2025/03/keep-sorted-with-quotes/">previously&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>keep-sorted is, by far, one of my favorite tools to enforce tidying up a
codebase.&lt;/p>
&lt;/blockquote>
&lt;p>Google Testing Blog, &lt;a href="https://testing.googleblog.com/2025/09/sort-lines-in-source-code.html">Sort Lines in Source Code&lt;/a>.&lt;/p>
&lt;p>They have finally released a
&lt;a href="https://abseil.io/resources/swe-book/html/ch11.html#:~:text=their%20testing%20culture.-,Testing%20on%20the%20Toilet,-Of%20all%20the">TotT&lt;/a>
(&amp;ldquo;Testing on the Toilet&amp;rdquo;) episode about
&lt;a href="https://github.com/google/keep-sorted">keep-sorted&lt;/a>.&lt;/p>
&lt;p>It&amp;rsquo;s such an underappreciated tool: not even 300 stars on GitHub. In the
meantime, anything named &amp;ldquo;AI&amp;rdquo; or &amp;ldquo;Agents&amp;rdquo; or &amp;ldquo;LLM&amp;rdquo; rises to the top without any
scrutiny of quality.&lt;/p>
&lt;p>Now I am happy that I have somewhere to link to other than my blog.&lt;/p></description></item><item><title>Taking oncall</title><link>https://perrotta.dev/2025/09/taking-oncall/</link><pubDate>Sun, 21 Sep 2025 22:23:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/taking-oncall/</guid><description>&lt;p>When performing routine planned maintenance, one often needs to &amp;ldquo;take oncall&amp;rdquo;.&lt;/p>
&lt;p>This is standard terminology; for the uninitiated, it can be more formally
defined as &amp;ldquo;adding a schedule override to a given oncall shift&amp;rdquo;. The override is
often brief (e.g. one hour), though it does not have to be.&lt;/p>
&lt;p>Note that, in this definition, &amp;ldquo;taking oncall&amp;rdquo; is &lt;em>not&lt;/em> the same as swapping a
given oncall shift with a coworker.&lt;/p>
&lt;p>Pedantries satisfied, now here we go:&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: make the action of taking oncall in &lt;a href="https://www.atlassian.com/software/opsgenie/migration">JIRA Service
Management (JSM)&lt;/a> (neé
OpsGenie) quick and efficient.&lt;/p>
&lt;p>When using the web UI (https://{corp}.atlassian.net/jira/ops/who-is-on-call) it
often takes me a significant amount of time&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> to remember &lt;a href="https://support.atlassian.com/jira-service-management-cloud/docs/override-an-on-call-schedule/">how to do
so&lt;/a>.&lt;/p>
&lt;p>A quicker way is to issue a command via Slack:&lt;/p>
&lt;pre tabindex="0">&lt;code>/jsmops assign oncall to me for TechOps
&lt;/code>&lt;/pre>&lt;p>The command works as is: &amp;ldquo;me&amp;rdquo; is a magic word, and &amp;ldquo;TechOps&amp;rdquo; is the name of the
oncall rotation.&lt;/p>
&lt;p>But I cannot remember this command, no matter how often I run it. I can
re-create it by running &lt;code>/jsmops help&lt;/code>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, reading the documentation and then
crafting it. However, now a few wasted precious minutes were gone!&lt;/p>
&lt;p>In order to streamline it in the future, I&amp;rsquo;ll use &lt;a href="https://perrotta.dev/2025/05/espanso-hello-world/">espanso&lt;/a> to define this snippet (via &lt;code>espanso edit&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">matches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:oncall&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;/jsmops assign oncall to me for TechOps&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From this point on, I just need to type &lt;code>:oncall&amp;lt;ENTER&amp;gt;&lt;/code> on Slack. From
O(minutes) to O(seconds)!&lt;/p>
&lt;p>I should probably introduce some structured organization to my espanso snippets
at some point. As they grow in quantity, it becomes more challenging to manage
them. For example, I thought of arranging this one with &lt;code>:slack:oncall&lt;/code>, but I
don&amp;rsquo;t have any other Slack commands to justify that yet.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It should be a first-class operation of such a platform, 1-click away, in
a place that is prominently visible in the UI.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Oops, you can&amp;rsquo;t run slack commands in threads; try again, in a channel.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Hacking comments with JSON</title><link>https://perrotta.dev/2025/09/hacking-comments-with-json/</link><pubDate>Sat, 20 Sep 2025 13:27:15 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/hacking-comments-with-json/</guid><description>&lt;p>&lt;a href="https://blog.marco.ninja/notes/technology/json/hacking-comments-into-json/">Hacking Comments Into JSON&lt;/a> by Marko Kamner:&lt;/p>
&lt;blockquote>
&lt;p>JSON does not natively support comments, which is OK, but sometimes a comment
could really help.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>If the application loading the JSON does not care about additional keys we can
simply add a key with our favorite comment indicator like // or #.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;//&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This setting enables not just A, but somehow also B&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;enable_feature_a&amp;#34;&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Silly, but clever.&lt;/p>
&lt;p>Alternatively: look into &lt;a href="https://json5.org/">JSON5&lt;/a> (&amp;ldquo;JSON for Humans&amp;rdquo;), or
&lt;a href="https://jsonc.org/">JSONC&lt;/a> (&amp;ldquo;JSON with comments&amp;rdquo;), or
&lt;a href="https://hjson.github.io/">HJSON&lt;/a> (&amp;ldquo;a user interface for JSON&amp;rdquo;), or
&lt;a href="https://jsonlines.org/">jsonl&lt;/a> (&amp;ldquo;JSON Lines&amp;rdquo;).&lt;/p>
&lt;p>Obligatory:&lt;/p>
&lt;figure>&lt;a href="https://xkcd.com/927/">&lt;img src="https://imgs.xkcd.com/comics/standards.png"
 alt="Fortunately, the charging one has been solved now that we&amp;#39;ve all standardized on mini-USB. Or is it micro-USB? Shit.">&lt;/a>&lt;figcaption>
 &lt;p>XKCD Courtesy of Randall Munroe&lt;/p>
 &lt;/figcaption>
&lt;/figure>
</description></item><item><title>GitHub autolinks</title><link>https://perrotta.dev/2025/09/github-autolinks/</link><pubDate>Thu, 18 Sep 2025 20:50:30 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/github-autolinks/</guid><description>&lt;p>&lt;a href="https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/managing-repository-settings/configuring-autolinks-to-reference-external-resources">Manage repository settings -&amp;gt; Configuring autolinks to reference external resources&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>You can add autolinks to external resources like JIRA issues and Zendesk tickets to help streamline your workflow.&lt;/p>
&lt;/blockquote>
&lt;p>A practical application for this: configure &lt;code>INFRA-123&lt;/code> to automatically link to
&lt;code>https://{corp}.atlassian.net/browse/INFRA-123&lt;/code>.&lt;/p></description></item><item><title>LaTeX CV</title><link>https://perrotta.dev/2025/09/latex-cv/</link><pubDate>Wed, 17 Sep 2025 13:15:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/latex-cv/</guid><description>&lt;p>For ages I&amp;rsquo;ve been using a resumé crafted in Google Docs. I was never a big fan
of it, but it got the job done&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It was always one of my wildest dreams to rewrite my resumé in LaTeX.&lt;/p>
&lt;p>The main challenge would be to either i) find a decent template or ii) create my
own template. Thanks to &lt;a href="https://www.overleaf.com/">Overleaf&lt;/a>, i) is quite
straightforward:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/software-engineer-resume/gqxmqsvsbdjf">https://www.overleaf.com/latex/templates/software-engineer-resume/gqxmqsvsbdjf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/faangpath-simple-template/npsfpdqnxmbc">https://www.overleaf.com/latex/templates/faangpath-simple-template/npsfpdqnxmbc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/swe-resume-template/bznbzdprjfyy">https://www.overleaf.com/latex/templates/swe-resume-template/bznbzdprjfyy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/software-engineering-resume/mcvwcrmddsyw">https://www.overleaf.com/latex/templates/software-engineering-resume/mcvwcrmddsyw&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/rendercv-engineeringresumes-theme/shwqvsxdgkjy">https://www.overleaf.com/latex/templates/rendercv-engineeringresumes-theme/shwqvsxdgkjy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I could either use overleaf itself, or do everything locally (e.g. with
&lt;code>texlive&lt;/code> + &lt;code>TeXShop.app&lt;/code> in macOS).&lt;/p>
&lt;p>Another possibility is to use &lt;a href="https://typst.app/">Typst&lt;/a>, which is a modern
take for a typesetting engine. Think of writing LaTeX without having to know how
to write LaTeX, using a &lt;a href="https://typst.app/docs/reference/syntax/">markup
language&lt;/a> that heavily resembles
Markdown.&lt;/p>
&lt;p>They even provide a neat web &lt;a href="https://typst.app/play/">playground&lt;/a>, wherein the
rendered document is updated near instantly. It&amp;rsquo;s such a superb user experience!&lt;/p>
&lt;p>And it&amp;rsquo;s &lt;a href="https://typst.app/pricing/">free&lt;/a> and &lt;a href="https://github.com/typst/typst">open
source&lt;/a>! It is capable of rendering multiple
formats: markdown, html, png, pdf. The possibility of using the same source,
with the same looks, for both your printed resumé (PDF) and your website
(markdown, html) is very appealing.&lt;/p>
&lt;p>The &lt;a href="https://rendercv.com/">RenderCV&lt;/a> project builds on top of Typst to build a
turnkey solution to write your CV
&lt;a href="https://github.com/rendercv/rendercv">declaratively&lt;/a>, purely from a
&lt;a href="https://github.com/rendercv/rendercv/blob/main/examples/John_Doe_ClassicTheme_CV.yaml">YAML&lt;/a>
file&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>All these initiatives are great. I have finally had the time to ditch Google
Docs for a fully open source text format.&lt;/p>
&lt;p>Now I am debating whether to embed my new CV into this website.&lt;/p>
&lt;p>Automated scraping is naughty, but an in-context portfolio would be amazing.
Perhaps I could simply put it behind a
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/Authentication">password-protected&lt;/a>
page? Or use symmetric cryptography to obfuscate it, with some bits of
JavaScript to decrypt it upon using a pre-shared passphrase key. Of course, both
approaches would be helpful only if I come up with a scheme to share the key with
humans whilst making it hard for bots to decipher it. Perhaps a riddle? If the
friction is too high, humans won&amp;rsquo;t get to fetch it though. We&amp;rsquo;ll see.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>pun intended&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>what&amp;rsquo;s next, the writing of your CV in &lt;a href="https://nixos.org/">Nix&lt;/a> language?&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub stale bot considered harmful</title><link>https://perrotta.dev/2025/09/github-stale-bot-considered-harmful/</link><pubDate>Tue, 16 Sep 2025 23:19:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/github-stale-bot-considered-harmful/</guid><description>&lt;p>&lt;a href="https://drewdevault.com/2021/10/26/stalebot.html">Drew DeVault&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>One of GitHub&amp;rsquo;s &amp;ldquo;recommended&amp;rdquo; marketplace features is the &amp;ldquo;stale&amp;rdquo; bot. The
purpose of this bot is to automatically close GitHub issues after a period of
inactivity, 60 days by default. You have probably encountered it yourself in
the course of your work.&lt;/p>
&lt;p>This is a terrible, horrible, no good, very bad idea.&lt;/p>
&lt;p>I&amp;rsquo;m not sure what motivates maintainers to install this on their repository,
other than the fact that GitHub recommends it to them. Perhaps it&amp;rsquo;s motivated
by a feeling of shame for having a lot of unanswered issues? If so, this might
stem from a misunderstanding of the responsibilities a maintainer has to their
project. You are not obligated to respond to every issue, implement every
feature request, or fix every bug, or even acknowledge them in any way.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://redacted.moe/f/e2f0d39c.png" alt="github-actions stale bot automatically locking an issue">&lt;/p>
&lt;p>I second this. It&amp;rsquo;s not a &amp;ldquo;shame&amp;rdquo; to accumulate issues. Just set expectations
accordingly.&lt;/p>
&lt;p>Lately I&amp;rsquo;ve been encountering various CNCF projects that employ it, and it&amp;rsquo;s
&lt;a href="https://github.com/helm/helm/issues/13192">simply&lt;/a>
&lt;a href="https://github.com/helm/chart-testing/issues/748">awful&lt;/a>.&lt;/p>
&lt;p>I do not have anything else to add; Drew pretty much nails it.&lt;/p></description></item><item><title>vim: remove trailing whitespace</title><link>https://perrotta.dev/2025/09/vim-remove-trailing-whitespace/</link><pubDate>Tue, 16 Sep 2025 14:27:55 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/vim-remove-trailing-whitespace/</guid><description>&lt;p>A simple addition to remove all trailing whitespace from the current buffer by
pressing &lt;code>,t&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
(&lt;a href="https://vi.stackexchange.com/questions/454/whats-the-simplest-way-to-strip-trailing-whitespace-from-all-lines-in-a-file">via&lt;/a>):&lt;/p>
&lt;pre tabindex="0">&lt;code>% GIT_PAGER=cat git show
commit 1c22fcbc12ffd2cb3c40152d152d099c9a9b7f85 (HEAD -&amp;gt; master, origin/master, origin/HEAD)
Author: Thiago Perrotta &amp;lt;{redacted}&amp;gt;
Date: Tue Sep 16 14:26:46 2025 +0200

 vim: remove trailing whitespace

diff --git vim/.vim/vimrc vim/.vim/vimrc
index 8cf33d8..004beda 100644
--- vim/.vim/vimrc
+++ vim/.vim/vimrc
@@ -60,6 +60,9 @@ nnoremap J gJ
 &amp;#34; Reflow current paragraph
 nnoremap &amp;lt;silent&amp;gt; Q gwip

+&amp;#34; Remove all trailing whitespace
+nnoremap &amp;lt;leader&amp;gt;t :let _s=@/&amp;lt;Bar&amp;gt;:%s/\s\+$//e&amp;lt;Bar&amp;gt;:let @/=_s&amp;lt;Bar&amp;gt;&amp;lt;CR&amp;gt;
+
 &amp;#34; Always use vertical diff splits.
 set diffopt+=vertical
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>My &lt;a href="https://stackoverflow.com/questions/1764263/what-is-the-leader-in-a-vimrc-file">leader&lt;/a> key is mapped to &lt;code>,&lt;/code>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Hugo: create and edit a post</title><link>https://perrotta.dev/2025/09/hugo-create-and-edit-a-post/</link><pubDate>Mon, 15 Sep 2025 12:40:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/hugo-create-and-edit-a-post/</guid><description>&lt;p>It&amp;rsquo;s interesting to glimpse into how my blogging workflow has been evolving over
time.&lt;/p>
&lt;p>&lt;a href="https://perrotta.dev/2022/10/do-i-still-remember-how-to-blog/">Previously&lt;/a>,
&lt;a href="https://perrotta.dev/2024/12/just/">previously&lt;/a>.&lt;/p>
&lt;p>It started with &lt;code>hugo new&lt;/code>, then &lt;code>just new&lt;/code> + &lt;code>vim&lt;/code>
(&lt;a href="https://github.com/casey/just">Justfile&lt;/a>), and now I am introducing a subtle
change, inspired by &lt;a href="https://bneil.me/notes/zshrc_alias_for_hugo/">&lt;code>bneil&lt;/code>&lt;/a>.
This post:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% just new &lt;span style="color:#98c379">&amp;#34;hugo: create and edit a post&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It creates this file, and automatically opens it in my &lt;code>$EDITOR&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>---
title: &amp;#34;Hugo create and edit a post&amp;#34;
date: 2025-09-15T12:44:31+02:00
tags:
{list of tags pre-populated}
---
&lt;/code>&lt;/pre>&lt;p>The more I can reduce the friction to blogging&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> the better.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Up to a &lt;a href="https://perrotta.dev/2025/03/friction/">certain extent&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Broot</title><link>https://perrotta.dev/2025/09/broot/</link><pubDate>Mon, 15 Sep 2025 12:36:10 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/broot/</guid><description>&lt;p>&lt;a href="https://github.com/Canop/broot">broot&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A new way to see and navigate directory trees: &lt;a href="https://dystroy.org/broot">https://dystroy.org/broot&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s a mixture of &lt;code>ranger&lt;/code> / &lt;code>mc&lt;/code> (terminal file manager), &lt;code>fzf&lt;/code> (fuzzy file
finder), &lt;code>tree&lt;/code> (list directory trees in the terminal), &lt;code>ls&lt;/code>, &lt;code>find&lt;/code> / &lt;code>fd&lt;/code>,
&lt;code>fpp&lt;/code>, &lt;code>grep&lt;/code> / &lt;code>ack&lt;/code> / &lt;code>rg&lt;/code>, all-in-one. I&amp;rsquo;m starting to occasionally use it in
my daily workflow. Its &lt;a href="https://dystroy.org/broot/">&lt;code>Why?&lt;/code>&lt;/a> page may convince
you to give it a try.&lt;/p>
&lt;p>The upstream documentation is quite decent; as such, I do not intend to
replicate it here. That said, here are a couple of ad-hoc notes.&lt;/p>
&lt;p>&lt;strong>Usage&lt;/strong>: &lt;code>broot {dir}&lt;/code> or simply &lt;code>broot&lt;/code> to open it in the current directory,
as you would with &lt;code>ranger&lt;/code>.&lt;/p>
&lt;p>&lt;code>-c&lt;/code> to &lt;code>open_preview&lt;/code>. I do not know why this is not the default behavior. It
really should be! It displays the file contents of the currently focused file in
the right-side pane. We can make it the default:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hjson" data-lang="hjson">~/.config/broot/conf.hjson:

###############################################################
# Default flags
# You can set up flags you want broot to start with by
# default, for example `default_flags=&amp;#34;-ihp&amp;#34;` if you usually want
# to see hidden and gitignored files and the permissions (then
# if you don&amp;#39;t want the hidden files at a specific launch,
# you can launch broot with `br -H`).
# A popular flag is the `g` one which displays git related info.
#
# default_flags:
default_flags: &amp;#34;-c :open_preview&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Use the up and down arrows to navigate (or Tab / Shift + Tab). Vi-like
keybindings (&lt;code>j&lt;/code> / &lt;code>k&lt;/code>) do not work but that&amp;rsquo;s for a good reason, by design:
there&amp;rsquo;s a permanent command-line bar at the bottom (think of &lt;code>mc&lt;/code>), used to
issue commands to &lt;code>broot&lt;/code> and/or employ file/directory filtering; we need to be
able to type in characters there. This takes some getting used to if you&amp;rsquo;re
coming from &lt;code>ranger&lt;/code>.&lt;/p>
&lt;p>&lt;code>ENTER&lt;/code>, by default, opens the currently focused file in your visual editor
(e.g. VSCode, Zed). I am not a fan of this behavior, I&amp;rsquo;d rather it to use
&lt;code>$EDITOR&lt;/code> (e.g. &lt;code>vim&lt;/code>, &lt;code>emacs&lt;/code>). It&amp;rsquo;s possible to change this behavior, but I
haven&amp;rsquo;t done so yet. There&amp;rsquo;s a workaround: type in &lt;code>&amp;lt;Space&amp;gt;e&amp;lt;Enter&amp;gt;&lt;/code> (or
&lt;code>:e&amp;lt;Enter&amp;gt;&lt;/code> like in &lt;code>vim&lt;/code>). This issues the &lt;code>edit&lt;/code> command, which opens
&lt;code>$EDITOR&lt;/code>. I wish &lt;code>ENTER&lt;/code> would so do out-of-the-box!&lt;/p>
&lt;p>The main reason to use &lt;code>broot&lt;/code> is due to its excellent and versatile
&lt;a href="https://dystroy.org/broot/input/">filtering&lt;/a> capabilities, which allows
composite searches as well. Here&amp;rsquo;s a practical example:&lt;/p>
&lt;pre tabindex="0">&lt;code>ep/pgbouncer\/values.yaml/&amp;amp;c/default
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;it searches for all files named &lt;code>pgbouncer/values.yaml&lt;/code> (within or nested in
PWD) whose file contents include the string &lt;code>default&lt;/code>. Then it displays a
dynamic list of matches (including previews!) which you can manipulate
individually or in batches. For example, you could easily open each of them in
&lt;code>$EDITOR&lt;/code>, or delete all of them, or run &lt;code>sed -i&lt;/code> in all of them.&lt;/p>
&lt;p>Explanation of the search modes (there are even more):&lt;/p>
&lt;ul>
&lt;li>&lt;code>ep/&lt;/code>: exact string search on subpath (full path) – like &lt;code>fd -p&lt;/code>&lt;/li>
&lt;li>&lt;code>c/&lt;/code>: exact string search on file content – like &lt;code>grep&lt;/code> or &lt;code>ack&lt;/code> or &lt;code>rg&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>:gs&lt;/code> opens an interactive tree with files in &lt;code>git status&lt;/code> – comparable to &lt;code>git status | fpp -ko&lt;/code>.&lt;/p>
&lt;p>We can run &lt;code>sed -i&lt;/code> in all matches. First, define a verb (action) for it:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hjson" data-lang="hjson">~/.config/broot/verbs.hjson:

###############################################################
# This file contains the verb definitions for broot
#
# Some verbs here are examples and not enabled by default: you
# need to uncomment them if you want to use them.
#
# Documentation at https://dystroy.org/broot/verbs/
###############################################################
verbs: [
 [...]
 {
 invocation: &amp;#34;sed {arg}&amp;#34;
 shortcut: sed
 apply_to: text_file
 execution: &amp;#34;gsed -i -e {arg} {file}&amp;#34;
 leave_broot: false
 }
 [...]
]
&lt;/code>&lt;/pre>&lt;p>Then, after running a search, type in &lt;code>&amp;lt;Space&amp;gt;sed&amp;lt;Space&amp;gt;'s/foo/bar/g'&lt;/code>.&lt;/p>
&lt;p>Again, why is this not a built-in verb?&lt;/p>
&lt;p>All things considered, I think &lt;code>broot&lt;/code> needs some polishing in order to become
easy(ier) to use. It is a powerful tool, but its out-of-the-box devex experience
leaves a lot to be desired.&lt;/p>
&lt;p>Another example: &lt;a href="https://github.com/Canop/broot/issues/453">#453&lt;/a>: there&amp;rsquo;s no
filter history.&lt;/p></description></item><item><title>Hello?!</title><link>https://perrotta.dev/2025/09/hello/</link><pubDate>Sun, 07 Sep 2025 13:44:13 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/hello/</guid><description>&lt;p>Whenever the LLM gets stuck:&lt;/p>
&lt;ol>
&lt;li>Press ESC&lt;/li>
&lt;li>Prompt: &lt;code>hello?&lt;/code>&lt;/li>
&lt;li>Fin&lt;/li>
&lt;/ol></description></item><item><title>Career Leverage as a Developer</title><link>https://perrotta.dev/2025/09/career-leverage-as-a-developer/</link><pubDate>Sun, 07 Sep 2025 13:33:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/career-leverage-as-a-developer/</guid><description>&lt;p>Dan Moore, &lt;a href="https://www.mooreds.com/wordpress/archives/3712">Career Leverage as a Developer&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>But one insight that came out of the discussion is that this applies to your
career as well. If you focus on undifferentiated scary problems, then you have
a lucrative career ahead of you, because the problem is important to solve
(because it is scary) and transfers between companies (because it is
undifferentiated). If you focus on differentiated problems, such as a scary
area of the code base that is unique to the project, you&amp;rsquo;ll be tied to a
particular company. If you focus on safe problems, you can switch between
companies but you&amp;rsquo;re unlikely to make a lot of money, because the problems you
are working on won&amp;rsquo;t be that important.&lt;/p>
&lt;/blockquote>
&lt;p>Big Tech is full of &amp;ldquo;differentiated problems&amp;rdquo;. See &lt;a href="https://en.wikipedia.org/wiki/Golden_handcuffs">golden handcuffs&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;blockquote>
&lt;p>It also helps you avoid being a cog. Every employer wants fungible employees,
but every employee should resist being fungible. Don&amp;rsquo;t be &amp;ldquo;Java Engineer 2&amp;rdquo; or
&amp;ldquo;React Developer with 3 years experience.&amp;rdquo; Be someone people want to work
with. The goal is for people to say, &amp;ldquo;I want to work with {your name},&amp;rdquo; not &amp;ldquo;I
want to work with any React developer.&amp;rdquo;&lt;/p>
&lt;/blockquote>
&lt;p>I am blessed enough to have been conditioned towards this path in my entire
life, though it&amp;rsquo;s fairly biased of myself to say so :-)&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&amp;ldquo;Often employees feel the urge to remain within the company they&amp;rsquo;ve been
working with, even though it may not seem like the smartest choice,
objectively, because of tradition, relationships or a simple feeling of
belonging&amp;rdquo;.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>LeetCoding</title><link>https://perrotta.dev/2025/09/leetcoding/</link><pubDate>Sat, 06 Sep 2025 02:02:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/leetcoding/</guid><description>&lt;p>If you haven&amp;rsquo;t noticed, I have a new &lt;a href="https://perrotta.dev/tags/coding/">coding&lt;/a>
section on this site.&lt;/p>
&lt;p>For the sake of not &amp;ldquo;polluting&amp;rdquo; the main RSS feed, coding posts do not make it
to &lt;code>/index.xml&lt;/code>. Instead, they have their own
&lt;a href="https://perrotta.dev/tags/coding/index.xml">coding&lt;/a> feed.&lt;/p>
&lt;p>In the future I will move &lt;a href="https://perrotta.dev/tags/aoc/">my&lt;/a> &lt;a href="https://adventofcode.com/">advent of
code&lt;/a> posts there as well.&lt;/p>
&lt;p>Problem sets:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/">&lt;strong>LeetCode&lt;/strong>&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problem-list/array/">Arrays&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/studyplan/top-interview-150/">Top 150&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.hackerrank.com/">HackerRank&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>