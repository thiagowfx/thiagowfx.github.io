<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet type="text/xsl" href="https://perrotta.dev//rss.xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Bestof on ¬ just serendipity 🍀</title><link>https://perrotta.dev/tags/bestof/</link><description>Recent content in Bestof on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sat, 18 Oct 2025 12:49:20 +0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/bestof/index.xml" rel="self" type="application/rss+xml"/><item><title>The Apple Store</title><link>https://perrotta.dev/2025/10/the-apple-store/</link><pubDate>Sat, 18 Oct 2025 12:49:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/the-apple-store/</guid><description>&lt;p>After owning an iPhone 14 Pro for more than two and a half years, its maximum
battery capacity degraded to &lt;strong>~76%&lt;/strong>. It is not a terrible number, but the
general recommendation is to take action whenever it goes below &lt;strong>80%&lt;/strong>, which
happened a couple of months ago.&lt;/p>
&lt;p>In this state I am forced to carry a portable charger wherever I go if I want
to keep my peace of mind and eliminate &amp;ldquo;battery anxiety&amp;rdquo;.&lt;/p>
&lt;p>The natural course of action for many at this point would be to simply buy the
newest and shiniest iPhone.&lt;/p>
&lt;p>Yet, I love to fight against &lt;a href="https://en.wikipedia.org/wiki/Planned_obsolescence">planned
obsolescence&lt;/a>, and will
happily do what I can, even if it yields a bit of friction.&lt;/p>
&lt;p>One of my favorite aspects of being an iPhone user is the ability to get superb
support from Apple&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. In particular, they have a &lt;a href="https://support.apple.com/iphone/repair/battery-replacement">battery
replacement&lt;/a>
program.&lt;/p>
&lt;p>All you have to do is:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://getsupport.apple.com/?caller=sfaq&amp;amp;SG=SG003&amp;amp;category_id=SC0999&amp;amp;symptom_id=99911">schedule an appointment&lt;/a> in the Genius Bar,&lt;/li>
&lt;li>bring your iPhone there,&lt;/li>
&lt;li>and then retrieve it a couple of hours later&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> (&amp;ldquo;same day service&amp;rdquo;).&lt;/li>
&lt;/ul>
&lt;p>Is it cost effective? Hell yes. I paid about 10% of the original purchase
price, and it&amp;rsquo;s like I just got a brand new iPhone.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>But only if I am &lt;del>privileged&lt;/del> lucky enough to live in a city that has
one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In my case, 3 hours.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Distributing my own scripts via homebrew</title><link>https://perrotta.dev/2025/10/distributing-my-own-scripts-via-homebrew/</link><pubDate>Fri, 17 Oct 2025 16:38:40 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/distributing-my-own-scripts-via-homebrew/</guid><description>&lt;p>Thanks &lt;a href="https://justin.searls.co/posts/how-to-distribute-your-own-scripts-via-homebrew/">Justin
Searls&lt;/a>
for the idea:&lt;/p>
&lt;blockquote>
&lt;p>I use Homebrew all the time. Whenever I see a new CLI that offers an npm or uv
install path alongside a brew one, I choose brew every single time.&lt;/p>
&lt;/blockquote>
&lt;p>Me too.&lt;/p>
&lt;blockquote>
&lt;p>And yet, when it comes time to publish a CLI of my own, I usually just ship it
as a Ruby gem or an npm package, because I had (and have!) no fucking clue how
Homebrew works. I&amp;rsquo;m not enough of a neckbeard to peer behind the curtain as
soon as root directories like /usr and /opt are involved, so I never bothered
before today.&lt;/p>
&lt;/blockquote>
&lt;p>I understand how package managers work, and I&amp;rsquo;m even a package maintainer in
Alpine Linux and Arch Linux, but until now I never bothered to package my own
projects for others to consume.&lt;/p>
&lt;p>Previously I talked about my new &lt;a href="https://perrotta.dev/2025/09/pancake-potpourri-scripts/">pancake&lt;/a> repository. It consists of miscellaneous self-contained executables. As such, it is a great candidate for packaging.&lt;/p>
&lt;p>I won&amp;rsquo;t submit it to upstream homebrew because it is overly specific, but that
doesn&amp;rsquo;t prevent me from packaging it in a &lt;a href="https://docs.brew.sh/Taps">standalone
repository&lt;/a>.&lt;/p>
&lt;p>In order to do so, I simply created a &lt;code>pancake.rb&lt;/code> &lt;a href="https://github.com/thiagowfx/pancake/blob/1a58c53e3984b0a0b34b750a73dab793aff5ebe5/Formula/pancake.rb">Formula&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">class&lt;/span> &lt;span style="color:#e5c07b">Pancake&lt;/span> &lt;span style="color:#56b6c2">&amp;lt;&lt;/span> &lt;span style="color:#e06c75">Formula&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">desc&lt;/span> &lt;span style="color:#98c379">&amp;#34;A collection of useful shell scripts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">homepage&lt;/span> &lt;span style="color:#98c379">&amp;#34;https://github.com/thiagowfx/pancake&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">head&lt;/span> &lt;span style="color:#98c379">&amp;#34;https://github.com/thiagowfx/pancake.git&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">def&lt;/span> &lt;span style="color:#61afef;font-weight:bold">install&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_china_mfa/aws_china_mfa.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;op_login_all/op_login_all.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;pritunl_login/pritunl_login.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">.&lt;/span>&lt;span style="color:#e06c75">install&lt;/span> &lt;span style="color:#98c379">&amp;#34;sd_world/sd_world.sh&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">=&amp;gt;&lt;/span> &lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">test&lt;/span> &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Basic test to ensure the scripts are installed and executable.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;aws_china_mfa&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;op_login_all&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;pritunl_login&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:executable?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">assert_predicate&lt;/span> &lt;span style="color:#e06c75">bin&lt;/span>&lt;span style="color:#56b6c2">/&lt;/span>&lt;span style="color:#98c379">&amp;#34;sd_world&amp;#34;&lt;/span>, &lt;span style="color:#98c379">:exist?&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To install it, first tap the repository&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew tap thiagowfx/pancake https://github.com/thiagowfx/pancake.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then install it, from &lt;code>HEAD&lt;/code> because it is not currently versioned:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install --HEAD pancake
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>List all package contents:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew ls pancake
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/op_login_all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/pritunl_login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/bin/sd_world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/pancake/HEAD-1a58c53/sbom.spdx.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>There&amp;rsquo;s no need to fiddle with &lt;code>$PATH&lt;/code>, as this is already handled by homebrew:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% which aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% ls -al /opt/homebrew/bin/aws_china_mfa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lrwxr-xr-x@ - thiago.perrotta &lt;span style="color:#d19a66">13&lt;/span> Oct 14:43 /opt/homebrew/bin/aws_china_mfa -&amp;gt; ../Cellar/pancake/HEAD-1a58c53/bin/aws_china_mfa*
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>If this idea sticks, I intend to create a dedicated
&lt;code>thiagowfx/homebrew-pancake&lt;/code> repo, so that you can tap it with &lt;code>brew tap thiagowfx/pancake&lt;/code>, without the need of specifying the full repository URL
as per
&lt;a href="https://docs.brew.sh/Taps#repository-naming-conventions-and-assumptions">docs&lt;/a>.
For now though, the formula is hosted in the same repository as the
executables.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Claude Code: adding my first MCP server</title><link>https://perrotta.dev/2025/10/claude-code-adding-my-first-mcp-server/</link><pubDate>Wed, 08 Oct 2025 00:31:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-adding-my-first-mcp-server/</guid><description>&lt;p>Lovely readers, I promise this is not turning into an AI blog&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. I am merely
documenting my baby steps.&lt;/p>
&lt;p>I use JIRA all the time. It&amp;rsquo;s our &lt;del>bug&lt;/del>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> issue tracker of choice.&lt;/p>
&lt;p>And, now that I am slowly incorporating Claude Code in my daily workflow for git
commits and pull requests, it only feels natural to connect JIRA to it, even if
only for the sake of retrieving information from existing tickets and/or adding
context to PRs.&lt;/p>
&lt;p>So here we go.&lt;/p>
&lt;p>&lt;a href="https://docs.claude.com/en/docs/claude-code/mcp">From the Anthropic documentation&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Atlassian&lt;/strong>&lt;/p>
&lt;p>Manage your Jira tickets and Confluence docs&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> &amp;lt;gitops project&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% claude mcp add --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added SSE MCP server atlassian with URL: https://mcp.atlassian.com/v1/sse to &lt;span style="color:#e5c07b">local&lt;/span> config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File modified: /Users/thiago.perrotta/.claude.json &lt;span style="color:#56b6c2">[&lt;/span>project: /Users/thiago.perrotta/gitops&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.claude.com/en/docs/claude-code/mcp#option-2%3A-add-a-remote-sse-server">SSE&lt;/a> stands for &amp;ldquo;Server-Side Events&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>SSE (Server-Sent Events) servers provide real-time streaming connections. Many
cloud services use this for live updates.&lt;/p>
&lt;/blockquote>
&lt;p>That command is idempotent:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp add --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MCP server atlassian already exists in &lt;span style="color:#e5c07b">local&lt;/span> config
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What if I want to have it available for all projects? Use &lt;code>--scope user&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp add --scope user --transport sse atlassian https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added SSE MCP server atlassian with URL: https://mcp.atlassian.com/v1/sse to user config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>File modified: /Users/thiago.perrotta/.claude.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The modification to &lt;code>~/.claude.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [...]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;mcpServers&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;atlassian&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sse&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;url&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;https://mcp.atlassian.com/v1/sse&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>So far so good. However no auth config was supplied yet.&lt;/p>
&lt;pre tabindex="0">&lt;code>% claude
&amp;gt; /mcp
Manage MCP servers
❯ 1. atlassian △ disconnected · Enter to login
&lt;/code>&lt;/pre>&lt;p>After pressing Enter and authenticating against our JIRA instance in a web
browser:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude mcp list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking MCP server health...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>atlassian: https://mcp.atlassian.com/v1/sse &lt;span style="color:#56b6c2">(&lt;/span>SSE&lt;span style="color:#56b6c2">)&lt;/span> - ✓ Connected
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% claude mcp get atlassian
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>atlassian:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Scope: User config &lt;span style="color:#56b6c2">(&lt;/span>available in all your projects&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Status: ✓ Connected
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Type: sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> URL: https://mcp.atlassian.com/v1/sse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To remove this server, run: claude mcp remove &lt;span style="color:#98c379">&amp;#34;atlassian&amp;#34;&lt;/span> -s user
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>&amp;gt; /mcp
Atlassian MCP Server

Status: ✔ connected ✔ authenticated
URL: https://mcp.atlassian.com/v1/sse
Config location: /Users/thiago.perrotta/.claude.json [project: /Users/thiago.perrotta/gitops]
Capabilities: tools
Tools: 27 tools

❯ 1. View tools
 2. Re-authenticate
 3. Clear authentication
 4. Reconnect
 5. Disable
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>Tools for atlassian (27 tools)

❯ 1. Get current user information read-only
 2. List accessible resources read-only
 3. List Confluence spaces read-only
 4. Retrieve Confluence page read-only
↓ 5. List space pages read-only
&lt;/code>&lt;/pre>&lt;p>Let&amp;rsquo;s say I want to call the &amp;ldquo;Get current user information&amp;rdquo; tool.&lt;/p>
&lt;pre tabindex="0">&lt;code>Get current user information (atlassian) [read-only]

Tool name: atlassianUserInfo
Full name: mcp__atlassian__atlassianUserInfo

Description:
Get current user info from Atlassian
&lt;/code>&lt;/pre>&lt;p>Just describe it in natural language:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;current user in JIRA&amp;rdquo;&lt;/li>
&lt;li>&lt;strong>Claude&lt;/strong>:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>&amp;gt; current user in JIRA
 ⎿ {
 &amp;#34;account_id&amp;#34;: &amp;#34;{redacted}&amp;#34;,
 &amp;#34;email&amp;#34;: &amp;#34;{redacted}&amp;#34;,
 … +22 lines (ctrl+o to expand)

⏺ Thiago Perrotta
 - Email: {redacted}
 - Account ID: {redacted}
 - Role: {redacted}
 - Department: {redacted}
 - Location: {redacted}
&lt;/code>&lt;/pre>&lt;p>Then I tried basic CRUD operations in natural language:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;create an issue&amp;rdquo; - create: followed by further prompts with issue details ✅&lt;/li>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;transition the issue to won&amp;rsquo;t do&amp;rdquo; – update / delete ✅&lt;/li>
&lt;li>&lt;strong>Prompt&lt;/strong>: &amp;ldquo;find an issue related to foo deployment in cluster bar&amp;rdquo;) – read ✅&lt;/li>
&lt;/ul>
&lt;p>Everything worked successfully.&lt;/p>
&lt;p>I also tried:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Prompt&lt;/strong> (plan mode on, thinking enabled): Propose a way to handle https://{corp}.atlassian.net/browse/INFRA-12528.&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>⏺ I&amp;rsquo;ll fetch the details of the Jira issue to understand what needs to be handled.&lt;/p>
&lt;/blockquote>
&lt;p>I feel this will be quite useful from now on!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>For now?!?&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I blame &lt;em>Google&lt;/em>, the corporation, for getting me accustomed to saying
&amp;ldquo;file a bug&amp;rdquo; and &amp;ldquo;bug tracker&amp;rdquo;. Not every ticket is a bug. Atlassian is
trying to shovel the &amp;ldquo;work item&amp;rdquo; term onto us, but &amp;ldquo;issue&amp;rdquo; is the
appropriate concept.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>claude code: custom commands</title><link>https://perrotta.dev/2025/10/claude-code-custom-commands/</link><pubDate>Mon, 06 Oct 2025 17:31:30 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-custom-commands/</guid><description>&lt;p>&lt;a href="https://www.claude.com/product/claude-code">Claude Code&lt;/a> supports &lt;a href="https://docs.claude.com/en/docs/claude-code/slash-commands#custom-slash-commands">custom commands&lt;/a>.&lt;/p>
&lt;p>The precise term is &amp;ldquo;custom slash commands&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Custom slash commands allow you to define frequently-used prompts as Markdown
files that Claude Code can execute. Commands are organized by scope
(project-specific or personal) and support namespacing through directory
structures.&lt;/p>
&lt;/blockquote>
&lt;p>I created my first custom slash command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.claude/commands/send-pr.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You are a world-class software developer who can write concise and descriptive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pull requests &lt;span style="color:#56b6c2">(&lt;/span>PRs&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sources of inspiration include:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Daniel Stenberg &lt;span style="color:#56b6c2">(&lt;/span>curl&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Junio Hamano &lt;span style="color:#56b6c2">(&lt;/span>git&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- Linus Torvalds &lt;span style="color:#56b6c2">(&lt;/span>linux&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Send out a PR&lt;span style="color:#56b6c2">[&lt;/span>1&lt;span style="color:#56b6c2">]&lt;/span> corresponding to the current branch.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>If there&lt;span style="color:#98c379">&amp;#39;s a .github/PULL_REQUEST_TEMPLATE.md file, use it as template.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">If the current branch is &amp;#39;&lt;/span>main&lt;span style="color:#98c379">&amp;#39; or &amp;#39;&lt;/span>master&lt;span style="color:#98c379">&amp;#39;, create a local branch first.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">The branch name should be prefixed by my github username[2] and a slash.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">[1]: &amp;#39;&lt;/span>gh pr create&lt;span style="color:#98c379">&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">[2]: &amp;#39;&lt;/span>gh api user --jq .login&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be &amp;ldquo;executed&amp;rdquo; with &lt;code>/send-pr&lt;/code>.&lt;/p>
&lt;p>&amp;ldquo;Execution&amp;rdquo; is merely &amp;ldquo;sending the prompt&amp;rdquo;.&lt;/p>
&lt;p>It&amp;rsquo;s akin to a snippet expander. Arguably one could do the same by setting a
&lt;code>:send-pr&lt;/code> snippet on e.g. &lt;a href="https://espanso.org/">Espanso&lt;/a>.&lt;/p>
&lt;p>Perhaps it is even better, as it would work with all CLI agents – not only
Claude Code. Well, we keep on experimenting.&lt;/p>
&lt;p>Reusable custom slash commands will be shared in my &lt;a href="https://github.com/thiagowfx/.dotfiles/tree/master/claude/.claude/commands">.dotfiles&lt;/a>.&lt;/p></description></item><item><title>zizmor</title><link>https://perrotta.dev/2025/10/zizmor/</link><pubDate>Fri, 03 Oct 2025 12:44:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/zizmor/</guid><description>&lt;p>I originally heard of &lt;a href="https://docs.zizmor.sh/">zizmor&lt;/a> at &lt;a href="https://fosdem.org/2025/">FOSDEM 2025&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>zizmor is a static analysis tool for GitHub Actions. It can find and fix many
common security issues in typical GitHub Actions CI/CD setups.&lt;/p>
&lt;/blockquote>
&lt;p>One month later, I adopted it in the most important repos of our company.&lt;/p>
&lt;p>A few months later, I &lt;a href="https://perrotta.dev/2025/06/alpine-linux-packaging-track-new-software-releases/">added&lt;/a> it to the
Alpine Linux repositories, and am happily
&lt;a href="https://pkgs.alpinelinux.org/packages?name=zizmor">maintaining&lt;/a> it there.&lt;/p>
&lt;p>Now I use it &lt;em>everywhere&lt;/em>, via a git &lt;a href="https://pre-commit.com/">pre-commit&lt;/a> hook:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/woodruffw/zizmor-pre-commit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: b933184438555436e38621f46ceb0c417cbed400 # frozen&lt;/span>: v1.13.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: zizmor
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The project has recently reached a milestone: &lt;a href="https://blog.yossarian.net/2025/09/14/one-year-of-zizmor">it has turned one year
old&lt;/a>. Its adoption,
community and feature set have all significantly increased during that time, in
a good way.&lt;/p>
&lt;p>The goal, impact and spirit of the project are all really great. And I&amp;rsquo;m sure
this is mainly thanks to the initiative and dedication of its author, &lt;a href="https://blog.yossarian.net/">William
Woodruff&lt;/a>.&lt;/p></description></item><item><title>Claude Code: cheatsheet</title><link>https://perrotta.dev/2025/10/claude-code-cheatsheet/</link><pubDate>Wed, 01 Oct 2025 20:03:54 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/claude-code-cheatsheet/</guid><description>&lt;p>A brain dump as of Oct 1st, 2025 of my head, all things &lt;a href="https://www.claude.com/product/claude-code">Claude Code&lt;/a>.&lt;/p>
&lt;h2 id="keyboard-shortcuts">Keyboard shortcuts&lt;/h2>
&lt;ul>
&lt;li>&lt;code>Shift+Tab&lt;/code> to cycle through: &amp;ldquo;default&amp;rdquo; -&amp;gt; &amp;ldquo;⏵⏵ accept edits on&amp;rdquo; -&amp;gt; &amp;ldquo;⏸ plan mode on&amp;rdquo;
&lt;ul>
&lt;li>&amp;ldquo;⏵⏵ Accept edits on&amp;rdquo; is a comfortable mode to be on by default, especially
when paired with git commits as checkpoints.&lt;/li>
&lt;li>A well-curated tool whitelist (c.f. &lt;code>~/.claude/settings.json&lt;/code>) can further
enhance this mode.&lt;/li>
&lt;li>&amp;ldquo;⏵⏵ Accept edits on&amp;rdquo; is not the same as &lt;code>--dangerously-skip-permissions&lt;/code>:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>Bypass all permission checks. Recommended only for sandboxes with no internet access.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;code>Tab&lt;/code> to toggle &amp;ldquo;Thinking on&amp;rdquo; / &amp;ldquo;Thinking off&amp;rdquo;
&lt;ul>
&lt;li>This is a brand new feature in &lt;a href="https://www.anthropic.com/news/enabling-claude-code-to-work-more-autonomously">Claude Code 2.0&lt;/a>, just released this week.
Hence I haven&amp;rsquo;t used it so far. Toggling the plan mode is typically enough
for my needs.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Esc Esc&lt;/code> to clear input / &lt;code>/rewind&lt;/code> to a previous checkpoint
&lt;ul>
&lt;li>I prefer to &amp;ldquo;manually steer / tune&amp;rdquo; the LLM. Learn from past mistakes!&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Ctrl-r&lt;/code> to search previous prompts – similarly to &lt;code>bash&lt;/code> / &lt;code>zsh&lt;/code> shell
history&lt;/li>
&lt;li>&lt;code>!&lt;/code> for shell mode e.g. &lt;code>! ls&lt;/code> or &lt;code>! git commit -a -m &amp;quot;msg&amp;quot;&lt;/code>. Good for
one-offs.
&lt;ul>
&lt;li>Alternatively, simply open a new shell tab / split / window.&lt;/li>
&lt;li>Alternatively, suspend Claude with &lt;code>Ctrl-z&lt;/code>:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Claude Code has been suspended. Run `fg` to bring Claude Code back.
Note: ctrl + z now suspends Claude Code, ctrl + _ undoes input.
[1] + 78756 suspended (signal) claude
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>&lt;code>/&lt;/code> for commands – TAB completion is available.&lt;/li>
&lt;li>&lt;code>@&lt;/code> for file paths e.g. &lt;code>@README.md&lt;/code> or &lt;code>@.env&lt;/code> – TAB completion is supported
&lt;ul>
&lt;li>Use &lt;code>@&lt;/code> to provide targeted context in prompts, for example: &lt;code>Upgrade @main.go to incorporate logging. Follow a pattern similar to @vendor/main.go. Update @README.md afterwards&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>#&lt;/code> to memorize (a.k.a. &amp;ldquo;add to memory&amp;rdquo;)
&lt;ul>
&lt;li>I don&amp;rsquo;t use this shortcut much. Instead, prefer editing &lt;code>CLAUDE.md&lt;/code> directly
for pristine, per-repo settings. This is comparable to having a local, per
git repo &lt;code>.gitignore&lt;/code> versus a &lt;code>~/.gitignore_global&lt;/code> that affects all
repositories.&lt;/li>
&lt;li>Project memory lives in &lt;code>CLAUDE.md&lt;/code>, user memory lives in
&lt;code>~/.claude/CLAUDE.md&lt;/code>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>Ctrl-o&lt;/code> for verbose output&lt;/li>
&lt;li>&lt;code>Ctrl-t&lt;/code> to show TODOs&lt;/li>
&lt;li>&lt;code>Shift+Enter&lt;/code> for newline (&lt;code>\n&lt;/code>); pre-requisite: &lt;code>/terminal-setup&lt;/code>&lt;/li>
&lt;li>Emacs / readline keybindings generally work for text navigation: &lt;code>C-a&lt;/code>, &lt;code>C-e&lt;/code>,
&lt;code>C-b&lt;/code>, &lt;code>C-f&lt;/code>, &lt;code>C-u&lt;/code>, &lt;code>C-p&lt;/code>, &lt;code>C-n&lt;/code>, &lt;code>C-w&lt;/code>. There&amp;rsquo;s also a vim mode that can be
toggled with &lt;code>/vim&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Gripe&lt;/strong>: &lt;code>Ctrl-l&lt;/code> does not clear the screen. And neither does &lt;code>Esc Esc&lt;/code>.
Surely someone has already filed a feature request for this? There&amp;rsquo;s a
&lt;code>/clear&lt;/code> command, but it is meant to clear history and free up context, which
is totally different.&lt;/li>
&lt;li>&lt;code>Ctrl-_&lt;/code> to undo. I prefer &lt;code>C-w&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Gripe&lt;/strong>: It hard-codes mentioning &amp;ldquo;bash&amp;rdquo; in various places, instead of
&amp;ldquo;shell&amp;rdquo;. &lt;code>bash&lt;/code> is not the only POSIX shell out there. Heck, there&amp;rsquo;s even a
&lt;code>/bashes&lt;/code> command to list and manage background tasks.&lt;/li>
&lt;li>&lt;code>Esc&lt;/code> to interrupt (think of &lt;code>C-g&lt;/code> on Emacs).&lt;/li>
&lt;/ul>
&lt;p>Most of the above reference can be pulled up with:&lt;/p>
&lt;ul>
&lt;li>&lt;code>?&lt;/code> for help&lt;/li>
&lt;/ul>
&lt;p>A few handy comments not previously mentioned:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/cost&lt;/code>: show total cost + duration of the current session
&lt;ul>
&lt;li>See also: &lt;a href="https://perrotta.dev/2025/09/claude-ccusage/">ccusage&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>/export&lt;/code>: copy the current conversation to the clipboard, or export it to a
file&lt;/li>
&lt;li>&lt;code>/init&lt;/code>: to bootstrap and scaffold / populate &lt;code>CLAUDE.md&lt;/code>&lt;/li>
&lt;li>&lt;code>/mcp&lt;/code> to manage MCP servers&lt;/li>
&lt;li>&lt;code>/resume&lt;/code>: resume a (previous) conversation.
&lt;ul>
&lt;li>Alternatively, launch &lt;code>claude&lt;/code> with &lt;a href="https://perrotta.dev/2025/09/claude--resume/">&lt;code>--resume&lt;/code>&lt;/a> in the desired CWD.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="settings">Settings&lt;/h2>
&lt;p>My &lt;code>~/.claude/settings.json&lt;/code> at the time of this post:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;env&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;CLAUDE_CODE_ENABLE_TELEMETRY&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;permissions&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;allow&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(ansible-doc:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(command -v:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(fd:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(find:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr diff:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr list:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr review-comment list:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(gh pr view:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(grep:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(hadolint:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(helm template:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(ls:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(rg:*)&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;Bash(yamllint:*)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;statusLine&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;command&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;bash ~/.claude/statusline.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;alwaysThinkingEnabled&amp;#34;&lt;/span>: &lt;span style="color:#e5c07b">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>no telemetry (privacy!)&lt;/li>
&lt;li>allow a couple of often used tools (utilities), especially read-only ones&lt;/li>
&lt;li>add a simple status line; originally scaffolded with &lt;code>/statusline&lt;/code>&lt;/li>
&lt;li>do not always think (it&amp;rsquo;s slow &amp;amp; expensive!)&lt;/li>
&lt;/ul>
&lt;p>&lt;code>settings.json&lt;/code> and &lt;code>statusline.sh&lt;/code> are both in my
&lt;a href="https://github.com/thiagowfx/.dotfiles">dotfiles&lt;/a>.&lt;/p></description></item><item><title>New script: sd-world: perform a full system upgrade</title><link>https://perrotta.dev/2025/10/new-script-sd-world-perform-a-full-system-upgrade/</link><pubDate>Wed, 01 Oct 2025 01:11:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/10/new-script-sd-world-perform-a-full-system-upgrade/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/01/sd-world-perform-a-full-system-upgrade/">Previously&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>Whenever I want to upgrade any one of my systems, I run &lt;code>sd-world&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>Now the script has evolved, being &lt;a href="https://github.com/thiagowfx/pancake/blob/9b2cc8c6df6103d4ab1457e30353fe0711290aa2/sd-world/sd-world.sh">hosted&lt;/a> in &lt;a href="https://github.com/thiagowfx/pancake">pancake&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>it handles interruptions (Ctrl-C) more efficiently (it was my biggest gripe)&lt;/li>
&lt;li>the output is more user-friendly&lt;/li>
&lt;/ul>
&lt;p>Preview:&lt;/p>
&lt;pre tabindex="0">&lt;code>% ./sd_world.sh
Starting system upgrade...

Detected macOS system

Upgrading Homebrew...
==&amp;gt; Updating Homebrew...
Already up-to-date.
==&amp;gt; Upgrading 2 outdated packages:
node@18, python@3.11
==&amp;gt; Upgrading node@18 18.17.0 -&amp;gt; 18.19.0
==&amp;gt; Upgrading python@3.11 3.11.6 -&amp;gt; 3.11.7
✓ Homebrew upgrade completed successfully

Upgrading Mac App Store...
✓ Mac App Store upgrade completed successfully

Upgrading System Updates...
Software Update Tool

Finding available software
No new software available.
✓ System Updates upgrade completed successfully

Upgrading Claude Code...
Checking for updates...
claude-code v0.8.2 → v0.8.3 (latest)
Updated successfully! 🎉
✓ Claude Code upgrade completed successfully

Upgrading myrepos...
mr update: /Users/username/repos/project1
From github.com:user/project1
 abc1234..def5678 main -&amp;gt; origin/main
Updating abc1234..def5678
Fast-forward
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

mr update: finished (1 ok)
✓ myrepos upgrade completed successfully

Upgrade Summary:
Successfully upgraded: 5/5 package managers
All package managers upgraded successfully!
&lt;/code>&lt;/pre></description></item><item><title>pancake: potpourri scripts</title><link>https://perrotta.dev/2025/09/pancake-potpourri-scripts/</link><pubDate>Thu, 25 Sep 2025 13:23:35 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/pancake-potpourri-scripts/</guid><description>&lt;p>I&amp;rsquo;ve been meaning to create a git repository to host a collection of
miscellaneous scripts / binaries that are too big to fit in shell aliases /
functions, or text snippets.&lt;/p>
&lt;p>This started today: &lt;a href="https://github.com/thiagowfx/pancake">https://github.com/thiagowfx/pancake&lt;/a>&lt;/p>
&lt;p>There&amp;rsquo;s no particular reason to call it &amp;ldquo;pancake&amp;rdquo;, just like there&amp;rsquo;s no special
reason to suffix my first name with &amp;ldquo;wfx&amp;rdquo;. Sometimes it is just what it is.&lt;/p>
&lt;p>I am still fleshing out a project structure, it shall become clearer as more
scripts are added over time.&lt;/p>
&lt;p>For now:&lt;/p>
&lt;pre tabindex="0">&lt;code>% z pancake
thiago@MacBook-Pro ~/Workspace/pancake (git)-[master]
% tree
.
├── LICENSE
├── op_login_all
│ ├── op_login_all.sh
│ └── README.md
└── README.md
&lt;/code>&lt;/pre></description></item><item><title>homebrew: command-not-found</title><link>https://perrotta.dev/2025/09/homebrew-command-not-found/</link><pubDate>Tue, 23 Sep 2025 10:14:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/homebrew-command-not-found/</guid><description>&lt;p>As of &lt;a href="https://github.com/Homebrew/homebrew-command-not-found">Sep 22nd, 2025&lt;/a>,
homebrew &lt;em>natively&lt;/em> supports a &amp;ldquo;command-not-found&amp;rdquo; hook.&lt;/p>
&lt;p>The emphasis is on &lt;em>natively&lt;/em>.&lt;/p>
&lt;p>Previously this could be achieved with a tap:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew tap https://github.com/Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>src_files &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>brew --prefix&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">/Library/Taps/homebrew/homebrew-command-not-found/handler.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thus yielding this effect:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ghc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsh: correct &lt;span style="color:#98c379">&amp;#39;ghc&amp;#39;&lt;/span> to &lt;span style="color:#98c379">&amp;#39;gh&amp;#39;&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>nyae&lt;span style="color:#56b6c2">]&lt;/span>? n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The program &lt;span style="color:#98c379">&amp;#39;ghc&amp;#39;&lt;/span> can be found in the following formulae:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.4
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * ghc@9.8
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Try: brew install &amp;lt;selected formula&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The difference today is that there&amp;rsquo;s no need to tap an extra repository anymore
to do so; the hook is henceforth built directly into homebrew&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">hash&lt;/span> brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style="color:#d19a66">1&lt;/span> &lt;span style="color:#56b6c2">&amp;amp;&amp;amp;&lt;/span> src_files &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>brew --repository&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">/Library/Homebrew/command-not-found/handler.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For completeness, untap the command-not-found repository as it is no longer
needed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew doctor
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Please note that these warnings are just used to &lt;span style="color:#e5c07b">help&lt;/span> the Homebrew maintainers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>with debugging &lt;span style="color:#c678dd">if&lt;/span> you file an issue. If everything you use Homebrew &lt;span style="color:#c678dd">for&lt;/span> is
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>working fine: please don&amp;#39;t worry or file an issue; just ignore this. Thanks!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: You have the following deprecated, official taps tapped:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Untap them with &lt;span style="color:#98c379">`&lt;/span>brew untap&lt;span style="color:#98c379">`&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>brew untap Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% Untapping homebrew/command-not-found...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Untapped &lt;span style="color:#56b6c2">(&lt;/span>2,572 files, 87.4MB&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>My dotfiles diff:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>commit f02c9ab2b203a6235414924e7ddb4b8b6ac6ee52 (HEAD -&amp;gt; master)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;{redacted}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Tue Sep 23 10:16:47 2025 +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> brew: command-not-found
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git profile/.profile.d/10-brew.sh profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index 1828f77..97645f0 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ profile/.profile.d/10-brew.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -11,9 +11,8 @@
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> [ -z &amp;#34;$HOMEBREW_PREFIX&amp;#34; ] &amp;amp;&amp;amp; [ -x /opt/homebrew/bin/brew ] &amp;amp;&amp;amp; eval &amp;#34;$(/opt/homebrew/bin/brew shellenv)&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # command-not-found hook
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-# setup: brew tap &amp;#34;homebrew/command-not-found&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-# https://github.com/Homebrew/homebrew-command-not-found
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">-hash brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; src_files &amp;#34;$(brew --prefix)/Library/Taps/homebrew/homebrew-command-not-found/handler.sh&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+# brew --prefix works too
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+hash brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&amp;amp; src_files &amp;#34;$(brew --repository)/Library/Homebrew/command-not-found/handler.sh&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # GNU coreutils
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> path_munge &amp;#34;/opt/homebrew/opt/coreutils/libexec/gnubin&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/13d66a2b80efa02c611a747008124cbbb3ef3a8f/profile/.profilerc#L17">&lt;code>src_files&lt;/code>&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>LaTeX CV</title><link>https://perrotta.dev/2025/09/latex-cv/</link><pubDate>Wed, 17 Sep 2025 13:15:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/latex-cv/</guid><description>&lt;p>For ages I&amp;rsquo;ve been using a resumé crafted in Google Docs. I was never a big fan
of it, but it got the job done&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It was always one of my wildest dreams to rewrite my resumé in LaTeX.&lt;/p>
&lt;p>The main challenge would be to either i) find a decent template or ii) create my
own template. Thanks to &lt;a href="https://www.overleaf.com/">Overleaf&lt;/a>, i) is quite
straightforward:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/software-engineer-resume/gqxmqsvsbdjf">https://www.overleaf.com/latex/templates/software-engineer-resume/gqxmqsvsbdjf&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/faangpath-simple-template/npsfpdqnxmbc">https://www.overleaf.com/latex/templates/faangpath-simple-template/npsfpdqnxmbc&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/swe-resume-template/bznbzdprjfyy">https://www.overleaf.com/latex/templates/swe-resume-template/bznbzdprjfyy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/software-engineering-resume/mcvwcrmddsyw">https://www.overleaf.com/latex/templates/software-engineering-resume/mcvwcrmddsyw&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.overleaf.com/latex/templates/rendercv-engineeringresumes-theme/shwqvsxdgkjy">https://www.overleaf.com/latex/templates/rendercv-engineeringresumes-theme/shwqvsxdgkjy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I could either use overleaf itself, or do everything locally (e.g. with
&lt;code>texlive&lt;/code> + &lt;code>TeXShop.app&lt;/code> in macOS).&lt;/p>
&lt;p>Another possibility is to use &lt;a href="https://typst.app/">Typst&lt;/a>, which is a modern
take for a typesetting engine. Think of writing LaTeX without having to know how
to write LaTeX, using a &lt;a href="https://typst.app/docs/reference/syntax/">markup
language&lt;/a> that heavily resembles
Markdown.&lt;/p>
&lt;p>They even provide a neat web &lt;a href="https://typst.app/play/">playground&lt;/a>, wherein the
rendered document is updated near instantly. It&amp;rsquo;s such a superb user experience!&lt;/p>
&lt;p>And it&amp;rsquo;s &lt;a href="https://typst.app/pricing/">free&lt;/a> and &lt;a href="https://github.com/typst/typst">open
source&lt;/a>! It is capable of rendering multiple
formats: markdown, html, png, pdf. The possibility of using the same source,
with the same looks, for both your printed resumé (PDF) and your website
(markdown, html) is very appealing.&lt;/p>
&lt;p>The &lt;a href="https://rendercv.com/">RenderCV&lt;/a> project builds on top of Typst to build a
turnkey solution to write your CV
&lt;a href="https://github.com/rendercv/rendercv">declaratively&lt;/a>, purely from a
&lt;a href="https://github.com/rendercv/rendercv/blob/main/examples/John_Doe_ClassicTheme_CV.yaml">YAML&lt;/a>
file&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>All these initiatives are great. I have finally had the time to ditch Google
Docs for a fully open source text format.&lt;/p>
&lt;p>Now I am debating whether to embed my new CV into this website.&lt;/p>
&lt;p>Automated scraping is naughty, but an in-context portfolio would be amazing.
Perhaps I could simply put it behind a
&lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/Authentication">password-protected&lt;/a>
page? Or use symmetric cryptography to obfuscate it, with some bits of
JavaScript to decrypt it upon using a pre-shared passphrase key. Of course, both
approaches would be helpful only if I come up with a scheme to share the key with
humans whilst making it hard for bots to decipher it. Perhaps a riddle? If the
friction is too high, humans won&amp;rsquo;t get to fetch it though. We&amp;rsquo;ll see.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>pun intended&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>what&amp;rsquo;s next, the writing of your CV in &lt;a href="https://nixos.org/">Nix&lt;/a> language?&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub stale bot considered harmful</title><link>https://perrotta.dev/2025/09/github-stale-bot-considered-harmful/</link><pubDate>Tue, 16 Sep 2025 23:19:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/github-stale-bot-considered-harmful/</guid><description>&lt;p>&lt;a href="https://drewdevault.com/2021/10/26/stalebot.html">Drew DeVault&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>One of GitHub&amp;rsquo;s &amp;ldquo;recommended&amp;rdquo; marketplace features is the &amp;ldquo;stale&amp;rdquo; bot. The
purpose of this bot is to automatically close GitHub issues after a period of
inactivity, 60 days by default. You have probably encountered it yourself in
the course of your work.&lt;/p>
&lt;p>This is a terrible, horrible, no good, very bad idea.&lt;/p>
&lt;p>I&amp;rsquo;m not sure what motivates maintainers to install this on their repository,
other than the fact that GitHub recommends it to them. Perhaps it&amp;rsquo;s motivated
by a feeling of shame for having a lot of unanswered issues? If so, this might
stem from a misunderstanding of the responsibilities a maintainer has to their
project. You are not obligated to respond to every issue, implement every
feature request, or fix every bug, or even acknowledge them in any way.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://redacted.moe/f/e2f0d39c.png" alt="github-actions stale bot automatically locking an issue">&lt;/p>
&lt;p>I second this. It&amp;rsquo;s not a &amp;ldquo;shame&amp;rdquo; to accumulate issues. Just set expectations
accordingly.&lt;/p>
&lt;p>Lately I&amp;rsquo;ve been encountering various CNCF projects that employ it, and it&amp;rsquo;s
&lt;a href="https://github.com/helm/helm/issues/13192">simply&lt;/a>
&lt;a href="https://github.com/helm/chart-testing/issues/748">awful&lt;/a>.&lt;/p>
&lt;p>I do not have anything else to add; Drew pretty much nails it.&lt;/p></description></item><item><title>Broot</title><link>https://perrotta.dev/2025/09/broot/</link><pubDate>Mon, 15 Sep 2025 12:36:10 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/broot/</guid><description>&lt;p>&lt;a href="https://github.com/Canop/broot">broot&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A new way to see and navigate directory trees: &lt;a href="https://dystroy.org/broot">https://dystroy.org/broot&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s a mixture of &lt;code>ranger&lt;/code> / &lt;code>mc&lt;/code> (terminal file manager), &lt;code>fzf&lt;/code> (fuzzy file
finder), &lt;code>tree&lt;/code> (list directory trees in the terminal), &lt;code>ls&lt;/code>, &lt;code>find&lt;/code> / &lt;code>fd&lt;/code>,
&lt;code>fpp&lt;/code>, &lt;code>grep&lt;/code> / &lt;code>ack&lt;/code> / &lt;code>rg&lt;/code>, all-in-one. I&amp;rsquo;m starting to occasionally use it in
my daily workflow. Its &lt;a href="https://dystroy.org/broot/">&lt;code>Why?&lt;/code>&lt;/a> page may convince
you to give it a try.&lt;/p>
&lt;p>The upstream documentation is quite decent; as such, I do not intend to
replicate it here. That said, here are a couple of ad-hoc notes.&lt;/p>
&lt;p>&lt;strong>Usage&lt;/strong>: &lt;code>broot {dir}&lt;/code> or simply &lt;code>broot&lt;/code> to open it in the current directory,
as you would with &lt;code>ranger&lt;/code>.&lt;/p>
&lt;p>&lt;code>-c&lt;/code> to &lt;code>open_preview&lt;/code>. I do not know why this is not the default behavior. It
really should be! It displays the file contents of the currently focused file in
the right-side pane. We can make it the default:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hjson" data-lang="hjson">~/.config/broot/conf.hjson:

###############################################################
# Default flags
# You can set up flags you want broot to start with by
# default, for example `default_flags=&amp;#34;-ihp&amp;#34;` if you usually want
# to see hidden and gitignored files and the permissions (then
# if you don&amp;#39;t want the hidden files at a specific launch,
# you can launch broot with `br -H`).
# A popular flag is the `g` one which displays git related info.
#
# default_flags:
default_flags: &amp;#34;-c :open_preview&amp;#34;
&lt;/code>&lt;/pre>&lt;p>Use the up and down arrows to navigate (or Tab / Shift + Tab). Vi-like
keybindings (&lt;code>j&lt;/code> / &lt;code>k&lt;/code>) do not work but that&amp;rsquo;s for a good reason, by design:
there&amp;rsquo;s a permanent command-line bar at the bottom (think of &lt;code>mc&lt;/code>), used to
issue commands to &lt;code>broot&lt;/code> and/or employ file/directory filtering; we need to be
able to type in characters there. This takes some getting used to if you&amp;rsquo;re
coming from &lt;code>ranger&lt;/code>.&lt;/p>
&lt;p>&lt;code>ENTER&lt;/code>, by default, opens the currently focused file in your visual editor
(e.g. VSCode, Zed). I am not a fan of this behavior, I&amp;rsquo;d rather it to use
&lt;code>$EDITOR&lt;/code> (e.g. &lt;code>vim&lt;/code>, &lt;code>emacs&lt;/code>). It&amp;rsquo;s possible to change this behavior, but I
haven&amp;rsquo;t done so yet. There&amp;rsquo;s a workaround: type in &lt;code>&amp;lt;Space&amp;gt;e&amp;lt;Enter&amp;gt;&lt;/code> (or
&lt;code>:e&amp;lt;Enter&amp;gt;&lt;/code> like in &lt;code>vim&lt;/code>). This issues the &lt;code>edit&lt;/code> command, which opens
&lt;code>$EDITOR&lt;/code>. I wish &lt;code>ENTER&lt;/code> would so do out-of-the-box!&lt;/p>
&lt;p>The main reason to use &lt;code>broot&lt;/code> is due to its excellent and versatile
&lt;a href="https://dystroy.org/broot/input/">filtering&lt;/a> capabilities, which allows
composite searches as well. Here&amp;rsquo;s a practical example:&lt;/p>
&lt;pre tabindex="0">&lt;code>ep/pgbouncer\/values.yaml/&amp;amp;c/default
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;it searches for all files named &lt;code>pgbouncer/values.yaml&lt;/code> (within or nested in
PWD) whose file contents include the string &lt;code>default&lt;/code>. Then it displays a
dynamic list of matches (including previews!) which you can manipulate
individually or in batches. For example, you could easily open each of them in
&lt;code>$EDITOR&lt;/code>, or delete all of them, or run &lt;code>sed -i&lt;/code> in all of them.&lt;/p>
&lt;p>Explanation of the search modes (there are even more):&lt;/p>
&lt;ul>
&lt;li>&lt;code>ep/&lt;/code>: exact string search on subpath (full path) – like &lt;code>fd -p&lt;/code>&lt;/li>
&lt;li>&lt;code>c/&lt;/code>: exact string search on file content – like &lt;code>grep&lt;/code> or &lt;code>ack&lt;/code> or &lt;code>rg&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;code>:gs&lt;/code> opens an interactive tree with files in &lt;code>git status&lt;/code> – comparable to &lt;code>git status | fpp -ko&lt;/code>.&lt;/p>
&lt;p>We can run &lt;code>sed -i&lt;/code> in all matches. First, define a verb (action) for it:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-hjson" data-lang="hjson">~/.config/broot/verbs.hjson:

###############################################################
# This file contains the verb definitions for broot
#
# Some verbs here are examples and not enabled by default: you
# need to uncomment them if you want to use them.
#
# Documentation at https://dystroy.org/broot/verbs/
###############################################################
verbs: [
 [...]
 {
 invocation: &amp;#34;sed {arg}&amp;#34;
 shortcut: sed
 apply_to: text_file
 execution: &amp;#34;gsed -i -e {arg} {file}&amp;#34;
 leave_broot: false
 }
 [...]
]
&lt;/code>&lt;/pre>&lt;p>Then, after running a search, type in &lt;code>&amp;lt;Space&amp;gt;sed&amp;lt;Space&amp;gt;'s/foo/bar/g'&lt;/code>.&lt;/p>
&lt;p>Again, why is this not a built-in verb?&lt;/p>
&lt;p>All things considered, I think &lt;code>broot&lt;/code> needs some polishing in order to become
easy(ier) to use. It is a powerful tool, but its out-of-the-box devex experience
leaves a lot to be desired.&lt;/p>
&lt;p>Another example: &lt;a href="https://github.com/Canop/broot/issues/453">#453&lt;/a>: there&amp;rsquo;s no
filter history.&lt;/p></description></item><item><title>Booking.com mobile-only rates</title><link>https://perrotta.dev/2025/09/booking.com-mobile-only-rates/</link><pubDate>Thu, 11 Sep 2025 11:35:39 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/booking.com-mobile-only-rates/</guid><description>&lt;p>When looking for accommodation deals on &lt;a href="https://booking.com">Booking.com&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, you
may or may not notice that there are some &lt;a href="https://partner.booking.com/en-gb/solutions/mobile-rates">mobile-only
rates&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Over half of all bookings made on our site come through a mobile device. By
activating mobile rates at your property, you can tap into this valuable and
expanding traveller segment.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>All you have to do to capitalise on mobile rate benefits is to offer an
exclusive discount of 10% or higher for those booking via mobile. Once you&amp;rsquo;ve
done this, a special badge will appear next to your property in the search
results and on your property page. This helps increase your visibility, and
can improve your conversion rate for mobile bookers.&lt;/p>
&lt;/blockquote>
&lt;p>It can be quite inconvenient to grab your phone (or tablet) just for the sake of
doing a couple of inquiries, especially when planning a multi-city trip.&lt;/p>
&lt;p>It turns out there&amp;rsquo;s no need to do so. The following trick works, astonishingly:&lt;/p>
&lt;ul>
&lt;li>use your computer web browser as usual to initiate a search&lt;/li>
&lt;li>open the browser devtools pane; all major browsers have one these days&lt;/li>
&lt;li>toggle mobile mode in it&lt;/li>
&lt;/ul>
&lt;p>Example in Google Chrome / Chromium on macOS: press &lt;code>Cmd + Option + J&lt;/code> followed
by &lt;code>Cmd + Shift + M&lt;/code>.&lt;/p>
&lt;p>You should then be able to tap into &lt;a href="https://en.wikipedia.org/wiki/Dark_pattern">mobile-only
deals&lt;/a> from your computer. Enjoy!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Nonetheless, it&amp;rsquo;s still typically better to book accommodations &lt;em>directly&lt;/em>
from the property listings. Cut the middle men!&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>LeetCoding</title><link>https://perrotta.dev/2025/09/leetcoding/</link><pubDate>Sat, 06 Sep 2025 02:02:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/09/leetcoding/</guid><description>&lt;p>If you haven&amp;rsquo;t noticed, I have a new &lt;a href="https://perrotta.dev/tags/coding/">coding&lt;/a>
section on this site.&lt;/p>
&lt;p>For the sake of not &amp;ldquo;polluting&amp;rdquo; the main RSS feed, coding posts do not make it
to &lt;code>/index.xml&lt;/code>. Instead, they have their own
&lt;a href="https://perrotta.dev/tags/coding/index.xml">coding&lt;/a> feed.&lt;/p>
&lt;p>In the future I will move &lt;a href="https://perrotta.dev/tags/aoc/">my&lt;/a> &lt;a href="https://adventofcode.com/">advent of
code&lt;/a> posts there as well.&lt;/p>
&lt;p>Problem sets:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/">&lt;strong>LeetCode&lt;/strong>&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://leetcode.com/problem-list/array/">Arrays&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://leetcode.com/studyplan/top-interview-150/">Top 150&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://www.hackerrank.com/">HackerRank&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>'It's never a good time'</title><link>https://perrotta.dev/2025/08/its-never-a-good-time/</link><pubDate>Fri, 29 Aug 2025 11:55:44 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/its-never-a-good-time/</guid><description>&lt;p>When is the best time&amp;hellip;&lt;/p>
&lt;ul>
&lt;li>to move countries?&lt;/li>
&lt;li>to have a baby?&lt;/li>
&lt;li>to switch jobs?&lt;/li>
&lt;li>to find a new apartment?&lt;/li>
&lt;li>to start a new hobby?&lt;/li>
&lt;li>to try out a new sport?&lt;/li>
&lt;li>to get promoted?&lt;/li>
&lt;li>to call your loved ones?&lt;/li>
&lt;li>to catch up with a long-time friend?&lt;/li>
&lt;li>to travel?&lt;/li>
&lt;li>to bootstrap a company?&lt;/li>
&lt;li>to join an open source community?&lt;/li>
&lt;li>to attend a beloved conference?&lt;/li>
&lt;li>to pray?&lt;/li>
&lt;li>to smile?&lt;/li>
&lt;li>to delete your social media accounts?&lt;/li>
&lt;li>to declutter and tidy up?&lt;/li>
&lt;li>to get that new haircut?&lt;/li>
&lt;/ul>
&lt;p>It turns out, &lt;a href="https://www.goodreads.com/book/show/58784475-tomorrow-and-tomorrow-and-tomorrow">it&amp;rsquo;s never a good
time&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s always something happening in the world.&lt;/p>
&lt;p>There&amp;rsquo;s always an inconvenience.&lt;/p>
&lt;p>An excuse.&lt;/p>
&lt;p>An obstacle.&lt;/p>
&lt;p>An inertia field exerting its effect in the entire environment.&lt;/p>
&lt;p>When is a good time?&lt;/p>
&lt;p>If you wait for it for too long, suddenly it may end up being too late.&lt;/p>
&lt;p>&lt;a href="https://www.youtube.com/watch?v=XJIgHWnkcnA">The future starts with you&lt;/a>.&lt;/p></description></item><item><title>YAML: JSON patch: test</title><link>https://perrotta.dev/2025/08/yaml-json-patch-test/</link><pubDate>Fri, 22 Aug 2025 16:49:58 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/yaml-json-patch-test/</guid><description>&lt;p>&lt;a href="https://datatracker.ietf.org/doc/html/rfc6902">RFC 6902&lt;/a>, JavaScript Object Notation (JSON) Patch:&lt;/p>
&lt;blockquote>
&lt;p>JSON Patch defines a JSON document structure for expressing a sequence of
operations to apply to a JavaScript Object Notation (JSON) document; it is
suitable for use with the HTTP PATCH method. The &amp;ldquo;application/json-patch+json&amp;rdquo;
media type is used to identify such patch documents.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://jsonpatch.me/">jsonpatch.me&lt;/a> has a sandbox to play with it.&lt;/p>
&lt;h2 id="example">Example&lt;/h2>
&lt;p>JSON:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Hello World&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;from&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Unknown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Patch (also a JSON!):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e06c75">&amp;#34;op&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;replace&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;/message&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">&amp;#34;value&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Patching JSON is fun&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e06c75">&amp;#34;op&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;add&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;/with&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">&amp;#34;value&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;jsonpatch.me&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#e06c75">&amp;#34;op&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;remove&amp;#34;&lt;/span>, &lt;span style="color:#e06c75">&amp;#34;path&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;/from&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Result:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Patching JSON is fun&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;with&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;jsonpatch.me&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="yaml">YAML&lt;/h2>
&lt;p>It&amp;rsquo;s also possible to use JSON Patch with YAML, because &lt;a href="https://yaml.org/spec/1.2-old/spec.html#id2759572">YAML is a superset of
JSON&lt;/a>:&lt;/p>
&lt;p>YAML:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">message&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Hello World&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">from&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Unknown&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The same JSON patch as before yields this result:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">message&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Patching JSON is fun&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">with&lt;/span>: &lt;span style="color:#98c379">&amp;#34;jsonpatch.me&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We could have expressed the patch in YAML form if we wanted to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e06c75">op&lt;/span>: replace
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span>: /message
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>: Patching JSON is fun
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e06c75">op&lt;/span>: add
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span>: /with
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>: jsonpatch.me
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e06c75">op&lt;/span>: remove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span>: /from
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="tests">Tests?&lt;/h2>
&lt;p>It&amp;rsquo;s intuitive to understand the basic JSON patch operations:&lt;/p>
&lt;ul>
&lt;li>add&lt;/li>
&lt;li>remove&lt;/li>
&lt;li>replace&lt;/li>
&lt;li>move&lt;/li>
&lt;li>copy&lt;/li>
&lt;/ul>
&lt;p>What comes off as surprising is that there&amp;rsquo;s also a
&lt;a href="https://datatracker.ietf.org/doc/html/rfc6902#section-4.6">&lt;em>test&lt;/em>&lt;/a> operation.&lt;/p>
&lt;p>At this point I would recommend the reader to look at the spec, it&amp;rsquo;s quite
readable.&lt;/p>
&lt;p>Here is an example of how I typically use &lt;em>test&lt;/em>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e06c75">op&lt;/span>: test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span>: /spec/syncPolicy/syncOptions/3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>: ServerSideApply=true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#e06c75">op&lt;/span>: remove
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span>: /spec/syncPolicy/syncOptions/3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Before &lt;a href="https://datatracker.ietf.org/doc/html/rfc6902#appendix-A.4">removing an array
element&lt;/a> (which must
be done by index), check that we&amp;rsquo;re removing the appropriate one.&lt;/p>
&lt;p>Why? Because it is error-prone not to do so. If someone reorders the array for
some reason, we would end up deleting the incorrect array element! Do you want
to be the one writing up the postmortem?&lt;/p></description></item><item><title>Kubernetes: list all ImagePullBackOff container images</title><link>https://perrotta.dev/2025/08/kubernetes-list-all-imagepullbackoff-container-images/</link><pubDate>Thu, 21 Aug 2025 13:34:27 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/kubernetes-list-all-imagepullbackoff-container-images/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong> Upgrade the
&lt;a href="https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-prometheus-stack">&lt;code>kube-prometheus-stack&lt;/code>&lt;/a>
helm chart in &lt;a href="https://portal.azure.cn/">Azure China&lt;/a> to the latest version.
&lt;em>Side effect&lt;/em>: Many container images are now missing from our internal
&lt;a href="https://azure.microsoft.com/en-us/products/container-registry">ACR&lt;/a> (Azure
Container Registry). They need to be synced with &lt;a href="https://github.com/containers/skopeo">&lt;code>skopeo&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Which images need to be synced? Use the command below, it is quite readable&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl get pods --all-namespaces -o json | jq -r &lt;span style="color:#98c379">&amp;#39;.items[] | select(any(.status.containerStatuses[]; .state.waiting.reason == &amp;#34;ImagePullBackOff&amp;#34;)) | .metadata.namespace + &amp;#34;/&amp;#34; + .metadata.name + &amp;#34;\t&amp;#34; + ( [.status.containerStatuses[] | select(.state.waiting.reason == &amp;#34;ImagePullBackOff&amp;#34;).image] | join(&amp;#34;, &amp;#34;) )&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sample run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ubuntu@universe:~ $ kubectl get pods --all-namespaces -o json | jq -r &lt;span style="color:#98c379">&amp;#39;.items[]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> | select(any(.status.containerStatuses[]; .state.waiting.reason == &amp;#34;ImagePullBackOff&amp;#34;))
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> | .metadata.namespace + &amp;#34;/&amp;#34; + .metadata.name + &amp;#34;\t&amp;#34; +
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> ( [.status.containerStatuses[] | select(.state.waiting.reason == &amp;#34;ImagePullBackOff&amp;#34;).image] | join(&amp;#34;, &amp;#34;) )&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitoring/clustermon-kube-prometheus-operator-67c8b6c87c-w72km &lt;span style="color:#56b6c2">{&lt;/span>my-registry-name&lt;span style="color:#56b6c2">}&lt;/span>.azurecr.cn/quay.io/prometheus-operator/prometheus-operator:v0.83.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>monitoring/clustermon-prometheus-node-exporter-v7bpt &lt;span style="color:#56b6c2">{&lt;/span>my-registry-name&lt;span style="color:#56b6c2">}&lt;/span>.azurecr.cn/quay.io/prometheus/node-exporter:v1.9.1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>How to &lt;code>skopeo&lt;/code>? First, log in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> -n &lt;span style="color:#98c379">&amp;#34;{password}&amp;#34;&lt;/span> | skopeo login &lt;span style="color:#56b6c2">{&lt;/span>my-registry-name&lt;span style="color:#56b6c2">}&lt;/span>.azurecr.cn --password-stdin --username &lt;span style="color:#56b6c2">{&lt;/span>my-username&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>How do you get these credentials? Log in to the Azure China Portal, find the ACR
resource, navigate to Settings &amp;gt; Access keys.&lt;/p>
&lt;p>Then sync each image&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% skopeo sync &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span> --override-os linux --override-arch amd64 &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span> --src docker --dest docker &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span> quay.io/prometheus/node-exporter:v1.9.1 &lt;span style="color:#98c379">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>my-registry-name&lt;span style="color:#56b6c2">}&lt;/span>.azurecr.cn/quay.io/prometheus
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I cannot promise I am able to craft this by hand without looking up man
pages or getting assistance from an LLM. &lt;em>C&amp;rsquo;est la vie&lt;/em>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>If there are many images, consider using an
&lt;a href="https://www.gnu.org/software/bash/manual/html_node/Arrays.html">array&lt;/a> +
&lt;code>for&lt;/code> loop.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>XSLT in RSS feed</title><link>https://perrotta.dev/2025/08/xslt-in-rss-feed/</link><pubDate>Wed, 20 Aug 2025 14:03:18 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/xslt-in-rss-feed/</guid><description>&lt;p>&lt;a href="https://www.jwz.org/blog/2025/08/xslt/">There&amp;rsquo;s&lt;/a>
&lt;a href="https://simonwillison.net/2025/Aug/19/xslt/#atom-everything">some&lt;/a>
&lt;a href="https://www.osnews.com/story/143123/google-is-killing-the-open-web/">buzz&lt;/a>
&lt;a href="https://wok.oblomov.eu/tecnologia/google-killing-open-web/">around&lt;/a>
&lt;a href="https://github.com/whatwg/html/issues/11523">XSLT&lt;/a>
&lt;a href="https://www.jonmsterling.com/01DI/index.xml">recently&lt;/a>&lt;a href="https://mastodon.social/@Edent/115048990801167629">.&lt;/a>&lt;/p>
&lt;p>I have my own &lt;a href="https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish">opinion&lt;/a> about the topic but I&amp;rsquo;m not here to discuss politics.&lt;/p>
&lt;p>I took the &lt;a href="https://en.wikipedia.org/wiki/Streisand_effect">opportunity&lt;/a> to style my RSS feed.&lt;/p>
&lt;p>The &lt;a href="https://perrotta.dev/index.xml">result&lt;/a>. Now it looks just like my blog!&lt;/p></description></item><item><title>git ll</title><link>https://perrotta.dev/2025/08/git-ll/</link><pubDate>Tue, 12 Aug 2025 12:50:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/git-ll/</guid><description>&lt;p>In my &lt;code>~/.gitconfig&lt;/code> there&amp;rsquo;s an alias for &lt;code>git log&lt;/code>, inspired by &lt;a href="https://registerspill.thorstenball.com/p/how-i-use-git">Thorsten
Ball&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">[alias]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">ll&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;!f() { git log --graph --pretty=&amp;#39;tformat:%C(always,yellow)%h%C(always,reset) %C(always,green)%ar%C(always,reset){%C(always,bold blue)%an%C(always,reset){%C(always,red)%d%C(always,reset) %s&amp;#39; \&amp;#34;$@\&amp;#34; | column -t -s &amp;#39;{&amp;#39; | less -XS; }; f&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wish I could get rid of the shell utilities (&lt;code>column&lt;/code> and &lt;code>less&lt;/code>), but they&amp;rsquo;re
necessary to properly align the columns.&lt;/p>
&lt;p>I also tried to get rid of the function wrapper (&lt;code>f()&lt;/code>): it works when you run
&lt;code>git ll&lt;/code>. However when you run &lt;code>git ll .&lt;/code> (=display the commit history from
files underneath the current directory only) it fails:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git ll .
. is a directory
&lt;/code>&lt;/pre>&lt;p>Therefore it&amp;rsquo;s better to keep it around. I am satisfied with the current form.&lt;/p>
&lt;p>The output looks like this (image from upstream):&lt;/p>
&lt;p>&lt;img src="https://substackcdn.com/image/fetch/$s_!1Mdk!,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fbf41b48e-523f-4f82-abc0-db4b1d27c689_2310x1374.png" alt="git ll output">&lt;/p>
&lt;p>&lt;strong>Update(2025-08-21)&lt;/strong>: The following modification is better&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> and has no
external dependencies:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-conf" data-lang="conf">[alias]
 ll = log --graph --pretty=tformat:&amp;#39;%C(always,yellow)%h%C(always,reset) %C(always,green)%&amp;lt;(25,trunc)%ar%C(always,reset) %C(always,bold blue)%&amp;lt;(20,trunc)%an%C(always,reset) %C(always,red)%d%C(always,reset) %s&amp;#39;
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>His original configuration is a separate shell function, which is
completely unnecessary. A git alias suffices. Keep it simple!&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In the original implementation, &lt;code>git ll .&lt;/code> did not work as expected
(i.e. it did not display changes &lt;em>only&lt;/em> from the current directory).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git: --no-pager</title><link>https://perrotta.dev/2025/08/git--no-pager/</link><pubDate>Tue, 12 Aug 2025 12:21:22 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/git--no-pager/</guid><description>&lt;p>Let&amp;rsquo;s say you use color highlighting to visually inspect diffs with &lt;code>git&lt;/code>, such
as &lt;a href="https://github.com/dandavison/delta">&lt;code>delta&lt;/code>&lt;/a> or
&lt;a href="https://github.com/git/git/blob/master/contrib/diff-highlight/README">&lt;code>diff-highlight&lt;/code>&lt;/a>
or &lt;a href="https://github.com/mookid/diffr">&lt;code>diffr&lt;/code>&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Implication&lt;/strong>: whenever you run &lt;code>git diff&lt;/code>, &lt;code>git show&lt;/code>, or any other &lt;code>git&lt;/code>
command that produces a diff, it will emit colors (typically red and green).&lt;/p>
&lt;p>Colors are great for local visual inspection, but they are terrible for sharing.
They won&amp;rsquo;t be carried over with copy-and-paste.&lt;/p>
&lt;p>If you intend to share diff output (e.g. to a Q&amp;amp;A site, with teammates), it&amp;rsquo;s
better to emit &lt;code>-&lt;/code> and &lt;code>+&lt;/code>, as vanilla &lt;code>diff&lt;/code> does.&lt;/p>
&lt;p>The easiest way to do so is to pass &lt;code>--no-pager&lt;/code> to &lt;code>git&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git --no-pager diff a83bc395
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git --no-pager show HEAD
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For example, a recent commit in my
&lt;a href="https://github.com/thiagowfx/.dotfiles">dotfiles&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git --no-pager show HEAD~1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit 52b1e91b0f1d93176ec768aa6158974fc401f335
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;&lt;span style="color:#56b6c2">{&lt;/span>redacted&lt;span style="color:#56b6c2">}&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Thu Aug &lt;span style="color:#d19a66">7&lt;/span> 12:00:47 &lt;span style="color:#d19a66">2025&lt;/span> +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fix mr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git bin/.bin/sd-world bin/.bin/sd-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index c46be0e..44c0b47 &lt;span style="color:#d19a66">100755&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--- bin/.bin/sd-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+++ bin/.bin/sd-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@@ -58,7 +58,7 @@ &lt;span style="color:#c678dd">esac&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run_if_exists &lt;span style="color:#98c379">&amp;#34;claude&amp;#34;&lt;/span> claude update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># myrepos&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-run_if_exists &lt;span style="color:#98c379">&amp;#34;mr&amp;#34;&lt;/span> mr -d ~ update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>+&lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#e5c07b">cd&lt;/span> ~ &lt;span style="color:#56b6c2">&amp;amp;&amp;amp;&lt;/span> run_if_exists &lt;span style="color:#98c379">&amp;#34;mr&amp;#34;&lt;/span> mr update&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># source corp updates if any&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> run_if_exists &lt;span style="color:#98c379">&amp;#34;sd-world-corp&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that &lt;code>--no-pager&lt;/code> is a &lt;code>git&lt;/code>-level option: it should be specified before
the git subcommand. The following does not work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% git show HEAD~1 --no-pager
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fatal: unrecognized argument: --no-pager
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Silence unknown callers</title><link>https://perrotta.dev/2025/08/silence-unknown-callers/</link><pubDate>Sat, 09 Aug 2025 18:11:39 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/silence-unknown-callers/</guid><description>&lt;p>I absolutely &lt;strong>never&lt;/strong> get any spam calls. This has been true for &lt;em>many and
many&lt;/em> years now.&lt;/p>
&lt;p>What is the formula to do so? Just be an uninteresting, boring person. Be
invisible. !next&lt;/p>
&lt;p>Sure, this is one way, but let&amp;rsquo;s get more practical and realistic. I have &lt;em>only&lt;/em>
three guidelines, assuming you do not want to live as an hermit&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;h2 id="1-silence-unknown-callers">1) Silence unknown callers&lt;/h2>
&lt;p>Apple, &lt;a href="https://support.apple.com/en-ca/guide/iphone/iphe4b3f7823/ios">Block or avoid unwanted calls on iPhone&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>You can avoid unwanted calls by identifying callers, blocking certain people,
and sending unknown and spam callers directly to voicemail.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>Turn on Call Identification&lt;/strong>&lt;/p>
&lt;p>iPhone can help identify incoming calls using information from Apple Business
Connect, supported carriers, and supported call identification apps.&lt;/p>
&lt;p>Go to Settings &amp;gt; Apps &amp;gt; Phone, then tap &amp;ldquo;Silence Unknown Callers&amp;rdquo;.&lt;/p>
&lt;/blockquote>
&lt;p>A must-have.
There&amp;rsquo;s absolutely &lt;em>no reason&lt;/em> to let strangers be able to interrupt you on a
whim.&lt;/p>
&lt;p>This can only work effectively if you do not feel
&lt;a href="https://en.wikipedia.org/wiki/Fear_of_missing_out">FOMO&lt;/a>. My philosophy is: if
there is a pressing matter, people or institutions will make an effort to reach
out, whether by multiple attempts or by employing alternate means (e.g. email?
WhatsApp?) to do so.&lt;/p>
&lt;p>&lt;strong>Exception&lt;/strong>: If you are waiting for a phone call but do not know the origin
number (e.g. from a pharmacy, medical doctor, job interview, prospective
landlord). In this case, turn this setting off temporarily.&lt;/p>
&lt;h2 id="2-disable-most-app-notifications">2) Disable most app notifications&lt;/h2>
&lt;p>There&amp;rsquo;s no reason to let your phone disturb you. It &lt;em>should&lt;/em> be a tool that
&lt;em>you&lt;/em> control, not the other way around. Disable notifications for most apps,
especially social media.&lt;/p>
&lt;p>&lt;strong>Alternatively&lt;/strong>: Enable &lt;a href="https://support.apple.com/en-us/105112">&amp;ldquo;Do Not
Disturb&amp;rdquo;&lt;/a> most of the time. These days
most phones can be configured to enable it on a configurable schedule, or based
on location (e.g. when you&amp;rsquo;re home, or at work).&lt;/p>
&lt;p>&lt;strong>Exception&lt;/strong>: Let your loved ones be able to reach you. iOS has settings to
allow certain apps and/or contacts to bypass DNS. Being reachable by loved ones
doesn&amp;rsquo;t need to entail emergencies only. Note that this only works if this is a
small list. If you decide that you love everyone (noble!), then you&amp;rsquo;ll need a
two-tier love system to decide who you love the most.&lt;/p>
&lt;h2 id="3-protect-your-crown-jewels">3) Protect your Crown Jewels&lt;/h2>
&lt;p>Tate Jarrow, &lt;a href="https://web.archive.org/web/20230204060013/https://onlinesafety.substack.com/p/protect-your-crown-jewels">Protect your Crown
Jewels!&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>[&amp;hellip;] you can reduce the majority of your risk by protecting the handful of
your most important assets – I call these your crown jewels. These are
probably only a fraction of your digital assets, and can be done much more
easily and quickly — so start there.&lt;/p>
&lt;/blockquote>
&lt;p>I rarely hand out my main phone number when signing up for various online
accounts. I don&amp;rsquo;t want to be reachable in the first place (see guideline 1)), so
why expose my number to third parties?&lt;/p>
&lt;p>I have a second phone number that I use only for chat apps (WhatsApp, Telegram,
etc), so that there is no need to leak my main phone number to acquaintances.
And I have a third phone number that I use whenever signup forms make it
mandatory to provide a number and when &amp;ldquo;0000000000&amp;rdquo; or &amp;ldquo;+12131234567&amp;rdquo; or similar
do not work.&lt;/p>
&lt;hr>
&lt;ol start="3">
&lt;li>is the most important. There was a point in my life when I would use my main
phone number for everything. Then I kept getting spam phone calls (and texts). I
would still ignore them anyway (1)) – it feels that I&amp;rsquo;ve been doing so since
forever – but it was annoying to get spammed.&lt;/li>
&lt;/ol>
&lt;p>It&amp;rsquo;s never too late to do 3): you can always get a new phone number and start
over.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://pcaro.es/hermit/">Hermit&lt;/a>: One of my favorite monospace fonts,
mind you.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub: set up scheduled reminders on Slack</title><link>https://perrotta.dev/2025/08/github-set-up-scheduled-reminders-on-slack/</link><pubDate>Tue, 05 Aug 2025 12:03:10 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/github-set-up-scheduled-reminders-on-slack/</guid><description>&lt;p>If your organization uses GitHub and Slack, it&amp;rsquo;s neat to have daily
notifications be delivered to you, to remind you of pending pull request
reviews.&lt;/p>
&lt;p>How to configure: start from &lt;a href="https://github.com/settings/reminders">https://github.com/settings/reminders&lt;/a>. There will be
an entry in &amp;ldquo;Available organizations&amp;rdquo;. Click (+) &amp;ldquo;Configure reminder&amp;rdquo;.&lt;/p>
&lt;p>In the next screen (&lt;code>https://github.com/settings/reminders/{organization}&lt;/code>),
you&amp;rsquo;ll need to authorize the slack workspace integration.&lt;/p>
&lt;p>Once that is done, pick your settings. I like:&lt;/p>
&lt;ul>
&lt;li>Weekdays&lt;/li>
&lt;li>Times: 09:00 AM in your local timezone&lt;/li>
&lt;li>Check off &amp;ldquo;Review requests assigned to you&amp;rdquo;&lt;/li>
&lt;li>Optionally check off &amp;ldquo;Review requests assigned to your team&amp;rdquo; (I leave this
disabled as it&amp;rsquo;s too noisy)&lt;/li>
&lt;li>Check off &amp;ldquo;Enable real-time alerts for pull requests&amp;rdquo;
&lt;ul>
&lt;li>Then check off all checkboxes under it except &amp;ldquo;Your team&amp;rsquo;s pull request
review is requested&amp;rdquo; (no team notifications) and Your pull request has
failed checks (CI is too noisy).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Now, once a weekday, the github app will slack you messages like these:&lt;/p>
&lt;pre tabindex="0">&lt;code>Reviews assigned to you on {org}/gitops
[gitops#13172] Forget the old RabbitMQ instance (jason-bourne)
 2 hours stale · 2 hours old · Waiting on @Thiago Perrotta, SRE

Reviews assigned to you on {org}/secret-project
[secret-project#49852] Deploy Container: Mooney&amp;#39;s proxy (joe-goldberg)
 5 days stale · 6 days old · Waiting on @Love Quinn
&lt;/code>&lt;/pre>&lt;p>Be kind to your teammates. Don&amp;rsquo;t leave them blocked on your reviews for more
than 24 hours!&lt;/p></description></item><item><title>PR reviews after vacation</title><link>https://perrotta.dev/2025/08/pr-reviews-after-vacation/</link><pubDate>Fri, 01 Aug 2025 02:15:02 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/08/pr-reviews-after-vacation/</guid><description>&lt;p>You send in a couple of pull requests for your teammates to review.&lt;/p>
&lt;p>Then you go on a break. Vacation. Time-off. Holiday. PTO. Pleasure has many
names.&lt;/p>
&lt;p>They had a lot of time to review your PRs. Surely there will be various comments
by the time you&amp;rsquo;re back, right?&lt;/p>
&lt;p>Several action items to be addressed. You&amp;rsquo;re already excited to &lt;del>move
mountains&lt;/del> move more protos, eh?!&lt;/p>
&lt;p>Certainly you will be 100% (&lt;em>hundred per-cent!&lt;/em>) unblocked the first day you&amp;rsquo;re
back to work, correct!?&lt;/p>
&lt;p>There will be no need to &amp;ldquo;friendly&amp;rdquo; ping anyone. Aaaah, so peaceful. So
productive. Corporate paradise.&lt;/p>
&lt;p>Do we live in the same world?&lt;/p>
&lt;hr>
&lt;h3 id="master-foo-and-the-absent-pull-requests1">Master Foo and the Absent Pull Requests&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/h3>
&lt;p>A novice once sent two pull‑requests before departing for a long holiday.&lt;/p>
&lt;p>Upon their return they asked the Master, &amp;ldquo;Have my PRs been reviewed?&amp;rdquo;&lt;/p>
&lt;p>The Master sat quietly. At last he said, &amp;ldquo;I sent no pings.&amp;rdquo;&lt;/p>
&lt;p>The novice frowned and said, &amp;ldquo;But my colleagues had all the time. There must be comments, requests, feedback.&amp;rdquo;&lt;/p>
&lt;p>The Master looked at the floor and replied, &amp;ldquo;What is unreviewed code?&amp;rdquo;&lt;/p>
&lt;p>The novice said nothing.&lt;/p>
&lt;p>Then the Master added: &amp;ldquo;What is urgent code that never landed?&amp;rdquo;&lt;/p>
&lt;p>An instant later, the novice was enlightened.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;em>Prompt&lt;/em>: Write an &amp;ldquo;unix koan&amp;rdquo; out of this.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Smartwatches</title><link>https://perrotta.dev/2025/07/smartwatches/</link><pubDate>Sat, 26 Jul 2025 12:30:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/07/smartwatches/</guid><description>&lt;p>Kev Quirk, &lt;a href="https://kevquirk.com/blog/i-don-t-see-the-point-of-smartwatches">I Don&amp;rsquo;t See the Point of
Smartwatches&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Whether it&amp;rsquo;s Apple, Samsung, Google, Garmin, or any other &lt;em>smartwatch&lt;/em>
brand—they&amp;rsquo;re all utterly pointless as watches, in my opinion. Let&amp;rsquo;s call them
what they are: not &lt;em>smart watches&lt;/em>, but &lt;em>wrist phones&lt;/em>.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>&lt;strong>What are they good for?&lt;/strong>&lt;/p>
&lt;p>Activity tracking. That&amp;rsquo;s it.&lt;/p>
&lt;/blockquote>
&lt;p>I second this.&lt;/p>
&lt;p>Having used various smartwatches throughout the years&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, eventually I &amp;ldquo;downgraded&amp;rdquo;
to a &amp;ldquo;dumb&amp;rdquo; / vanilla / plain watch.&lt;/p>
&lt;p>It &lt;a href="https://en.wikipedia.org/wiki/Unix_philosophy">does one thing, and does it
well&lt;/a>: it is a reliable
timekeeper!&lt;/p>
&lt;p>There&amp;rsquo;s no need to charge it. It just works. Technology™.&lt;/p>
&lt;p>Why are smartwatches inconvenient (not so great, if you will)? Because they
create more problems than they solve:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>They need to be &lt;strong>constantly charged&lt;/strong>. The upscale ones (e.g. Apple Watch) need
to be charged &lt;em>every single day&lt;/em>. Fitness tracker models need to be juiced
&lt;em>every week&lt;/em>, but that&amp;rsquo;s still quite frequent. The situation will change if
there&amp;rsquo;s ever a smartwatch that needs charging &lt;em>every month&lt;/em>, comparable to
e-book readers (e.g. the Kindle Paperwhite). It&amp;rsquo;s just much more practical not
to have to worry about charging.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Notifications&lt;/strong>. They are supposedly a feature, but we&amp;rsquo;re already so
bombarded with notifications on our phones and laptops all the time. Do we
really need yet another device to bring hourly anxiety to our lives, which are
already too busy and digital? There&amp;rsquo;s a way to partially address this, other
than simply disabling all notifications on the watch: get a fitness tracker
instead. Our attention span is already not so great nowadays; let&amp;rsquo;s not make
it even worse.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Durability&lt;/strong>. I assure you: regardless of whatever model you get today, in
two or three years from now you&amp;rsquo;ll feel
&lt;a href="https://en.wikipedia.org/wiki/Fear_of_missing_out">FOMO&lt;/a> when a newer version
gets released. Back when I owned them, don&amp;rsquo;t think I&amp;rsquo;ve ever kept a smartwatch
for more than 1-2 years. Sure, you can sell them, instead of simply disposing
of them; nonetheless, they will still lose a lot of their MSRP value, and
their maximum battery capacity will be reduced. They are not meant to
&lt;a href="https://en.wikipedia.org/wiki/Enshittification">last&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Security&lt;/strong>: If you have a dumb watch, you can travel pretty much anywhere
without worrying much about it getting stolen. It will likely not attract a
lot of attention in the first place; but, even if it gets stolen, it could be
easily replaced. Whereas a smartwatch tends to be flashier and more expensive
to replace. I used to intentionally leave my smartwatch at home when
travelling to more dangerous places (relatively speaking) – but then, what&amp;rsquo;s
the point of having one, right?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Earlier this year I was quite excited about the new
&lt;a href="https://store.repebble.com/">Pebble&lt;/a> watches. They were supposed to address
most of the aforementioned issues:&lt;/p>
&lt;blockquote>
&lt;p>For those unfamiliar with Pebble, it&amp;rsquo;s an e-paper smartwatch with simple
functionality, long battery life and a fun, quirky design. It first launched
on Kickstarter in 2012. The company was sold in 2016 to Fitbit. In January
2025, Google graciously open sourced PebbleOS, enabling anyone to build upon
the amazing Pebble software foundation.&lt;/p>
&lt;/blockquote>
&lt;p>Then, once their feature list got announced, my enthusiasm vanished. It doesn&amp;rsquo;t
feel that special anymore, especially not for the price point they&amp;rsquo;re asking.
Back in 2015-2016 I got a used Pebble Time for about $60. Now they&amp;rsquo;re trying to
sell a new model for $149. It simply doesn&amp;rsquo;t seem worth it.&lt;/p>
&lt;p>In the meantime, I&amp;rsquo;ll keep wearing my good ol&amp;rsquo; plain watch.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Pebble Time, Fitbit Blaze, Fitbit Charge 2 (or 3?), Apple Watch SE, Fitbit
Inspire 2, Garmin.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>check-json-schema: pre-commit hook</title><link>https://perrotta.dev/2025/07/check-json-schema-pre-commit-hook/</link><pubDate>Fri, 11 Jul 2025 22:05:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/07/check-json-schema-pre-commit-hook/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: given an &lt;code>entry.json&lt;/code> file, validate it against a given
&lt;code>schema.json&lt;/code> file (for example, found via the &lt;a href="https://www.schemastore.org/">schema
store&lt;/a>).&lt;/p>
&lt;p>I like the
&lt;a href="https://github.com/python-jsonschema/check-jsonschema">check-jsonschema&lt;/a> python
package:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>pipx run check-jsonschema --schemafile schema.json entry.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What if we want to do the validation via a
&lt;a href="https://pre-commit.com">pre-commit.com&lt;/a> hook?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/python-jsonschema/check-jsonschema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev&lt;/span>: &lt;span style="color:#d19a66">0.33.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: check-jsonschema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">files&lt;/span>: ^entry\.json$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --schemafile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - schema.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This approach works well, but it requires the upkeep of a mapping from JSON file
to JSON schema.&lt;/p>
&lt;p>If we had various JSON files within a single repository, this would result in a
maintenance burden in the pre-commit config file.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/python-jsonschema/check-jsonschema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev&lt;/span>: &lt;span style="color:#d19a66">0.33.2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: check-jsonschema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">alias&lt;/span>: check-jsonschema-entry1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">files&lt;/span>: ^entry1\.json$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --schemafile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - schema1.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: check-jsonschema
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">alias&lt;/span>: check-jsonschema-entry2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">files&lt;/span>: ^entry2\.json$
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">args&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - --schemafile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - schema2.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s somewhat annoying to maintain multiple entries in that fashion. Furthermore
it can easily get outdated: upon the deletion of &lt;code>entry1.json&lt;/code> from the
repository, you&amp;rsquo;d need to remember to manually delete its corresponding entry
from the pre-commit config file.&lt;/p>
&lt;p>Can we do better?&lt;/p>
&lt;p>What if we embedded the schema reference within the JSON file itself?&lt;/p>
&lt;p>For example, with a local schema:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;$schema&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;schema.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or with a remote schema URI, via HTTPS:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;$schema&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;https://example.com/schema.json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now the JSON file is self-contained, and there&amp;rsquo;s no need to define a mapping
from it to its JSON schema elsewhere.&lt;/p>
&lt;p>How can we integrate this approach within pre-commit?&lt;/p>
&lt;p>Initially I thought that
&lt;a href="https://github.com/python-jsonschema/check-jsonschema/blob/8900e07e2002c4b073e1dca7969ce81a19fcb142/.pre-commit-hooks.yaml#L10C7-L10C23">&lt;code>check-metaschema&lt;/code>&lt;/a>
from the &lt;code>check-jsonschema&lt;/code> python package was the answer, but it turns out it
isn&amp;rsquo;t.&lt;/p>
&lt;p>In fact, this isn&amp;rsquo;t currently possible. There&amp;rsquo;s a &lt;a href="https://github.com/python-jsonschema/check-jsonschema/issues/310">feature
request&lt;/a>,
filed ~2 years ago, with no consensus yet on how move forward. Its maintainer
seems helpful and concerned with backwards compatibility.&lt;/p>
&lt;p>For the sake of unblocking myself, I decided to wrap the ability to do so within
my own pre-commit hook definition.&lt;/p>
&lt;p>This gave birth to the following repository:
&lt;a href="https://github.com/thiagowfx/check-json-schema-meta">&lt;code>thiagowfx/check-json-schema-meta&lt;/code>&lt;/a>, which I also &lt;a href="https://github.com/python-jsonschema/check-jsonschema/issues/310#issuecomment-3062174357">announced&lt;/a> in the original feature request thread.&lt;/p>
&lt;p>Usage:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/thiagowfx/check-json-schema-meta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev&lt;/span>: v0.0.2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: check-json-schema-meta
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It goes through each JSON file in the repository, looking for an optional
top-level &lt;code>$schema&lt;/code> key. When found, the file is validated against the defined
schema.&lt;/p>
&lt;p>A &lt;code>--strict&lt;/code> command-line flag enforces the presence of the &lt;code>$schema&lt;/code> key,
otherwise the default behavior is to skip files that do not have it.&lt;/p>
&lt;p>The underlying schema validation defers the work to the same python package
first mentioned in this post. Because it uses
&lt;a href="https://github.com/python-jsonschema/check-jsonschema/blob/8900e07e2002c4b073e1dca7969ce81a19fcb142/src/check_jsonschema/schema_loader/main.py#L74">&lt;code>SchemaLoader&lt;/code>&lt;/a>,
both local and remote (http(s)) file references are supported.&lt;/p>
&lt;p>This is the first original pre-commit hook I have written. By original I mean
that I couldn&amp;rsquo;t find any pre-existing open source hook that accomplishes this
task. The entire repository was developed with AI assistance (&lt;a href="https://www.anthropic.com/claude-code">Claude
Code&lt;/a>), but I wasn&amp;rsquo;t satisfied with
out-of-the-box defaults; I had to heavily modify it to shape it to my taste –
which was achieved with a mix of follow-up prompting and local edits.&lt;/p></description></item><item><title>Logseq template for working out</title><link>https://perrotta.dev/2025/06/logseq-template-for-working-out/</link><pubDate>Sun, 22 Jun 2025 02:19:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/logseq-template-for-working-out/</guid><description>&lt;p>Lately I&amp;rsquo;ve been tracking my gym sessions in &lt;a href="https://logseq.com/">Logseq&lt;/a>.&lt;/p>
&lt;p>This workflow has been in place for at least three months, therefore it&amp;rsquo;s stable
enough by now. Here&amp;rsquo;s the rough idea.&lt;/p>
&lt;p>First, create a &lt;code>[[Templates]]&lt;/code> page.&lt;/p>
&lt;p>How to remember whether it&amp;rsquo;s &lt;code>Templates&lt;/code> or &lt;code>Template&lt;/code>? Simple: add an
&lt;code>alias::template&lt;/code> attribute to the page. It should be the first bullet point.
Now there&amp;rsquo;s no need to remember: any of them will do.&lt;/p>
&lt;p>Then add a &lt;code>[[Gym 💪]]&lt;/code> bullet point&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with &lt;code>alias::gym&lt;/code>. In it, add a
&lt;code>template::gym&lt;/code> attribute. Within it, add the template content. This is the part
where you should adapt it to your own desires and goals, but I&amp;rsquo;ll share mine:&lt;/p>
&lt;pre tabindex="0">&lt;code>- Location
	- [[mygym]] (mylocation1 | mylocation2)
- Defaults
	- 3-4x 8-12
- Warm-up
	- XX min what
- Upper
	- Exercise: 25 -&amp;gt; 30
- Lower
	-
- Cooldown
	- XX min what
- Protein recovery
	- XX g (what)
- Body weight
	- XX kg (gym | home)
&lt;/code>&lt;/pre>&lt;p>A brief explanation:&lt;/p>
&lt;ul>
&lt;li>location: links to the page of each gym, where I can add details such as its
Wi-Fi password, how much drinks cost there, etc.&lt;/li>
&lt;li>defaults: the baseline for the session – how many sets, how many repetitions
in each?&lt;/li>
&lt;li>warm-up: what did I do, for how many minutes?&lt;/li>
&lt;li>upper: a bucket to group upper-body exercises: arms, chest, abs, etc.&lt;/li>
&lt;li>lower: a bucket to group lower-body exercises: legs, calves, glutes, etc.&lt;/li>
&lt;li>cooldown: what did I do, for how many minutes?&lt;/li>
&lt;li>protein recovery: in grams, what did I drink or eat?&lt;/li>
&lt;li>body weight: in kilos, and where did I measure it?&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;/ul>
&lt;p>This template has served me well. The most important part is the one that
contains the exercises (upper and lower).&lt;/p>
&lt;p>Now, let&amp;rsquo;s say I am going to the gym today.&lt;/p>
&lt;p>First, I open the journal page (&lt;code>[[2025-06-22]]&lt;/code>).
Then I type in &lt;code>/template gym&lt;/code>. This inserts the template above.&lt;/p>
&lt;p>Now I click &lt;code>[[Gym 💪]]&lt;/code> to open up the gym page.&lt;/p>
&lt;p>The gym page contains a detailed explanation of my current goals and workflows.
In particular, it has an exercises reference section that looks like this (the
numbers are made up):&lt;/p>
&lt;pre tabindex="0">&lt;code>* # Exercises
* Upper
 * Biceps: 10 -&amp;gt; 12
 * Triceps: 18 -&amp;gt; 20
 * Butterfly normal: 20 -&amp;gt; 25
 * Butterfly reverse: 20 -&amp;gt; 25
 [...]
* Lower
 * Hip addiction: 17 -&amp;gt; 20
 * Hip abduction: 15 -&amp;gt; 20
&lt;/code>&lt;/pre>&lt;p>Each entry tracks the latest weight and the one before it, which makes the
progression explicit (and doubles-down as a motivation factor!).&lt;/p>
&lt;p>Now, because this is an advanced PKM, the backlink we inserted earlier with the
template shows up under &amp;ldquo;linked references&amp;rdquo; at the bottom. And this is the magic
that makes Logseq useful for this kind of tracking: all gym entries are
accessible at a glance, connected to the main &lt;code>[[Gym 💪]]&lt;/code> page.&lt;/p>
&lt;p>During the workout, I use the appropriate weight from the gym page as an input
to the corresponding daily note entry, and slowly increase it in-between sets.&lt;/p>
&lt;p>For example, let&amp;rsquo;s say that for biceps the reference entry is &lt;code>Biceps: 10 -&amp;gt; 12&lt;/code>. Then, for today&amp;rsquo;s workout, I will add an entry like &lt;code>Biceps: 12 -&amp;gt; 13 -&amp;gt; 14&lt;/code>, starting with &lt;code>12&lt;/code>, the latest reference value.&lt;/p>
&lt;p>Repeat for each exercise.&lt;/p>
&lt;p>At the end of the workout, I update the reference entries with the progress of
the day. For example, the updated entry for biceps becomes &lt;code>* Biceps: 12 -&amp;gt; 14&lt;/code>.&lt;/p>
&lt;p>I never liked to go to the gym, but now I am starting to enjoy it, because I
feel this approach brings many self-motivating benefits:&lt;/p>
&lt;ul>
&lt;li>there&amp;rsquo;s a detailed record of every single workout that I do, down to the day
and the exercise / weight in each set. These entries are psychologically
powerful, they motivate me more than smartwatches and/or gym / workouts apps&lt;/li>
&lt;li>the progression ensures I am consistent and pick up where I left off in the
previous session. There&amp;rsquo;s no need to guess any longer which weight to use, I
know exactly which one to use, and whether it was difficult or easy last time
(as I also track this information in the reference).&lt;/li>
&lt;li>reduced risk of injury as I am increasing the weights slowly, and being
mindful of the ones that incur a lot of stress and/or strain on my muscles&lt;/li>
&lt;li>ability to track goals and be realistic about them, and even estimate when
I&amp;rsquo;ll be able to reach them, based on historical progression.&lt;/li>
&lt;/ul>
&lt;p>I tried to use gym apps before, but they were never effective. They are often
complicated and bloated. The advantage of keeping the format plain and flexible
in the PKM is that it can suit all my needs. In fact, I could even bring pen and
paper to the gym instead of my smartphone if needed, as there&amp;rsquo;s absolutely no
need for internet access when updating these entries, and no lock-in whatsoever.&lt;/p>
&lt;p>There&amp;rsquo;s nothing revolutionary in my approach. Its core is merely: (i)
(annotated!) consistency and (ii) ability to shape the system to the format that
suits/fits my needs.&lt;/p>
&lt;p>Consistency is very important. Before adopting this system, I would always guess
which weight to use for each exercise. But there are too many of them, and as
such it&amp;rsquo;s quite difficult to keep track of them all in my head.&lt;/p>
&lt;p>The format flexibility is also important. The key is to shape a system to your
needs, not the other way around. With smartphone and smartwatch apps, I always
felt that I had to adapt myself to the input format the app expects, which is
painful from an UX perspective.&lt;/p>
&lt;p>And now it is time to work out again 💪&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Yes, including the emoji. Life is short to skip having fun.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>There are tiny differences, therefore I like to note down whether I used
the scale from the gym or the one at home.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git delta</title><link>https://perrotta.dev/2025/06/git-delta/</link><pubDate>Mon, 16 Jun 2025 13:28:23 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/git-delta/</guid><description>&lt;p>I&amp;rsquo;ve been using the venerable
&lt;a href="https://github.com/git/git/tree/master/contrib/diff-highlight">&lt;code>diff-highlight&lt;/code>&lt;/a>
script to power various &lt;code>git diff&lt;/code> operations in the terminal. It is a decent
improvement on top of stock &lt;code>git diff&lt;/code>, but it&amp;rsquo;s somewhat of an
&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/94fa66d62260c7c5e133f50beef6181f098b3599/git/.profile.d/git.sh#L11">annoying&lt;/a>
maintenance burden to manage it across various environments, as it&amp;rsquo;s installed
in different ways on various systems:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e5c07b">hash&lt;/span> git &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># git-diff-highlight: alpine:/usr/bin/, arch, debian&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	path_munge &lt;span style="color:#98c379">&amp;#34;/usr/share/git/diff-highlight&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;/usr/share/doc/git/contrib/diff-highlight&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#7f848e"># brew&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e5c07b">hash&lt;/span> brew &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		path_munge &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>brew --prefix&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>/share/git-core/contrib/diff-highlight
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Thus I decided to migrate to &lt;a href="https://github.com/dandavison/delta">&lt;code>git-delta&lt;/code>&lt;/a>,
which is:&lt;/p>
&lt;ul>
&lt;li>quite popular&lt;/li>
&lt;li>written in Rust™&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/li>
&lt;li>&lt;a href="https://repology.org/project/git-delta/versions">available&lt;/a> in all package
managers I&amp;rsquo;m interested in – hence it&amp;rsquo;s &lt;strong>one install command away from my
system&lt;/strong>, no need for extra configs &amp;lt;== And this is the main reason I wanted
to migrate to it.&lt;/li>
&lt;/ul>
&lt;p>On macOS, the package is called &lt;code>git-delta&lt;/code> whereas the binary is called
&lt;code>delta&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install git-delta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% brew ls git-delta | grep bin/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/opt/homebrew/Cellar/git-delta/0.18.2_3/bin/delta
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The integration with &lt;code>git&lt;/code> is as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% grep -E &lt;span style="color:#98c379">&amp;#39;\[core\]|pager =|delta&amp;#39;&lt;/span> ~/.gitconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>core&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># delta &amp;gt; diff-highlight &amp;gt; plain cat&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pager&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;delta --diff-highlight 2&amp;gt;/dev/null || ((diff-highlight 2&amp;gt;/dev/null || cat) | &lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">PAGER&lt;/span>&lt;span style="color:#c678dd">:-&lt;/span>&lt;span style="color:#e06c75">less&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It falls back to &lt;code>diff-highlight&lt;/code> when &lt;code>delta&lt;/code> is not available.&lt;/p>
&lt;p>&lt;code>delta&lt;/code> is quite
&lt;a href="https://dandavison.github.io/delta/configuration.html">configurable&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% grep -EA3 &lt;span style="color:#98c379">&amp;#39;\[delta\]&amp;#39;&lt;/span> ~/.gitconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>delta&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">navigate&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> side-by-side &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> line-numbers &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>One caveat of using &lt;code>delta&lt;/code>: the &lt;code>git diff&lt;/code> output is not suitable for sharing,
as it does not contain diff markers, relying on colors instead.
See &lt;a href="https://perrotta.dev/2025/08/git--no-pager/">this post&lt;/a> for a workaround.&lt;/p>
&lt;p>&lt;strong>Update(2025-09-07)&lt;/strong>: I&amp;rsquo;ve been finding &lt;code>delta&lt;/code> quite pleasant to use.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Always an (over)hyped reason to migrate, but, oh well&amp;hellip;&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>ArgoCD: every application in unknown state</title><link>https://perrotta.dev/2025/06/argocd-every-application-in-unknown-state/</link><pubDate>Fri, 13 Jun 2025 22:34:33 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/argocd-every-application-in-unknown-state/</guid><description>&lt;p>&lt;strong>Symptom&lt;/strong>: Every single application in the Kubernetes cluster that is managed
by Argo is in &lt;code>Unknown&lt;/code> sync status. A disaster! 😱&lt;/p>
&lt;p>This has only happened in one of our clusters. More specifically, in an
&lt;a href="https://learn.microsoft.com/en-us/azure/aks/core-aks-concepts">AKS&lt;/a> cluster
(from Microsoft Azure).&lt;/p>
&lt;p>An observed effect:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% kubectl get --raw&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;/openapi/v2&amp;#39;&lt;/span> | head -c &lt;span style="color:#d19a66">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Error from server &lt;span style="color:#56b6c2">(&lt;/span>ServiceUnavailable&lt;span style="color:#56b6c2">)&lt;/span>: the server is currently unable to handle the request
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Aha! The Kubernetes OpenAPI server is not responding properly.
That explains why Argo is having so much trouble to figure out the state of affairs in
the cluster.&lt;/p>
&lt;p>It was quite difficult to troubleshoot this issue. There are barely any
resources about it in the open web. We filed an Azure Support ticket, but it was
completely useless. They offered to restart&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> the OpenAPI server, but that
didn&amp;rsquo;t help (of course it wouldn&amp;rsquo;t!).&lt;/p>
&lt;p>Because this is a managed Kubernetes cluster, we have limited access to it,
which includes lack of access to raw logs. The Azure portal doesn&amp;rsquo;t make it easy
but, after digging quite deep into it, eventually we found this error message in
the logs:&lt;/p>
&lt;pre tabindex="0">&lt;code> {&amp;#34;pod&amp;#34;:&amp;#34;kube-apiserver-7785d59f4f-scqmp&amp;#34;,&amp;#34;stream&amp;#34;:&amp;#34;stderr&amp;#34;,&amp;#34;containerID&amp;#34;:&amp;#34;925345f6501626aa6cd40dd187d5cf57837389eec9cb39b2292fb9ae3f66242f&amp;#34;,&amp;#34;log&amp;#34;:&amp;#34;E0512 12:01:36.876768 1 handler.go:160] Error in OpenAPI handler: failed to build merge specs: unable to merge: duplicated path \/apis\/reports.kyverno.io\/v1\/clusterephemeralreports\n&amp;#34;}
&lt;/code>&lt;/pre>&lt;p>That was the first clue! Now we know it&amp;rsquo;s related to
&lt;a href="https://kyverno.io/">Kyverno&lt;/a>.&lt;/p>
&lt;p>That error eventually led us to
&lt;a href="https://github.com/kubernetes/kubernetes/issues/122668#issuecomment-2531243040">this&lt;/a>
issue in Kubernetes:&lt;/p>
&lt;blockquote>
&lt;p>We have the same issue here, actually also triggered by installing the kyverno
reports-server with both apiservices (different groups served by the same
api-server).&lt;/p>
&lt;/blockquote>
&lt;p>Aha!&lt;/p>
&lt;p>Deleting the duplicate CRDs installed by &lt;a href="https://github.com/kyverno/reports-server">kyverno reports
server&lt;/a> has immediately resolved the
OpenAPI server unresponsiveness. It wasn&amp;rsquo;t even necessary to restart it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% kubectl delete crd ephemeralreports.reports.kyverno.io clusterephemeralreports.reports.kyverno.io clusterpolicyreports.wgpolicyk8s.io policyreports.wgpolicyk8s.io
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customresourcedefinition.apiextensions.k8s.io &lt;span style="color:#98c379">&amp;#34;ephemeralreports.reports.kyverno.io&amp;#34;&lt;/span> deleted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customresourcedefinition.apiextensions.k8s.io &lt;span style="color:#98c379">&amp;#34;clusterephemeralreports.reports.kyverno.io&amp;#34;&lt;/span> deleted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customresourcedefinition.apiextensions.k8s.io &lt;span style="color:#98c379">&amp;#34;clusterpolicyreports.wgpolicyk8s.io&amp;#34;&lt;/span> deleted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customresourcedefinition.apiextensions.k8s.io &lt;span style="color:#98c379">&amp;#34;policyreports.wgpolicyk8s.io&amp;#34;&lt;/span> deleted
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And now:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ kubectl get --raw&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#39;/openapi/v2&amp;#39;&lt;/span> | head -c &lt;span style="color:#d19a66">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;swagger&amp;#34;&lt;/span>:&lt;span style="color:#98c379">&amp;#34;2.0&amp;#34;&lt;/span>,&lt;span style="color:#98c379">&amp;#34;info&amp;#34;&lt;/span>:&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;title&amp;#34;&lt;/span>:&lt;span style="color:#98c379">&amp;#34;Kubernetes&amp;#34;&lt;/span>,&lt;span style="color:#98c379">&amp;#34;version&amp;#34;&lt;/span>:&lt;span style="color:#98c379">&amp;#34;v1.30.11&amp;#34;&lt;/span>&lt;span style="color:#56b6c2">}&lt;/span>,&lt;span style="color:#98c379">&amp;#34;paths&amp;#34;&lt;/span>:&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;/.well-known/openid-configuration/&amp;#34;&lt;/span>:&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;get&amp;#34;&lt;/span>:&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#98c379">&amp;#34;description&amp;#34;&lt;/span>:&lt;span style="color:#98c379">&amp;#34;get service account issuer OpenID configuration, also known as
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That was a tricky one! Interestingly: it has only occurred in AKS.
&lt;a href="https://aws.amazon.com/eks/">EKS&lt;/a> was fine.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://en.wikiquote.org/wiki/The_IT_Crowd">Hello, IT. Have you tried turning it off and on
again?&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>ArgoCD: custom health check for StatefulSet (OnDelete)</title><link>https://perrotta.dev/2025/06/argocd-custom-health-check-for-statefulset-ondelete/</link><pubDate>Fri, 13 Jun 2025 21:40:01 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/argocd-custom-health-check-for-statefulset-ondelete/</guid><description>&lt;p>It turns out the
&lt;a href="https://github.com/argoproj/gitops-engine/blob/master/pkg/health/health_statefulset.go">built-in&lt;/a>
health check for
&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/">StatefulSets&lt;/a>
in ArgoCD is not comprehensive enough.&lt;/p>
&lt;p>It covers
&lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies">&lt;code>RollingUpdate&lt;/code>&lt;/a>
well enough, but &lt;code>OnDelete&lt;/code> is incomplete.&lt;/p>
&lt;p>More specifically:&lt;/p>
&lt;p>&lt;strong>Observed&lt;/strong>: whenever you push an update to an STS whose &lt;code>.spec.updateStrategy&lt;/code>
is &lt;code>OnDelete&lt;/code>, its health status stays as &lt;code>Healthy&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Expected&lt;/strong>: there should be an indication that the STS pods are not
up-to-date, and hence need to be restarted to incorporate the latest changes.&lt;/p>
&lt;p>There is &lt;a href="https://github.com/argoproj/argo-cd/issues/6527">an open bug&lt;/a>:
&lt;code>Statefulset healthcheck does not work #6527&lt;/code> for it.&lt;/p>
&lt;p>I managed to work around it by defining my own health check. This is an use case
where Gen AI is helpful, though it does not shine. I could not have Gen AI
produce a fully working health check for this scenario. Instead, I used it to
bootstrap a basic example, then had to tweak it until it worked. This has been
tested multiple times, I am reasonably confident it works well (some edge cases
could be missing though).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-lua" data-lang="lua">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">health_status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> {}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#e5c07b">nil&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Progressing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Waiting for status to be reported&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e06c75">health_status&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">strategy&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.spec&lt;/span>.&lt;span style="color:#e06c75">updateStrategy&lt;/span> &lt;span style="color:#56b6c2">and&lt;/span> &lt;span style="color:#e06c75">obj.spec&lt;/span>.&lt;span style="color:#e06c75">updateStrategy.type&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#98c379">&amp;#34;RollingUpdate&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.spec&lt;/span>.&lt;span style="color:#e06c75">replicas&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">ready_replicas&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span>.&lt;span style="color:#e06c75">readyReplicas&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span>.&lt;span style="color:#e06c75">updatedReplicas&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">status_replicas&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span>.&lt;span style="color:#e06c75">replicas&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">current_revision&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span>.&lt;span style="color:#e06c75">currentRevision&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#98c379">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">local&lt;/span> &lt;span style="color:#e06c75">update_revision&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#e06c75">obj.status&lt;/span>.&lt;span style="color:#e06c75">updateRevision&lt;/span> &lt;span style="color:#56b6c2">or&lt;/span> &lt;span style="color:#98c379">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">strategy&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#98c379">&amp;#34;OnDelete&amp;#34;&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">ready_replicas&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#e06c75">status_replicas&lt;/span> &lt;span style="color:#56b6c2">and&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Healthy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;All replicas are ready and updated (OnDelete strategy)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">elseif&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#d19a66">0&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Degraded&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;No replicas have been updated (OnDelete strategy): 0/&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; updated. Still running an old revision!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Progressing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Progressing (OnDelete): &amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">ready_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">status_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; ready, &amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; updated&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">ready_replicas&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#e06c75">status_replicas&lt;/span> &lt;span style="color:#56b6c2">and&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#e06c75">current_revision&lt;/span> &lt;span style="color:#56b6c2">~=&lt;/span> &lt;span style="color:#e06c75">update_revision&lt;/span> &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Progressing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Waiting for rollout to complete: revision mismatch (&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">current_revision&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; ≠ &amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">update_revision&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34;)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Healthy&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;All replicas updated, ready, and revisions match&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.status&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;Progressing&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">health_status.message&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;RollingUpdate progressing: &amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">ready_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">status_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; ready, &amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">updated_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34;/&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#e06c75">spec_replicas&lt;/span> &lt;span style="color:#56b6c2">..&lt;/span> &lt;span style="color:#98c379">&amp;#34; updated&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">return&lt;/span> &lt;span style="color:#e06c75">health_status&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It is necessary to distinguish between &lt;code>OnDelete&lt;/code> and &lt;code>RollingUpdate&lt;/code>.&lt;/p>
&lt;p>&lt;code>OnDelete&lt;/code> should not use &lt;code>currentRevision&lt;/code> / &lt;code>update_revision&lt;/code>, as these values
don&amp;rsquo;t mean anything for that update strategy. This can be observed
&lt;a href="https://github.com/argoproj/gitops-engine/blob/f8f1b61ba3fd5fcb647563db3106977e1364de31/pkg/health/health_statefulset.go#L63">upstream&lt;/a>
as well.&lt;/p>
&lt;p>It is easy to write / tweak the health check when you look at the live STS
resource / manifest in the cluster. &lt;code>obj&lt;/code> refers to the STS manifest (&lt;code>kubectl get sts -o yaml&lt;/code>). The most relevant field is &lt;code>status:&lt;/code>.&lt;/p>
&lt;p>If you deploy ArgoCD via its helm chart, add that check for &lt;code>argocd-cm&lt;/code>. The
&lt;code>values.yaml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">argo-cd&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">configs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cm&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">resource.customizations.health.apps_StatefulSet&lt;/span>: |&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> health_status = {}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> [...]&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This custom health check was partly inspired by a Prometheus alert we have:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">alert&lt;/span>: StatefulSetUpdateNotRolledOut
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">expr&lt;/span>: max without (revision) (kube_statefulset_status_current_revision unless kube_statefulset_status_update_revision) * (kube_statefulset_replicas != kube_statefulset_status_replicas_updated)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>How long will it take until LLMs &lt;del>steal&lt;/del> adopt this novel solution from me?&lt;/p></description></item><item><title>Slack: public chats first</title><link>https://perrotta.dev/2025/06/slack-public-chats-first/</link><pubDate>Fri, 13 Jun 2025 20:01:10 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/slack-public-chats-first/</guid><description>&lt;p>&lt;a href="https://www.mooreds.com/wordpress/archives/3706">Why Public Slack Chats are Better than Direct Messages&lt;/a> by Dan Moore:&lt;/p>
&lt;p>&lt;strong>Bad&lt;/strong>™:&lt;/p>
&lt;blockquote>
&lt;p>I&amp;rsquo;ve noticed that I sometimes use direct messages when I should be asking a
question in a public channel. Upon examination, direct messages have the
following attributes:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Less intrusive. I sometimes worry about an excessive amount of chatter
bothering other team members.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Protect my ego. When I ask a question it is admitting that I don&amp;rsquo;t know the
answer. As a &amp;ldquo;director of engineering&amp;rdquo; it can be humbling to admit
ignorance. But of course I don&amp;rsquo;t know everything! It&amp;rsquo;s just my ego talking.
However, it still stings a bit sometimes to ask publicly–it&amp;rsquo;s easier to just
side chat.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;strong>Good&lt;/strong>™:&lt;/p>
&lt;blockquote>
&lt;p>However, the benefits of posting in a public channel are many. A message in a
public channel is:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Viewable. This means that others can chime in (as opposed to just the person
I DMed). And that others can learn in the present as they read my question
and the answers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Linkable. This means that if I want to reference the conversation (in a PR,
trello card or elsewhere), I can. Of course, I should extract info into
documentation (future me will thank past me) but for context around a
decision, a link to a slack chat can be very helpful.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Searchable. This means that others in the future who are searching for this
information can find it. Yes, slack&amp;rsquo;s search leaves something to be desired,
but if the conversation is private, that&amp;rsquo;s a guarantee that no one else will
be able to search and find it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Vulnerable. I want everyone to feel comfortable asking questions. That leads
to better outcomes for clients and for team members. How can I expect that
behavior of others if I don&amp;rsquo;t do it myself?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Surprisingly, I&amp;rsquo;ve had many teammates throughout the years that are unaware of
these benefits.&lt;/p>
&lt;p>One more for &lt;strong>Bad&lt;/strong> (direct messages):&lt;/p>
&lt;ul>
&lt;li>&lt;strong>No load balancing&lt;/strong>. Risk of bothering one person instead of distributing
question load amongst the team.&lt;/li>
&lt;/ul>
&lt;p>One more for &lt;strong>Good&lt;/strong> (public messages):&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Knowledge sharing&lt;/strong>. What you ask, you learn. What you learn, your teammates
also learn. Win-win!&lt;/li>
&lt;/ul></description></item><item><title>git commit: automatically add pull request template</title><link>https://perrotta.dev/2025/06/git-commit-automatically-add-pull-request-template/</link><pubDate>Thu, 12 Jun 2025 21:09:36 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/git-commit-automatically-add-pull-request-template/</guid><description>&lt;p>GitHub supports &lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository">pull request
templates&lt;/a>.
Define a &lt;code>.github/PULL_REQUEST_TEMPLATE.md&lt;/code> directory in your git repo, and it
will be automatically used when creating PRs via the GitHub web UI and via the
CLI tool (&lt;a href="https://cli.github.com/">&lt;code>gh&lt;/code>&lt;/a>).&lt;/p>
&lt;p>But what about commits created locally, via a plain &lt;code>git commit&lt;/code>?&lt;/p>
&lt;p>As per &lt;a href="https://git-scm.com/docs/git-commit/2.49.0#Documentation/git-commit.txt-code--templateltfilegtcode">git
docs&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>commit.template&lt;/code>&lt;/p>
&lt;p>Specify the pathname of a file to use as the template for new commit messages.&lt;/p>
&lt;/blockquote>
&lt;p>Therefore, the following &lt;code>~/.gitconfig&lt;/code> works:&lt;/p>
&lt;pre tabindex="0">&lt;code>[commit]
 template = .github/PULL_REQUEST_TEMPLATE.md
&lt;/code>&lt;/pre>&lt;p>The file path (pathname) is relative to the git repository root.&lt;/p>
&lt;p>However, this will fail in repositories that do not have a template:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git commit
fatal: could not read &amp;#39;.github/PULL_REQUEST_TEMPLATE.md&amp;#39;: No such file or directory
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a workaround: use &lt;a href="https://git-scm.com/docs/git-config#_includes">&lt;code>includeIf&lt;/code>&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% tail -3 ~/.gitconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Import corp configs if any.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>include&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> .gitconfig_corp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.gitconfig_corp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>includeIf &lt;span style="color:#98c379">&amp;#34;gitdir:~/mycompany/**&amp;#34;&lt;/span>&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> .gitconfig_mycompany
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>includeIf &lt;span style="color:#98c379">&amp;#34;hasconfig:remote.*.url:git@github.com:mycompany/**&amp;#34;&lt;/span>&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">path&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> .gitconfig_mycompany
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.gitconfig_mycompany
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>commit&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">template&lt;/span> &lt;span style="color:#56b6c2">=&lt;/span> .github/PULL_REQUEST_TEMPLATE.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This way, the github PR template is only included for git repositories from my
company.&lt;/p></description></item><item><title>Alpine Linux packaging: track new software releases</title><link>https://perrotta.dev/2025/06/alpine-linux-packaging-track-new-software-releases/</link><pubDate>Tue, 03 Jun 2025 01:36:53 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/06/alpine-linux-packaging-track-new-software-releases/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: You maintain packages for a Linux distribution, for
example, &lt;a href="https://www.alpinelinux.org/">Alpine Linux&lt;/a>. Find a way to keep track
of new software releases, to ensure your packages are kept up-to-date.&lt;/p>
&lt;p>The &lt;a href="https://release-monitoring.org/">Release Monitoring&lt;/a> project (codename
&lt;em>Anitya&lt;/em>), part of the &lt;a href="https://www.fedoraproject.org/">Fedora Linux&lt;/a> distro,
can accomplish that:&lt;/p>
&lt;blockquote>
&lt;p>Watch for releases of your favorite projects&lt;/p>
&lt;p>We all have our favorite projects and we all like to use their latest versions
with their latest features. However, it is hard to keep in touch with all of
them and be informed when they release a new version. Anitya can help!&lt;/p>
&lt;p>We monitor upstream releases and broadcast them on Fedora messaging bus.&lt;/p>
&lt;/blockquote>
&lt;p>The underlying project:&lt;/p>
&lt;blockquote>
&lt;p>Anitya is a release monitoring project.&lt;/p>
&lt;p>Its goal is to regularly check if a project has made a new release. When
Anitya discovers a new release for a project, it publishes a RabbitMQ message
via fedora messaging. This makes it easy to integrate with Anitya and perform
actions when a new release is created for a project. For example, the Fedora
project runs a service called the-new-hotness which files a Bugzilla bug
against a package when the upstream project makes a new release.&lt;/p>
&lt;p>Anitya provides a user-friendly interface to add, edit, or browse projects.&lt;/p>
&lt;/blockquote>
&lt;p>Even though it is part of Fedora, we can use it for Alpine Linux just fine!&lt;/p>
&lt;p>Recently I packaged &lt;a href="https://github.com/zizmorcore/zizmor/issues/780">zizmor&lt;/a>. I
noticed there was no entry for it in Anitya. I added one. It&amp;rsquo;s very
straightforward:&lt;/p>
&lt;ul>
&lt;li>head to &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/li>
&lt;li>ensure the project you want to monitor isn&amp;rsquo;t already present there&lt;/li>
&lt;li>log in (e.g. via GitHub)&lt;/li>
&lt;li>click &lt;a href="https://release-monitoring.org/project/new">add project&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Fill in the form:&lt;/p>
&lt;ul>
&lt;li>Project name: zizmor&lt;/li>
&lt;li>Homepage: &lt;a href="https://docs.zizmor.sh">https://docs.zizmor.sh&lt;/a>&lt;/li>
&lt;li>BackEnd: GitHub&lt;/li>
&lt;li>Version scheme: Semantic&lt;/li>
&lt;li>Github owner/project: &lt;a href="https://github.com/zizmorcore/zizmor">zizmorcore/zizmor&lt;/a>&lt;/li>
&lt;li>Version prefix: &lt;code>v&lt;/code>&lt;/li>
&lt;li>Pre-release filter: &lt;code>rc&lt;/code>&lt;/li>
&lt;li>Version filter: &lt;code>rc&lt;/code> (excludes &lt;a href="https://github.com/zizmorcore/zizmor/releases/tag/v1.8.0-rc0">&lt;code>1.8.0-rc0&lt;/code>&lt;/a>) and the like&lt;/li>
&lt;li>Check off &amp;ldquo;check releases instead of tags&amp;rdquo;&lt;/li>
&lt;/ul>
&lt;p>Once the project is &lt;a href="https://release-monitoring.org/project/378497/">created&lt;/a>,
add a new distribution mapping:&lt;/p>
&lt;ul>
&lt;li>Distribution: Alpine&lt;/li>
&lt;li>Package name: &lt;a href="https://pkgs.alpinelinux.org/package/edge/testing/x86_64/zizmor">zizmor&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>And we&amp;rsquo;re done!&lt;/p>
&lt;p>As per &lt;a href="https://pkgs.alpinelinux.org/flagging">https://pkgs.alpinelinux.org/flagging&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Package flagging&lt;/p>
&lt;p>Manual package flagging has been disabled in favour of automatic flagging
based on Anitya.&lt;/p>
&lt;p>If you want a package to be up-to-date or to inform the maintainer about the
package status, please feel free to create a package mapping on Anitya. Once
the mapping is made, it should automatically send an email to the maintainer
whenever a new version is available.&lt;/p>
&lt;p>For details on how to create a project mapping for Alpine Linux, please refer
to the &lt;a href="https://release-monitoring.org/static/docs/user-guide.html">release monitoring
documentation&lt;/a>.&lt;/p>
&lt;/blockquote></description></item><item><title>PostgreSQL major version upgrade on Alpine Linux</title><link>https://perrotta.dev/2025/05/postgresql-major-version-upgrade-on-alpine-linux/</link><pubDate>Sat, 24 May 2025 16:00:23 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/postgresql-major-version-upgrade-on-alpine-linux/</guid><description>&lt;h2 id="problem-statement">Problem statement&lt;/h2>
&lt;p>Given Alpine Linux 3.22 running PostgreSQL 16, upgrade to PostgreSQL 17. For
this specific example, consider a &lt;a href="https://miniflux.app/">&lt;code>miniflux&lt;/code>&lt;/a> database.&lt;/p>
&lt;h2 id="procedure">Procedure&lt;/h2>
&lt;p>Install PostgreSQL 17:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk add postgres
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can coexist with &lt;code>postgres16&lt;/code>.&lt;/p>
&lt;p>Stop the PostgreSQL daemon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas service postgresql stop
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you navigate to the Miniflux server with your browser, it will fail, as
expected:&lt;/p>
&lt;pre tabindex="0">&lt;code>store: unable to create app session: dial tcp [::1]:5432: connect: connection refused
&lt;/code>&lt;/pre>&lt;p>Change the PostgreSQL system version to the desired one:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas pg_versions set-default &lt;span style="color:#d19a66">17&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change to the root user, for convenience, then change to the existing postgresql
directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas su
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> /var/lib/postgresql/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Prepare files and directories for the upgrade:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> 16/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mv data olddata
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> ../
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mkdir 17/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> 17/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% mkdir data tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% chown postgres:postgres data tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change to the &lt;code>postgres&lt;/code> user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% su postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e5c07b">cd&lt;/span> tmp/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initialize the new cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% initdb -D /var/lib/postgresql/17/data --locale&lt;span style="color:#56b6c2">=&lt;/span>en_US.UTF-8 --encoding&lt;span style="color:#56b6c2">=&lt;/span>UTF8 &lt;span style="color:#56b6c2">[&lt;/span>--data-checksums&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The files belonging to this database system will be owned by user &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This user must also own the server process.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The database cluster will be initialized with locale &lt;span style="color:#98c379">&amp;#34;en_US.UTF-8&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The default text search configuration will be &lt;span style="color:#e5c07b">set&lt;/span> to &lt;span style="color:#98c379">&amp;#34;english&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Data page checksums are disabled.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fixing permissions on existing directory /var/lib/postgresql/17/data ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>creating subdirectories ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting dynamic shared memory implementation ... posix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#98c379">&amp;#34;max_connections&amp;#34;&lt;/span> ... &lt;span style="color:#d19a66">100&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#98c379">&amp;#34;shared_buffers&amp;#34;&lt;/span> ... 128MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>selecting default &lt;span style="color:#e5c07b">time&lt;/span> zone ... America/Toronto
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>creating configuration files ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>running bootstrap script ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>performing post-bootstrap initialization ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>syncing data to disk ... ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initdb: warning: enabling &lt;span style="color:#98c379">&amp;#34;trust&amp;#34;&lt;/span> authentication &lt;span style="color:#c678dd">for&lt;/span> &lt;span style="color:#e5c07b">local&lt;/span> connections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>initdb: hint: You can change this by editing pg_hba.conf or using the option -A, or --auth-local and --auth-host, the next &lt;span style="color:#e5c07b">time&lt;/span> you run initdb.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Success.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the previous command I chose to omit &lt;code>--data-checksums&lt;/code>, otherwise I get the
following error:&lt;/p>
&lt;pre tabindex="0">&lt;code>old cluster does not use data checksums but the new one does
Failure, exiting
&lt;/code>&lt;/pre>&lt;p>Upgrade the new cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% pg_upgrade -b /usr/libexec/postgresql16/ -B /usr/libexec/postgresql17/ -d /var/lib/postgresql/16/olddata/ -D /var/lib/postgresql/17/data/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Performing Consistency Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking cluster versions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database user is the install user ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database connection settings ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> prepared transactions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> contrib/isn with bigint-passing mismatch ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking data &lt;span style="color:#e5c07b">type&lt;/span> usage ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating dump of global objects ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating dump of database schemas
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> presence of required libraries ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking database user is the install user ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> prepared transactions ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> new cluster tablespace directories ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>If pg_upgrade fails after this point, you must re-initdb the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>new cluster before continuing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Performing Upgrade
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting locale and encoding &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Analyzing all rows in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Freezing all rows in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_xact ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_xact to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting oldest XID &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next transaction ID and epoch &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_multixact/offsets ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_multixact/offsets to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Deleting files from new pg_multixact/members ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying old pg_multixact/members to new server ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next multixact ID and offset &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Resetting WAL archives ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting frozenxid and minmxid counters in new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restoring global objects in the new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Restoring database schemas in the new cluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Copying user relation files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Setting next OID &lt;span style="color:#c678dd">for&lt;/span> new cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Sync data directory to disk ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Creating script to delete old cluster ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Checking &lt;span style="color:#c678dd">for&lt;/span> extension updates ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Upgrade Complete
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>----------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Optimizer statistics are not transferred by pg_upgrade.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Once you start the new server, consider running:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /usr/libexec/postgresql17/vacuumdb --all --analyze-in-stages
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Running this script will delete the old cluster&amp;#39;s data files:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ./delete_old_cluster.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now clean up:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ^D &lt;span style="color:#7f848e"># go back to the root user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% /var/lib/postgresql/17/tmp/delete_old_cluster.sh
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% rmdir /var/lib/postgresql/16/ &lt;span style="color:#7f848e"># it should be empty by now&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;re curious about this script, it&amp;rsquo;s a simple one-liner:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>rm -rf &lt;span style="color:#98c379">&amp;#39;/var/lib/postgresql/16/olddata&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, let&amp;rsquo;s get the cluster back up and vacuum it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ^D &lt;span style="color:#7f848e"># go back to your main user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas service postgresql start
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% doas su - postgres -c &lt;span style="color:#98c379">&amp;#39;/usr/libexec/postgresql17/vacuumdb --all --analyze-in-stages&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating minimal optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">1&lt;/span> target&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating medium optimizer statistics &lt;span style="color:#56b6c2">(&lt;/span>&lt;span style="color:#d19a66">10&lt;/span> targets&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;miniflux&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;postgres&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>vacuumdb: processing database &lt;span style="color:#98c379">&amp;#34;template1&amp;#34;&lt;/span>: Generating default &lt;span style="color:#56b6c2">(&lt;/span>full&lt;span style="color:#56b6c2">)&lt;/span> optimizer statistics
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>At this point, Miniflux should be working again.
Navigate to &lt;code>/about&lt;/code> and verify its database version: &lt;code>Postgres version: 17.5&lt;/code>.&lt;/p>
&lt;p>Last step, delete the previous package:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk del postgresql16 postgres16-contrib
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Double-check the newer version is still installed:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% apk list -I | grep postgres
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>libpq-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-common-1.2-r1 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql-common&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-common-openrc-1.2-r1 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql-common&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql-zsh-completion-5.9-r5 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>zsh&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>MIT-Modern-Variant AND GPL-2.0-only&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-client-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-contrib-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgresql17-openrc-17.5-r0 x86_64 &lt;span style="color:#56b6c2">{&lt;/span>postgresql17&lt;span style="color:#56b6c2">}&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>PostgreSQL&lt;span style="color:#56b6c2">)&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>installed&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And we&amp;rsquo;re done!&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://wiki.alpinelinux.org/wiki/Postgresql">https://wiki.alpinelinux.org/wiki/Postgresql&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://beune.dev/posts/upgrade-alpine-postgresql/">https://beune.dev/posts/upgrade-alpine-postgresql/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>fpp: facebook path picker</title><link>https://perrotta.dev/2025/05/fpp-facebook-path-picker/</link><pubDate>Sun, 18 May 2025 18:34:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/fpp-facebook-path-picker/</guid><description>&lt;p>&lt;a href="https://github.com/facebook/PathPicker">&lt;code>fpp&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>PathPicker accepts a wide range of input &amp;ndash; output from git commands, grep
results, searches &amp;ndash; pretty much anything. After parsing the input, PathPicker
presents you with a nice UI to select which files you&amp;rsquo;re interested in. After
that you can open them in your favorite editor or execute arbitrary commands.&lt;/p>
&lt;/blockquote>
&lt;p>Think of &lt;code>fpp&lt;/code> as the result of parsing file-looking paths in &lt;code>stdout&lt;/code> and
injecting them into &lt;a href="https://github.com/junegunn/fzf">&lt;code>fzf&lt;/code>&lt;/a>.&lt;/p>
&lt;p>It&amp;rsquo;s part of my daily tool belt.&lt;/p>
&lt;p>Sadly, the project is &lt;a href="https://github.com/facebook/PathPicker/commits/main/">somewhat
abandoned&lt;/a> since 2022.
Nonetheless, it doesn&amp;rsquo;t need any new features: &lt;a href="https://en.wikipedia.org/wiki/Unix_philosophy">it does one thing and does it
well&lt;/a>.&lt;/p>
&lt;p>Its latest released version is
&lt;a href="https://github.com/facebook/PathPicker/releases/tag/0.9.5">0.9.5&lt;/a>. Ironically,
due to a bug, there is a mismatch in &lt;code>--version&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fpp --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fpp version 0.9.2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A few usage examples:&lt;/p>
&lt;ul>
&lt;li>&lt;code>git st | fpp&lt;/code>: modified files in a git repository&lt;/li>
&lt;li>&lt;code>fd -e ts --type file | fpp&lt;/code>: files with a given extension&lt;/li>
&lt;li>&lt;code>ack -l {pattern} | fpp&lt;/code>: files that match a given pattern&lt;/li>
&lt;/ul>
&lt;p>To continuously edit files in a loop, use &lt;code>fpp -ko&lt;/code> (&lt;code>ko&lt;/code> stands for
&lt;code>--keep-open&lt;/code>).&lt;/p></description></item><item><title>WinterBreak: hello world</title><link>https://perrotta.dev/2025/05/winterbreak-hello-world/</link><pubDate>Sat, 17 May 2025 12:21:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/winterbreak-hello-world/</guid><description>&lt;p>I decided to
&lt;a href="https://en.wikipedia.org/wiki/Privilege_escalation#Jailbreaking">jailbreak&lt;/a> my
Kindle on January 1st this year, once I got aware of the
&lt;a href="https://kindlemodding.org/jailbreaking/WinterBreak/">WinterBreak&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> exploit,
via the excellent
&lt;a href="https://www.mobileread.com/forums/showthread.php?t=365372">MobileRead&lt;/a> forums:&lt;/p>
&lt;blockquote>
&lt;p>I am proud to present the culmination of over a year of procrastination:
WinterBreak WinterBreak is a new jailbreak which works on ANY KINDLE (from
the K5) on ANY FIRMWARE&lt;/p>
&lt;/blockquote>
&lt;p>Life happens though, and only now I got time to do so.&lt;/p>
&lt;p>However, I took one important precaution since then, which was &lt;em>essential&lt;/em>:
ensure my Kindle was &lt;em>always&lt;/em> in airplane mode.&lt;/p>
&lt;p>Whenever the Kindle is connected to Wi-Fi, it gets
&lt;a href="https://en.wikipedia.org/wiki/Over-the-air_update">OTA updates&lt;/a> automatically
from Amazon. This is generally a sensible default and the desired behavior.
However, for jailbreaking purposes, you want your device to stay stuck on time
and &lt;a href="https://www.youtube.com/watch?v=WA4iX5D9Z64">&lt;em>never ever ever&lt;/em>&lt;/a> get
updates. An update could make the jailbreak cease to work. In fact, that&amp;rsquo;s
exactly what happened during these last 4-5 months:&lt;/p>
&lt;blockquote>
&lt;p>*Note that models on 5.18.x no longer work, please check the wiki&amp;rsquo;s model list
for more info&lt;/p>
&lt;/blockquote>
&lt;p>I was prudent to verify it was still running 5.17.x before proceeding.&lt;/p>
&lt;p>The expected time to do the whole process was about half an hour, and it&amp;rsquo;s super
user-friendly. Seriously, the folks at &lt;a href="https://kindlemodding.org/">Kindle
Modding&lt;/a> did an amazing documentation job; arguably
the procedures are friendly even to non-developers. The process boils down to
connecting your Kindle to a laptop (the OS doesn&amp;rsquo;t really matter), copying a
bunch of files and directories over to it, ejecting it, tapping some buttons,
and repeating this procedure a couple of times.&lt;/p>
&lt;p>For me it took about one hour, because I was careful to take photos (in case I
screwed up) and notes (for this blog post, and also for the sake of reverting
the process should I want to – for example, if I ever sell the device to a third
party).&lt;/p>
&lt;p>Before deciding to do it, I watched
&lt;a href="https://www.youtube.com/watch?v=hJ59M0io6zE">this&lt;/a> and &lt;a href="https://www.youtube.com/watch?v=Qtk7ERwlIAk">this
video&lt;/a> which made me feel even more
confident it is the outcome I was longing for. &lt;a href="https://perrotta.dev/2024/12/independence/">Previously&lt;/a>.&lt;/p>
&lt;p>I won&amp;rsquo;t document the jailbreak procedure here: there&amp;rsquo;s no point. First, the
upstream documentation is amazing; second, the steps here would likely easily
get outdated. Head over to &lt;a href="https://kindlemodding.org/jailbreaking/WinterBreak/">the WinterBreak
docs&lt;/a>. Even better, read
the &lt;a href="https://kindlemodding.org/jailbreaking/jailbreak-faq.html">FAQ&lt;/a> first. That
said, here are a few notes and anecdotes.&lt;/p>
&lt;p>I had to disable parental controls on my Kindle. I had them enabled to prevent
me from accidentally buying books from the Amazon Store&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. This is the closest
to adblocking I could find, and I was happy with that setting. That said, one of
the jailbreak steps is to open the store, therefore the parental controls must
be turned off. This is not documented upstream – to be honest, most people
wouldn&amp;rsquo;t be in that situation anyway.&lt;/p>
&lt;p>The process failed in the first attempt. I am not quite sure why. It got stuck
at the &lt;code>Jailbreaking - please wait...&lt;/code> screen. The docs say:&lt;/p>
&lt;blockquote>
&lt;p>If you do not see any funky text then make sure Airplane mode is disabled to
avoid any automatic update. Turn it back on after you see the text though!&lt;/p>
&lt;/blockquote>
&lt;p>That was not helpful to me though. What worked was to &lt;a href="https://www.youtube.com/watch?v=5UT8RkSmN4k">restart the
device&lt;/a> and try again.&lt;/p>
&lt;p>The second attempt worked.&lt;/p>
&lt;p>Once the jailbreak is done, head over to &lt;a href="https://kindlemodding.org/jailbreaking/post-jailbreak/">Post
Jailbreak&lt;/a>. Steps:&lt;/p>
&lt;ul>
&lt;li>set up a hotfix: to ensure the jailbreak persists, even after restarting the
device&lt;/li>
&lt;li>install KUAL &amp;amp; MRPI: package managers, basically&lt;/li>
&lt;li>disable OTA updates: important to ensure an automatic update does not revert
the jailbreak&lt;/li>
&lt;li>re-enable the store: not super relevant for me, but why not – and then turn
parental controls back on&lt;/li>
&lt;li>install &lt;a href="https://koreader.rocks/">KOReader&lt;/a>: surely this is the most exciting
part&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>KOReader is a document viewer for E Ink devices. Supported fileformats include
EPUB, PDF, DjVu, XPS, CBT, CBZ, FB2, PDB, TXT, HTML, RTF, CHM, DOC, MOBI and
ZIP files. It&amp;rsquo;s available for Kindle, Kobo, PocketBook, Android and desktop
Linux.&lt;/p>
&lt;/blockquote>
&lt;p>A few highlights from the FAQ:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Is it possible to undo the jailbreak (&amp;ldquo;unjailbreak&amp;rdquo;)?&lt;/strong>&lt;/p>
&lt;p>Yes, perform a factory reset on the device and then install the same firmware
update (or higher).&lt;/p>
&lt;/blockquote>
&lt;p>This makes the action of doing the jailbreak a no-brainer. Sure, there&amp;rsquo;s always
a (small) chance of bricking your device, but I think it&amp;rsquo;s worth the risk.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Will this get my Amazon account banned?&lt;/strong>&lt;/p>
&lt;p>No reports of Amazon accounts being banned after jailbreaking have been
reported so far. However, please refrain from telling support that you have
modified your device.&lt;/p>
&lt;/blockquote>
&lt;p>Common sense. I never contacted Amazon Support in 11+ years of owning Kindles,
so I don&amp;rsquo;t particularly care about it anyway.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Will this void the warranty on my Kindle device?&lt;/strong>&lt;/p>
&lt;p>Probably.&lt;/p>
&lt;/blockquote>
&lt;p>This is always the case with jailbreaking.&lt;/p>
&lt;p>It&amp;rsquo;s much easier to commit when you have an old device that is already out of
the warranty period.&lt;/p>
&lt;p>Avoid jailbreaking brand new devices. :)&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Can I still use the default reader after jailbreaking?&lt;/strong>&lt;/p>
&lt;p>Yes.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s true: I verified it. This is great. In the (unlikely) case I find out that
KOReader sucks&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, I don&amp;rsquo;t need to regret it.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Is it possible to change screensavers in the native Kindle UI?&lt;/strong>&lt;/p>
&lt;p>Although there are currently no extensions to change the screensavers in
hard-float firmware, it is still possible to change them, but it is not
recommended as it is very easy to brick the device.&lt;/p>
&lt;/blockquote>
&lt;p>Noted. But:&lt;/p>
&lt;blockquote>
&lt;p>You can easily change screensavers with KOReader (search for the
&amp;ldquo;screensavers&amp;rdquo; feature).&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;strong>How can I check if my device is jailbroken?&lt;/strong>&lt;/p>
&lt;p>Type &lt;code>;log&lt;/code> into the search bar, if a message pop ups, you&amp;rsquo;re jailbroken.&lt;/p>
&lt;/blockquote>
&lt;p>And now I&amp;rsquo;m done.&lt;/p>
&lt;p>I cannot stress this enough: it&amp;rsquo;s very important to read the docs thoroughly
before deciding to jailbreak. &lt;a href="https://en.wikipedia.org/wiki/RTFM">RTFM&lt;/a>!&lt;/p>
&lt;p>Perhaps I&amp;rsquo;ll write a follow-up post-jailbreaking user experience blog post.&lt;/p>
&lt;h2 id="appendix">Appendix&lt;/h2>
&lt;pre tabindex="0">&lt;code>% tree Downloads
Downloads
├── koreader-kindlehf-v2025.04.zip
├── kual-mrinstaller-khf.tar.xz
├── renameotabin.zip
├── Update_hotfix_universal.bin
├── Update_KUALBooklet_ALLDEVICES_KS2_install.bin
└── WinterBreak.tar.gz
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Yes, it&amp;rsquo;s called WinterBreak because it got released during Winter (in the
Northern hemisphere).&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Even if I were interested in doing so, I&amp;rsquo;d rather use my phone or my
computer for that. The Kindle Store experience &lt;em>from the Kindle&lt;/em> is
horrible.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>Their domain is &lt;a href="https://koreader.rocks">https://koreader.rocks&lt;/a>&amp;hellip;&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Nostalgia: The Linux Setup - Thiago Perrotta, Student</title><link>https://perrotta.dev/2025/05/nostalgia-the-linux-setup-thiago-perrotta-student/</link><pubDate>Thu, 15 May 2025 22:43:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/nostalgia-the-linux-setup-thiago-perrotta-student/</guid><description>&lt;p>Back in the (g)old(en) days&amp;hellip;in October 2014 I gave an interview to the blog
&amp;ldquo;Linux Rig&amp;rdquo; by &lt;a href="https://steven.ovadia.org/">Steven Ovadia&lt;/a>.&lt;/p>
&lt;p>The original interview was published at
&lt;code>https://linuxrig.com/2015/01/20/the-linux-setup-thiago-perrotta-student/&lt;/code>, but
the link no longer works. It&amp;rsquo;s purposely not hyperlinked because now it&amp;rsquo;s a
&lt;a href="https://en.wikipedia.org/wiki/Domain_parking">parked domain&lt;/a>.&lt;/p>
&lt;p>You can find the original at the &lt;a href="https://web.archive.org/web/20180527155224/https://linuxrig.com/2015/01/20/the-linux-setup-thiago-perrotta-student/">Web
Archive&lt;/a>.
I wanted to reproduce it here&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> for archiving purposes. All credits go to Steven
:)&lt;/p>
&lt;hr>
&lt;h2 id="the-linux-setup--thiago-perrotta-student">The Linux Setup – Thiago Perrotta, Student&lt;/h2>
&lt;p>Steven Ovadia – January 20th, 2015 – 0 Comments&lt;/p>
&lt;p>&lt;em>Thiago touches on a number of interesting points. For instance, he talks about
testing out new distributions and desktops to see what&amp;rsquo;s going on in Linux.
That&amp;rsquo;s something I kind of have to remind myself to do. Everything works well on
my main workhorse (knock wood…) so I have no natural desire to try out other
distributions and desktops. But I try and remember to give different things a
spin, just so I know if there&amp;rsquo;s something better out there, or if there&amp;rsquo;s
something I should steal for my own system. Finally, Thiago pays respect to his
package manager, which is super classy. Package managers are the unsung heroes
of most setups and without them, we&amp;rsquo;d probably have a rougher time trying new
things out.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can find more of The Linux Setup here.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can follow Linux Rig on Google+ here and follow me on Twitter here.&lt;/em>&lt;/p>
&lt;p>&lt;strong>1. Who are you, and what do you do?&lt;/strong>&lt;/p>
&lt;p>I am a Computer and Information Engineering student living in Rio de Janeiro,
Brazil. I usually use the &amp;rsquo;thiagowfx&amp;rsquo; nickname and I&amp;rsquo;d say I am a
free/open source software and community enthusiast. In particular, today I am an
active member of the Arch Linux community. I also have a blog where I write
about projects I&amp;rsquo;m currently working on and new technology and software I&amp;rsquo;m
trying out.&lt;/p>
&lt;p>&lt;strong>2. Why do you use Linux?&lt;/strong>&lt;/p>
&lt;p>Questions we are passionate about are the hardest to answer. But hey, today I&amp;rsquo;d say I use Linux for at least for three reasons (not in any particular order):&lt;/p>
&lt;ul>
&lt;li>community: it is very hard to find a diverse and rich community such as the
GNU/Linux one;&lt;/li>
&lt;li>open source software: this is very important and includes implications on
philosophy and programming (e.g., pull requests);&lt;/li>
&lt;li>package managers!&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. What distribution do you run on your main desktop/laptop?&lt;/strong>&lt;/p>
&lt;p>For a long time, on a monthly basis, I was always switching distributions.
However, during the last year I discovered the one I most enjoy today: Arch
Linux. It is a very customizable, follows KISS (&amp;lsquo;Keep it Short &amp;amp; Simple&amp;rsquo;) and is
a user-centered distro, with a very nice and intelligent community. I still test
the latest improvements of other Linux distributions every now and then, even
though this is less frequent today.&lt;/p>
&lt;p>&lt;strong>4. What desktop environment do you use and why do you use it?&lt;/strong>&lt;/p>
&lt;p>I am always switching desktop environments, mainly because I like to keep up to
date with the latest improvements on the Linux desktop (as with distros).
However, I&amp;rsquo;d say the two I use and like most are Cinnamon and i3. Usually I use
Cinnamon at home and i3 elsewhere (when I don&amp;rsquo;t have a mouse with me).&lt;/p>
&lt;p>&lt;strong>5. What one piece of software do you depend upon with this distribution? Why is it so important?&lt;/strong>&lt;/p>
&lt;p>Package manager: it is the piece of software I most value. I don&amp;rsquo;t know how to
live without one anymore. In particular, pacman is my preferred one. Now, if you
were referring to end-user software, I have no doubt that Emacs is the software
I most use today, although I am giving Vim a try. However, I&amp;rsquo;m not dependent of
any software in particular; each task has its own needs.&lt;/p>
&lt;p>&lt;strong>6. What kind of hardware do you run this setup on?&lt;/strong>&lt;/p>
&lt;p>Currently I have a Lenovo Ideapad S400U Ultrabook, which has an Intel Core i5
processor, 4GB RAM and an Intel Graphics HD 4000 graphics card. It
supports Linux pretty well and out-of-the-box with Intel open source drivers. It
has a small SSD (32GB) where I keep the root partition of whichever Linux
distribution I&amp;rsquo;m using at the moment, and a 500GB HDD where I keep my /home and
an alternate Linux distro.&lt;/p>
&lt;p>&lt;strong>7. Will you share a screenshot of your desktop?&lt;/strong>&lt;/p>
&lt;p>As I&amp;rsquo;ve said, I&amp;rsquo;m always switching desktop environments. However, I keep an
album on Flickr with my latest screenshots. This is the last one I
took, on Arch Linux, with KDE 4.14.&lt;/p>
&lt;p>&lt;em>Interview conducted October 5, 2014&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&lt;strong>The Linux Setup&lt;/strong> is a feature where I interview people about their Linux
setups. The concept is borrowed, if not outright stolen, from this site. If
you&amp;rsquo;d like to participate, drop me a line.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can follow Linux Rig on Google+ here, follow me on Twitter here, and subscribe to the feed here.&lt;/em>&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The reproduction was done verbatim, with the exception of hyperlinks.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>How to file a great feature request</title><link>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</link><pubDate>Wed, 14 May 2025 13:46:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</guid><description>&lt;p>Obviously I&amp;rsquo;m biased to say this but I have just
&lt;a href="https://github.com/gruntwork-io/pre-commit/issues/130">filed&lt;/a> a high-quality
feature request for a software project I am interested to adopt. What makes it
great™:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>describe &lt;strong>concisely&lt;/strong> and &lt;strong>precisely&lt;/strong> &lt;strong>what&lt;/strong> you&amp;rsquo;re looking for&lt;/p>
&lt;ul>
&lt;li>being concise is essential: we live in a fast-paced world. If no one looks
at your FR, then it won&amp;rsquo;t move forward. Period.&lt;/li>
&lt;li>being precise (unambiguous) is important to avoid back-and-forth and
potential bikeshedding&lt;/li>
&lt;li>I prefer to write it using my own words. Using an LLM risks making your FR
robotic and unappealing for anyone to consider. YMMV.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>describe &lt;strong>why&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>what is the &lt;em>raison d&amp;rsquo;être&lt;/em> of the feature? What is the rationale behind it?
How does it make the project better? How does it improve the developer
experience?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>(&lt;em>optional&lt;/em>, but &lt;strong>highly recommended&lt;/strong>) suggest &lt;strong>how&lt;/strong> and offer to address it&lt;/p>
&lt;ul>
&lt;li>Everyone wants everything, but few people want to put in the effort to see
changes take place. Your FR has a much higher chance of becoming reality if
you volunteer your time, effort and expertise to implement the feature
yourself, rather than &lt;a href="https://xkcd.com/2347/">demanding&lt;/a> someone (likely an
unpaid volunteer) to do so for you.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>In my experience it&amp;rsquo;s better to file an issue / ticket / FR first, &lt;strong>prior to&lt;/strong>
sending a pull request. You &lt;em>cannot&lt;/em> know in advance whether the FR is welcome
by the project or its maintainers. Sending in a PR just to see its underlying
&lt;em>raison d&amp;rsquo;être&lt;/em> be rejected is a waste of time, besides being a frustrating
experience.&lt;/p>
&lt;p>Furthermore, the ticket doubles-down as documentation for the PR description /
commit message in the future, should the FR be accepted. The small overhead of
time to file a ticket is a reasonable trade-off.&lt;/p>
&lt;p>Now, even if your FR is great and very reasonable&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, there&amp;rsquo;s absolutely no
guarantee:&lt;/p>
&lt;ul>
&lt;li>you will even get a reply in the first place&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;li>back-and-forth chatter will be quick and responsive&lt;/li>
&lt;li>the maintainers / developers will agree with your sense of &amp;lsquo;usefulness&amp;rsquo;&lt;/li>
&lt;li>the maintainers / developers will agree with &lt;em>how&lt;/em> you believe it should be
tackled or implemented&lt;/li>
&lt;li>your follow-up PR will even be reviewed and, let alone, merged&lt;/li>
&lt;li>your merged PR will make it into a new point release&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Life is hard&lt;/em>. Nonetheless, do not give up! Open source software is beautiful
and serendipitous. :)&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s a subjective matter.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Sometimes it takes &lt;a href="https://github.com/funtoo/keychain/issues/119">more than 3
years&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Kagi</title><link>https://perrotta.dev/2025/05/kagi/</link><pubDate>Sun, 04 May 2025 19:18:48 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/kagi/</guid><description>&lt;p>&lt;strong>TL;DR&lt;/strong>: &lt;a href="https://kagi.com/">Kagi&lt;/a> is a web search engine.&lt;/p>
&lt;p>Why would you use something other than Google, you may ask? &lt;a href="https://blog.kagi.com/age-pagerank-over">That&amp;rsquo;s out of scope
of this post&lt;/a>. If you think Google is
the best and there&amp;rsquo;s no need to replace your search engine, this post is not for
you.&lt;/p>
&lt;p>A while ago I had &lt;a href="https://perrotta.dev/2024/12/switching-from-google-to-chatgpt-search/">switched&lt;/a> my default search
engine from Google to ChatGPT Search, but that didn&amp;rsquo;t last long; eventually I
settled on &lt;a href="http://duckduckgo.com/">DuckDuckGo&lt;/a>.&lt;/p>
&lt;p>Last week, a friend told me he got a trial of Kagi. It wasn&amp;rsquo;t the first time
I&amp;rsquo;ve heard of it: &lt;a href="https://daringfireball.net/2025/04/try_switching_to_kagi">John
Gruber&lt;/a> also blogged
about it.&lt;/p>
&lt;p>Then I decided to try it out myself as well. In general I am happy with
DuckDuckGo, but we can always try something new, and the company materials have
really impressed me.&lt;/p>
&lt;p>I emailed someone at the company and got an 1-month trial of their
&lt;a href="https://kagi.com/pricing">Professional plan&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> – which includes &lt;strong>unlimited&lt;/strong>
searches. This is important: there should be no decision fatigue nor anxiety
about hitting a ceiling in the number of monthly searches.&lt;/p>
&lt;p>What is Kagi? In a Nutshell:&lt;/p>
&lt;blockquote>
&lt;p>Kagi has no ads and is fully supported only by its users. We worked very hard
to provide high quality, fast and tracking-free results at a minimum cost to
ensure sustainability of our operation. By choosing a paid Kagi plan, you are
also helping accelerate our mission of humanizing the web.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Why should I pay for search?&lt;/p>
&lt;p>You&amp;rsquo;re already paying with your time and attention to advertisers who
manipulate your search results, waste your time, and exploit your privacy. Pay
with your wallet instead of your life, and get pure, powerful search that
works for you - not advertisers. Read more.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>What happens if I don&amp;rsquo;t use any searches?&lt;/p>
&lt;p>In months where you don&amp;rsquo;t utilize any searches on your plan, we will
automatically apply a full credit to your account. This credit will be applied
to your next billing cycle, effectively covering your subsequent month&amp;rsquo;s
subscription at no additional cost.&lt;/p>
&lt;/blockquote>
&lt;p>See also their &lt;a href="https://help.kagi.com/kagi/faq/faq.html">FAQ&lt;/a> and &lt;a href="https://kagi.com/privacy">privacy
policy&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Why does Kagi return so few results?&lt;/p>
&lt;p>Kagi only shows you actually relevant search results, so you may be confused
when Kagi returns 57 results and another, ad supported, search engine returns
2.6 million results. This is, in part, because ad supported search engines
have different incentives and want you to stay on their site longer, going
through pages and pages of results, as every interaction is another
opportunity to serve ads.&lt;/p>
&lt;p>Kagi, conversely, strives to deliver the most relevant, unique results within
the top three.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>What data does Kagi collect?&lt;/p>
&lt;p>Only bare necessities to run the service. Please see our privacy policy and
our documentation about privacy protection for more information.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Kagi&amp;rsquo;s business model is unlike any other search engine in the world. This
means we don&amp;rsquo;t need or want your personal information (it would just be an
unwelcome liability). By choosing this business model we know that we are
going to have far less users than mainstream search engine for example, but we
have also removed any incentive to misuse any information you have shared with
us.&lt;/p>
&lt;p>Privacy is a Kagi Feature&lt;/p>
&lt;p>At Kagi, you are our customer, not the product being sold The deal is simple:
Our customers pay for a service and we provide them with a service. This
business model ensures Kagi&amp;rsquo;s and our customers&amp;rsquo; interests are always aligned.&lt;/p>
&lt;p>We value your privacy, and whenever possible we will choose not to require or
save any user data. For Kagi, user data is only a liability - we do not need
or want it. Still, operating a paid service may require some basic information
from our customers, and this document describes how we use it to the best of
our ability.&lt;/p>
&lt;p>See for yourself Our technology choices show we&amp;rsquo;re serious about privacy. You
can check them in your browser.&lt;/p>
&lt;p>Unlike most websites, we do not load any analytics or telemetry.&lt;/p>
&lt;p>Unlike most search engines, we do not track which search result you choose to
click.&lt;/p>
&lt;p>When viewing images, videos or other media results, or using the Kagi
Assistant, we protect your privacy by proxying all connections and data
through our servers.&lt;/p>
&lt;p>We store only the bare minimum of cookies, those required to handle basic
application functionality, such as logging in.&lt;/p>
&lt;/blockquote>
&lt;p>I am currently digging through their
&lt;a href="https://help.kagi.com/kagi/">documentation&lt;/a>. There&amp;rsquo;s a lot to read! There&amp;rsquo;s no
need to, but I am trying to assess whether to pay for them once the trial ends.&lt;/p>
&lt;p>Overall I am quite bullish about them. I have already updated all my browsers in
all my devices (including work) to them. I believe immersion is a very effective
way to evaluate a product.&lt;/p>
&lt;p>They support &lt;a href="https://help.kagi.com/kagi/features/bangs.html">bangs&lt;/a>, just like
DuckDuckGo, meaning that I can append (for example) &lt;code>!g&lt;/code> or &lt;code>!ddg&lt;/code> to bail out
to Google or DuckDuckGo, respectively. I find their user experience around bangs
much better than DuckDuckGo&amp;rsquo;s:&lt;/p>
&lt;ul>
&lt;li>first, there&amp;rsquo;s a &lt;a href="https://kbe.smaertness.net/">bang explorer&lt;/a>
(community-created), and the bang sources are
&lt;a href="https://github.com/kagisearch/bangs">open&lt;/a>&lt;/li>
&lt;li>it&amp;rsquo;s possible to add custom bangs&lt;/li>
&lt;li>it&amp;rsquo;s possible to add custom search engines&lt;/li>
&lt;/ul>
&lt;p>As a practical example: I can invoke their
&lt;a href="https://kagi.com/summarizer">Summarizer&lt;/a> to make a summary of a page:&lt;/p>
&lt;pre tabindex="0">&lt;code>!sum &amp;lt;url&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Or &amp;ldquo;I am feeling lucky&amp;rdquo; with &lt;code>! {search term}&lt;/code>.&lt;/p>
&lt;p>There&amp;rsquo;s &lt;a href="https://help.kagi.com/kagi/api/overview.html">API access&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s built-in &lt;a href="https://blog.kagi.com/kagi-translate">Translation&lt;/a> (Kagi
Translate), accessible at
&lt;a href="https://translate.kagi.com/">https://translate.kagi.com/&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Add translate.kagi.com/ before any URL for instant translation. No apps
needed. Access 244 languages with zero tracking. Install our browser
bookmarklet for quick access.&lt;/p>
&lt;p>Kagi Translate is free for everyone. If you&amp;rsquo;re not a logged in Kagi user,
you&amp;rsquo;ll encounter a simple captcha to prevent automated abuse - a small step
that helps us maintain quality while keeping the service free. Kagi members
get direct access without captchas, integrating seamlessly with their existing
workflow.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://kagi.com/stats">Kagi Search Stats&lt;/a>: it keeps healthily growing.&lt;/p>
&lt;p>&lt;a href="https://help.kagi.com/kagi/search-details/search-speed.html">Kagi Performance&lt;/a>:
it is fast and lightweight.&lt;/p>
&lt;p>If you append a question mark (&lt;code>?&lt;/code>) to a search query, then it automatically
invokes a LLM (&lt;a href="https://help.kagi.com/kagi/ai/quick-answer.html">&amp;lsquo;quick
answer&amp;rsquo;&lt;/a>) to summarize results:&lt;/p>
&lt;blockquote>
&lt;p>Even with an engine as powerful as Kagi you may not be interested in reading
every resulting page and want a synthesis of the information as well as
references to important pages in the search result. Kagi&amp;rsquo;s Quick Answer
quickly produces a summary of the results across the pages returned and
provides references to the pages that are used. This functionality allows you
to quickly consume the desired information from the search while giving you
the pointers to dive deeper into the information if desired.&lt;/p>
&lt;p>Once you have search results returned you can select Quick Answer to quickly
transform the information on the page into the easier to digest format.
Additionally, if you add a question mark at the end of your query (&amp;quot;?&amp;quot;) Quick
Answers will trigger automatically, making it even more convenient to get to
the information you need swiftly. You can also trigger Quick Answer by
pressing &amp;lsquo;q&amp;rsquo; on your keyboard, after the results have loaded.&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ll end this post now, otherwise I&amp;rsquo;d just be parroting the entire Kagi
Documentation here. &lt;strong>TL;DR&lt;/strong>: So far, so good.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Edit(2025-05-14)&lt;/strong>: After using Kagi for about 10 days, I am happy to report
that I&amp;rsquo;ve been quite happy with them. There&amp;rsquo;s no doubt they have a great
product.&lt;/p>
&lt;p>The question to ask yourself is whether it&amp;rsquo;s worth paying $10 / month for
their professional plan, or whether DuckDuckGo is enough for you. If you can
have your company expense them, then it&amp;rsquo;s definitely a no-brainer.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Their standard &lt;a href="https://kagi.com/pricing">trial&lt;/a> sign-up has a limitation
of 100 searches.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The ack + xargs + sed pattern</title><link>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</link><pubDate>Wed, 30 Apr 2025 16:20:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</guid><description>&lt;p>I employ this pattern almost every day:&lt;/p>
&lt;ul>
&lt;li>use &lt;a href="https://beyondgrep.com/">&lt;code>ack&lt;/code>&lt;/a> to search for a given string in a codebase (git repo)&lt;/li>
&lt;li>use &lt;a href="https://man.archlinux.org/man/xargs.1">&lt;code>xargs&lt;/code>&lt;/a> to iterate through each finding&lt;/li>
&lt;li>use &lt;a href="https://www.gnu.org/software/sed/manual/sed.html">&lt;code>sed&lt;/code>&lt;/a> to make a text transformation&lt;/li>
&lt;/ul>
&lt;p>Example of the day:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l | xargs -n &lt;span style="color:#d19a66">1&lt;/span> gsed -i -e &lt;span style="color:#98c379">&amp;#39;s/limit: 2/limit: 5/g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Given multiple &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD app manifests&lt;/a> in the form:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">syncPolicy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">retry&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">limit&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">backoff&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">duration&lt;/span>: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">factor&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">maxDuration&lt;/span>: 1m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>limit: 2&lt;/code> with &lt;code>limit: 5&lt;/code> in all files. That&amp;rsquo;s what the command above
does:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ack -l&lt;/code> lists all files that match the given pattern&lt;/li>
&lt;li>pipe to &lt;code>xargs -n 1&lt;/code> iterates on each of them&lt;/li>
&lt;li>&lt;code>gsed -i&lt;/code> (GNU &lt;code>sed&lt;/code>) makes a text transformation in-place&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s not bulletproof, but it works most of the time.&lt;/p>
&lt;p>Sometimes I use &lt;a href="https://github.com/sharkdp/fd">&lt;code>fd&lt;/code>&lt;/a> to narrow the search down
to a file pattern. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fd -e yaml | xargs ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, though, &lt;code>ack --yaml&lt;/code> would be even simpler.&lt;/p>
&lt;p>When &lt;code>sed&lt;/code> isn&amp;rsquo;t up for the job, &lt;code>awk&lt;/code> tends to be a decent alternative.&lt;/p>
&lt;p>Regular expression replacements aren&amp;rsquo;t always precise.
False positives can easily take place.
Adding &lt;code>\b&lt;/code> (word boundaries) sometimes helps.&lt;/p>
&lt;p>Other times it&amp;rsquo;s better to use a syntax-aware tool instead of &lt;code>sed&lt;/code>.&lt;/p>
&lt;p>For YAML, there&amp;rsquo;s &lt;a href="https://github.com/mikefarah/yq">&lt;code>yq&lt;/code>&lt;/a>.&lt;/p>
&lt;p>For JSON, there&amp;rsquo;s &lt;a href="https://jqlang.org/">&lt;code>jq&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>jq&lt;/code> is like &lt;code>sed&lt;/code> for JSON data - you can use it to slice and filter and map
and transform structured data with the same ease that &lt;code>sed&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>grep&lt;/code> and
friends let you play with text.&lt;/p>
&lt;/blockquote></description></item><item><title>Alpine Linux: the maintainer workflow</title><link>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</link><pubDate>Sun, 20 Apr 2025 15:12:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</guid><description>&lt;p>I maintain &lt;a href="https://pkgs.alpinelinux.org/packages?name=&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=Thiago+Perrotta">a couple of
packages&lt;/a>
on Alpine Linux.&lt;/p>
&lt;p>Every now and then, a new software version is released, and it&amp;rsquo;s my duty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> as an
active package maintainer to update my packages.&lt;/p>
&lt;p>The typical workflow looks like the following.&lt;/p>
&lt;p>First I get an email notification from &amp;ldquo;Alpine Package DB&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Dear Thiago Perrotta&lt;/p>
&lt;p>This is an automatic message send from pkgs.alpinelinux.org
One or more of your aports have been flagged out of date based on
Anitya monitoring system &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/p>
&lt;p>argocd current: 2.14.2-r1 new: 2.14.9&lt;/p>
&lt;p>To update the package you can use our helper script:&lt;/p>
&lt;p>abump aport-version&lt;/p>
&lt;p>If the provided information is incorrect, please let us know on IRC
or &lt;a href="mailto:alpine-infra@alpinelinux.org">alpine-infra@alpinelinux.org&lt;/a>. Thanks!&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s important not to &lt;a href="https://opensource.com/business/15/12/avoid-burnout-live-happy">burn oneself
out&lt;/a>.&lt;/p>
&lt;p>I treat these notifications as an FYI. They &lt;em>are not&lt;/em> prompts to make me
immediately go and update the packages&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. For packages with frequent updates,
like &lt;code>argocd&lt;/code>, I&amp;rsquo;ll let a few patch versions accumulate before I take action.
Other times it is handy to batch package upgrades together so to do them all at
once. I use my personal judgment here. At the very least, this email will
trigger a TODO in my task list, so that it will not be forgotten. &lt;em>At some
point&lt;/em> it will be taken care of.&lt;/p>
&lt;p>Once I am ready to update the package, I &lt;code>ssh&lt;/code> to my Alpine Linux server. There
is absolutely no requirement to update alpine linux packages from alpine linux,
but it&amp;rsquo;s the most convenient to do, and I already have an alpine linux system
anyway.&lt;/p>
&lt;p>Then &lt;code>cd aports/&lt;/code>. This is a local git clone of the &lt;a href="https://gitlab.alpinelinux.org/alpine/aports">aports
tree&lt;/a>
(&lt;a href="https://wiki.alpinelinux.org/wiki/Aports_tree">wiki&lt;/a>).&lt;/p>
&lt;p>&lt;code>git pull&lt;/code>. I tend to clean up after myself, so the last branch is likely
already &lt;code>master&lt;/code>. But, if not, then &lt;code>git reset --hard &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git pull&lt;/code>. Amen.&lt;/p>
&lt;p>Now the real fun starts. And it&amp;rsquo;s surprisingly quick and simple, it feels like
cheating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% abump argocd-2.14.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will update the version and checksums in the corresponding &lt;code>APKBUILD&lt;/code> and
trigger a package build.&lt;/p>
&lt;p>It&amp;rsquo;s sensible to check the package release notes or changelog to find potential
incompatibilities and/or updates to the build process. It&amp;rsquo;s also sensible to
look at the package diffs to inspect for potential malware, which is becoming
increasingly more common these days in open source packages. &amp;ldquo;Secure your supply
chain&amp;rdquo;, as they say it.&lt;/p>
&lt;p>If the build completes successfully, create a new branch (&lt;code>git nb argocd&lt;/code>),
commit, push it (&lt;code>git pushm&lt;/code>), then create a merge request (MR) on
&lt;a href="https://gitlab.alpinelinux.org/">GitLab&lt;/a>. I normally use the Web UI to do so,
but it&amp;rsquo;s also possible to do it with the CLI. A link to create the MR is printed
to stdout upon pushing the branch, which makes the process even easier.&lt;/p>
&lt;p>It could happen that the MR fails CI for some architectures (even if it works
locally on my machine™). These errors need to be dealt with.&lt;/p>
&lt;p>The commit message must follow a certain style. I have a pre-commit script set
up that does it for me. It is typically in this form:&lt;/p>
&lt;pre tabindex="0">&lt;code>testing/argocd: upgrade to 2.14.9
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a rule: only one package per merge request.&lt;/p>
&lt;p>If there are more packages to upgrade, I run &lt;code>git bd&lt;/code> (&amp;ldquo;branch delete&amp;rdquo;) and then
restart this process. It&amp;rsquo;s quite manageable, as I don&amp;rsquo;t maintain a lot of
packages. Perhaps it could be further automated if there were more packages
and/or if the package upgrades were more frequent.&lt;/p>
&lt;p>The final MR looks like the following:
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/83026">!83026&lt;/a>.&lt;/p>
&lt;p>Now I sit tight and wait for approval.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On a &lt;a href="https://xkcd.com/2347/">&lt;em>best-effort&lt;/em>&lt;/a> basis.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Unless it&amp;rsquo;s a security risk or incident (e.g. whenever there&amp;rsquo;s a CVE
associated with it).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The Smalltalk Question</title><link>https://perrotta.dev/2025/04/the-smalltalk-question/</link><pubDate>Sun, 20 Apr 2025 15:04:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-smalltalk-question/</guid><description>&lt;p>&lt;a href="http://www.aaronsw.com/weblog/smalltalkq">The Smalltalk Question&lt;/a> by Aaron
Swartz, via
&lt;a href="https://www.goodreads.com/book/show/24091886-raw-thought-raw-nerve">Raw Thought, Raw Nerve: Inside the Mind of Aaron Swartz&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>One of the minor puzzles of American life is what question to ask people at
parties and suchly to get to know them.&lt;/p>
&lt;p>&amp;ldquo;How ya doin&amp;rsquo;?&amp;rdquo; is of course mere formality, only the most troubled would
answer honestly for anything but the positive.&lt;/p>
&lt;p>&amp;ldquo;What do you do?&amp;rdquo; is somewhat offensive. First, it really means &amp;ldquo;what
occupation do you hold?&amp;rdquo; and thus implies you do little outside your
occupation. Second, it implies that one&amp;rsquo;s occupation is the most salient fact
about them. Third, it rarely leads to further useful inquiry. For only a
handful of occupations, you will be able to say something somewhat relevant,
but even this will no doubt be slightly annoying or offensive. (&amp;ldquo;Oh yeah, I
always thought about studying history.&amp;rdquo;)&lt;/p>
&lt;p>&amp;ldquo;Where are you from?&amp;rdquo; is even less fruitful.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>I propose instead that one ask &lt;strong>&amp;ldquo;What have you been thinking about lately?&amp;rdquo;&lt;/strong>
First, the question is extremely open-ended. The answer could be a book, a
movie, a relationship, a class, a job, a hobby, etc. Even better, it will be
whichever of these is most interesting at the moment. Second, it sends the
message that thinking, and thinking about thinking, is a fundamental human
activity, and thus encourages it. Third, it&amp;rsquo;s easiest to answer, since by its
nature its asking about what&amp;rsquo;s already on the person&amp;rsquo;s mind. Fourth, it&amp;rsquo;s
likely to lead to productive dialog, as you can discuss the topic together and
hopefully make progress. Fifth, the answer is quite likely to be novel. Unlike
books and occupations, people&amp;rsquo;s thoughts seem to be endlessly varied. Sixth,
it helps capture a person&amp;rsquo;s essence. A job can be forced by circumstance and
parentage, but our thoughts are all our own. I can think of little better way
to quickly gauge what a person is really like.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>(emphasis mine)&lt;/em>&lt;/p>
&lt;p>So, what have you been thinking about lately?&lt;/p></description></item><item><title>Overnight Oats</title><link>https://perrotta.dev/2025/04/overnight-oats/</link><pubDate>Sun, 20 Apr 2025 13:09:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/overnight-oats/</guid><description>&lt;p>This post premieres a &lt;a href="https://perrotta.dev/tags/recipe">&lt;code>#recipe&lt;/code>&lt;/a> tag in this blog.&lt;/p>
&lt;p>What I like about this recipe is that it is quite freestyle, one can mix and
match whichever ingredients are available at hand. In my place most
ingredients are almost always available, only fresh fruits have high churn.&lt;/p>
&lt;p>And it&amp;rsquo;s easy to make it fun by adding / removing ingredients at the last
minute, tweaking the overall result each time. The sky is the limit.&lt;/p>
&lt;p>I recommend to have it for &lt;strong>breakfast&lt;/strong> (it&amp;rsquo;s enough!) or as an &lt;strong>afternoon snack&lt;/strong>
(for example, bring a Tupperware to work).&lt;/p>
&lt;h2 id="in-bulk-tupperware">In Bulk (Tupperware)&lt;/h2>
&lt;h3 id="ingredients">Ingredients&lt;/h3>
&lt;p>The most important ingredients are &lt;strong>in bold&lt;/strong>.&lt;/p>
&lt;p>The coolest™ ingredients are &lt;em>in italics&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>base (pick at least one)
&lt;ul>
&lt;li>&lt;strong>milk&lt;/strong> (animal or not; prefer low-fat)&lt;/li>
&lt;li>plain yogurt (greek, vanilla also OK)&lt;/li>
&lt;li>high-protein yogurt&lt;/li>
&lt;li>skyr&lt;/li>
&lt;li>speisequark&lt;/li>
&lt;li>&lt;em>semolina pudding&lt;/em>&lt;/li>
&lt;li>avoid: water&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>grains (pick at least two)
&lt;ul>
&lt;li>&lt;strong>oats&lt;/strong> (steel-cut or rolled -&amp;gt; auf Deutsch: Haferflocken)&lt;/li>
&lt;li>&lt;strong>chia seeds&lt;/strong> (let them &lt;em>soak&lt;/em>)&lt;/li>
&lt;li>flax seeds&lt;/li>
&lt;li>hemp seeds&lt;/li>
&lt;li>avoid&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>: quick oats&lt;/li>
&lt;li>avoid: porridge&lt;/li>
&lt;li>avoid: cereal (Müsli)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>sweet(ener) (pick at least one)
&lt;ul>
&lt;li>&lt;strong>peanut butter&lt;/strong>&lt;/li>
&lt;li>almond butter&lt;/li>
&lt;li>&lt;em>maple syrup&lt;/em>&lt;/li>
&lt;li>&lt;em>acacia honey&lt;/em>&lt;/li>
&lt;li>&lt;em>raw honey&lt;/em>&lt;/li>
&lt;li>wild honey&lt;/li>
&lt;li>date syrup&lt;/li>
&lt;li>&lt;strong>cinnamon&lt;/strong>&lt;/li>
&lt;li>vanilla extract&lt;/li>
&lt;li>avoid: sugar / brown sugar&lt;/li>
&lt;li>avoid: hazelnut butter / Nutella™&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>fruits (pick at least one)
&lt;ul>
&lt;li>bananas&lt;/li>
&lt;li>strawberries&lt;/li>
&lt;li>raspberries&lt;/li>
&lt;li>blueberries&lt;/li>
&lt;li>cherries&lt;/li>
&lt;li>figs&lt;/li>
&lt;li>avoid: dry figs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="preparation">Preparation&lt;/h3>
&lt;h4 id="the-first-day">The first day&lt;/h4>
&lt;p>These are overnight oats, therefore they should ideally be prepared one day
before you intend to consume them. The intent is to leave them simmering in the
fridge while you&amp;rsquo;re sleeping. Needless to say, it will be served &lt;strong>cold&lt;/strong>.
There&amp;rsquo;s a variant of this recipe that is served hot, but it&amp;rsquo;s out of scope of
this post.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Grab a dish to mix the ingredients within. Ideally, &lt;strong>a container with a lid&lt;/strong>
so that it can be stored in the fridge right away once we&amp;rsquo;re done.
Alternatively, a bowl will also do. Don&amp;rsquo;t get a plate. Some people like to do it
in cups (preferably a big cup if you want to eat enough!).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start by adding the base. Normally I will do milk (always available) + some
plain yogurt if available. Cold milk, do not add hot milk! Room temperature is
also OK.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your grains. Oats are essential. Chia and flex seeds are nice to have.
Anything else is a bonus.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your sweet(ener)s. Unless you&amp;rsquo;re on a diet. But frankly, even if you are,
do add some, just be moderate. Peanut or almond butter are perfect. I also
love to add maple syrup, but I typically defer it for later, right before
eating the oats. The same applies to honey.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mix everything. Preferably with a spoon.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put the container in the fridge. Good night!&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="the-second-day">The second day&lt;/h4>
&lt;p>The fruits should be cut in small pieces. Add them to the container.&lt;/p>
&lt;p>Add other sweeteneers (as previously mentioned: maple syrup, honey, etc).&lt;/p>
&lt;p>It&amp;rsquo;s done. Enjoy!&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: When in a rush, you can prepare and eat the oats within the same day.
Just leave them in the fridge for &lt;em>at least&lt;/em> one hour.&lt;/p>
&lt;h2 id="cup--glass">Cup / Glass&lt;/h2>
&lt;p>It&amp;rsquo;s also possible to prepare a smaller portion in a glass.&lt;/p>
&lt;p>Add the content in this order:&lt;/p>
&lt;ol>
&lt;li>oat&lt;/li>
&lt;li>chia / flax seeds&lt;/li>
&lt;li>milk&lt;/li>
&lt;li>yogurt&lt;/li>
&lt;li>sweetener (e.g. maple syrup)&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This post was written without AI, and without any web searches, it&amp;rsquo;s purely from
my memory and experience. Consume (pun intended!) this information at your own
risk.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>What triggers &lt;em>&amp;ldquo;avoid&amp;rdquo;&lt;/em> is one of: (i) experience, (ii) moral, or (iii)
diet.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Serendipity vs Gatekeeping</title><link>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</link><pubDate>Sun, 13 Apr 2025 01:35:29 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</guid><description>&lt;p>Serendipity, via
&lt;a href="https://duckduckgo.com/?q=serendipity+definition&amp;amp;ia=web&amp;amp;iax=definition">DuckDuckGo&lt;/a> dictionary:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>1.&lt;/strong> The faculty of making fortunate discoveries by accident.&lt;/p>
&lt;p>&lt;strong>6.&lt;/strong> Good luck in making unexpected and fortunate discoveries.&lt;/p>
&lt;/blockquote>
&lt;p>Gatekeeping, via
&lt;a href="https://dictionary.cambridge.org/dictionary/english/gatekeeping">Cambridge&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;p>The activity of trying to control who gets particular resources, power, or
opportunities, and who does not.&lt;/p>
&lt;/blockquote>
&lt;p>Serendipity spreader, via &lt;a href="https://perrotta.dev/">yours truly&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>One who facilitates (spreads) serendipity amongst its acquaintances and
peers.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Gatekeeper, via &lt;a href="https://duckduckgo.com/?q=gatekeeper+define&amp;amp;ia=web">DuckDuckGo&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;ol start="3">
&lt;li>One who controls access to something, such as information or services.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Definitions set, here comes the fun part:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Lemma #1&lt;/strong>: Gatekeepers are, by definition, the opposite of serendipity
spreaders. You can visualize them in a 2D scale, from left to right, somewhat
akin to how people attempt to project politics onto a line.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #2&lt;/strong>: Open Source Software (OSS) is a gift™ driven primarily by
serendipity spreaders.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #3&lt;/strong>: In terms of friendships, the optimal point of joy and
satisfaction lies within seeking and maintaining serendipity spreaders whilst
avoiding gatekeepers at all costs. It yields a rewarding continuous feedback
loop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #4&lt;/strong>: Gatekeepers drag serendipity spreaders down. They are like
leeches (parasites).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #5&lt;/strong>: Serendipity spreaders thrive together.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #6&lt;/strong>: In a set full of serendipity spreaders, one gatekeeper is enough
to &lt;a href="https://en.wikipedia.org/wiki/Paradox_of_tolerance">disrupt&lt;/a> the entire
group, thereby leading to the conversion of new gatekeepers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #7&lt;/strong>: In a set full of gatekeepers, one serendipity spreader is enough
to spread serendipity; however, the bar to convert to more serendipity
spreaders is extremely high, and it&amp;rsquo;s very taxing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Several conclusions can be drawn from these lemmas; nonetheless, this is not a
blog about philosophy or morals, therefore the exercise is left to the reader.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I coined this term myself, inspired by hearing about
&lt;a href="https://en.wikipedia.org/wiki/Superspreading_event">superspreaders&lt;/a> during
the COVID-19 pandemic. The definition was written without AI. This is a
badge of honour these days, isn&amp;rsquo;t it? I&amp;rsquo;ll take it.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>First Alpine Linux package in Community</title><link>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</link><pubDate>Tue, 01 Apr 2025 14:27:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</guid><description>&lt;p>How wholesome: someone sent a MR (Merge Request)
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/82047">!82047&lt;/a> in
&lt;code>alpine/aports&lt;/code> with the &lt;a href="https://github.com/google/yamlfmt">&lt;code>yamlfmt&lt;/code>&lt;/a> package
I maintain, moving it from &lt;code>testing/&lt;/code> to &lt;code>community/&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This means the package will be included in the next release of Alpine (3.22) as
part of its official repositories (unlike &amp;ldquo;testing&amp;rdquo;, which is only included in
&amp;ldquo;edge&amp;rdquo;).&lt;/p>
&lt;p>&lt;strong>In other words&lt;/strong>: This is the first time a package I maintain will make it to the
official repositories of a Linux distro I like!&lt;/p>
&lt;p>&lt;strong>Next milestone&lt;/strong>: Follow suit with a project I maintain.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I did not initiate this: it has just happened organically / spontaneously.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>DEFCON radio</title><link>https://perrotta.dev/2025/04/defcon-radio/</link><pubDate>Tue, 01 Apr 2025 13:52:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/defcon-radio/</guid><description>&lt;p>Back in my Windows days, in my first desktop computer, I would happily launch
&lt;a href="https://bsplayer.com/">BSPlayer&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Somewhat later, in my desktop Linux, I would happily launch
&lt;a href="https://www.clementine-player.org/">Clementine&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Now, in macOS, I mostly browse Spotify. But there isn&amp;rsquo;t a lot of serendipity
there: I just find myself browsing the same songs over and over again. Spotify
used to be social, if you connected it to Facebook, you could find what your
friends were listening to. Many of my favorite artists were discovered this way.
These days, however, my generation no longer uses Facebook, and Spotify is
barely social anymore.&lt;/p>
&lt;p>&lt;a href="https://somafm.com/defcon/">DEFCON Radio&lt;/a> can bring some of that nostalgia
back. Well, the entire &lt;a href="http://somafm.com/">soma fm&lt;/a> network is quite decent,
for that matter:&lt;/p>
&lt;blockquote>
&lt;p>Over 30 unique channels of listener-supported, commercial-free,
underground/alternative radio broadcasting to the world. All music hand-picked
by SomaFM&amp;rsquo;s award-winning DJs and music directors.&lt;/p>
&lt;/blockquote></description></item><item><title>Badminton</title><link>https://perrotta.dev/2025/03/badminton/</link><pubDate>Fri, 28 Mar 2025 00:38:18 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/badminton/</guid><description>&lt;p>One of the coolest sports in the world I&amp;rsquo;ve become acquainted with is
&lt;a href="https://en.wikipedia.org/wiki/Badminton">Badminton&lt;/a>. In the beginning it is
quite odd to understand its finesse, but after a while it gets easily
internalized and becomes quite natural.&lt;/p>
&lt;p>You can play it in singles or in doubles. Arguably most of the fun happens when
playing in doubles. You&amp;rsquo;re supposed to develop synergy with your court partner
and understand their play style, and then adapt accordingly. The style need not
be immutable: it&amp;rsquo;s perfectly fine (and common, even) to change tactics as the
game progresses.&lt;/p>
&lt;p>I love how I can express myself freely in the court, whilst have little regard
to formal expectations. I can comfortably (and on-demand) change hands, jump,
squat, put either foot forward, serve the shuttle short or long, position myself
close to the center or close to the edge of the court, go left and right or
backwards and forward. The sky is the limit for freedom and creativity of
movements. It&amp;rsquo;s like a dance wherein you get fully immersed, borderline poetic.&lt;/p>
&lt;p>Few sports give you this much freedom to express yourself as you see fit.&lt;/p></description></item><item><title>Amphetamine: Keep awake</title><link>https://perrotta.dev/2025/03/amphetamine-keep-awake/</link><pubDate>Fri, 28 Mar 2025 00:14:32 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/amphetamine-keep-awake/</guid><description>&lt;p>&lt;a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The most awesome keep-awake app ever created for macOS. Amphetamine can keep
your Mac, and optionally its display(s), awake through a super simple on/off
switch, or automatically through easy-to-configure Triggers. Amphetamine is
extremely powerful and includes advanced features for those who need them, yet
remains intuitive and easy-to-use for those who don&amp;rsquo;t need all of the bells
and whistles.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s like &lt;a href="https://www.caffeine-app.net/">Caffeine&lt;/a> (or one of its dozen
clones), but better.&lt;/p>
&lt;p>Here&amp;rsquo;s how I use it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>on my personal laptop, whenever I am streaming a movie or a TV show (e.g. via
&lt;a href="https://jellyfin.org/">jellyfin&lt;/a>, so that it doesn&amp;rsquo;t cut off the streaming in
the middle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on my work computer, as soon as I start the work day, so that the VPN stays
connected for the whole day, as well as my SSH sessions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Upon launching it a system tray icon appears. A left-click opens up its
contextual menu, exposing lots of knobs and details. A right-click toggles it on
/ off.&lt;/p>
&lt;p>I configure the toggle so that it stays awake for a default of 4 hours for my
personal laptop, and 8-10 hours for my work computer (=the duration of an usual
work day).&lt;/p>
&lt;p>If you don&amp;rsquo;t specify a limit then it stays awake indefinitely, which is
counterproductive: (i) spending more energy and battery than necessary and (ii)
from an operational security perspective, it &lt;em>should&lt;/em> ideally self-lock at some
point, in case you forget to do so.&lt;/p>
&lt;p>I just care about keeping internet and sessions connectivity alive, but it&amp;rsquo;s
also possible to configure it to keep the display on.&lt;/p>
&lt;p>For bonus productivity, configure it to always launch at login, so that
activating it is just one (right) click away.&lt;/p>
&lt;p>Apparently I activated it more than 180 times in my personal laptop, effectively
keeping it awake for more than 24 days. At work, more than 250 sessions for more
than 8 days&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>When writing this post, I just learned that I can activate it via
&lt;a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can augment my &lt;a href="https://perrotta.dev/2024/10/prodaccess/">&lt;code>prodaccess&lt;/code>&lt;/a> script
with that.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>There is definitely something odd with these numbers.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>1password CLI + direnv integration</title><link>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</link><pubDate>Wed, 26 Mar 2025 14:15:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</guid><description>&lt;p>Let&amp;rsquo;s stay you&amp;rsquo;re working on a terraform module that has a sensitive variable
named &lt;code>api_key&lt;/code> in &lt;code>variables.tf&lt;/code>.&lt;/p>
&lt;p>When running &lt;code>terraform apply&lt;/code>, you&amp;rsquo;ll need to supply its value. Every. Single.
Time.&lt;/p>
&lt;p>We can make it persistent by setting &lt;code>export TF_VAR_api_key={my value}&lt;/code>.
However this is only persistent within the current shell.&lt;/p>
&lt;p>To make it persistent across multiple sessions, create a &lt;code>.envrc&lt;/code> file at the
root module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">={&lt;/span>my value&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then source it: &lt;code>source ~/.envrc&lt;/code>. Now you have to source it every single time
you open a new shell.&lt;/p>
&lt;p>We can use &lt;a href="http://direnv.net/">&lt;code>direnv&lt;/code>&lt;/a> to do so automatically. It has been
&lt;a href="https://perrotta.dev/2022/01/direnv-automate-your-environment-variables/">previously covered&lt;/a>. But&amp;hellip;now we have
a secret stored as plain text in our filesystem.&lt;/p>
&lt;p>We could store it in a more secure place, like a password manager, and then have
a mechanism automatically fetch its value.&lt;/p>
&lt;h2 id="first-approach">First approach&lt;/h2>
&lt;p>When using 1Password, the &lt;a href="https://developer.1password.com/docs/cli/">1Password
CLI&lt;/a> is such a mechanism.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>op run --no-masking -- op &lt;span style="color:#e5c07b">read&lt;/span> &lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can fetch the secret reference path from 1Password:
&lt;a href="https://developer.1password.com/docs/cli/secret-references/">docs&lt;/a>. Click &amp;ldquo;Copy
Secret Reference&amp;rdquo; in the corresponding entry item.&lt;/p>
&lt;h2 id="second-approach">Second approach&lt;/h2>
&lt;p>The above is one possibility, and it works flawlessly, but there&amp;rsquo;s a second
approach that uses &lt;code>op run&lt;/code> alone with a secret reference that is dynamically
replaced.&lt;/p>
&lt;p>Create an &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the &lt;code>.envrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>terraform apply&lt;/code> via &lt;code>op run&lt;/code>, as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>op run --env-file&lt;span style="color:#56b6c2">=&lt;/span>.env -- terraform apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/">https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nshipster.com/1password-cli/">https://nshipster.com/1password-cli/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>git freeze, git thaw</title><link>https://perrotta.dev/2025/03/git-freeze-git-thaw/</link><pubDate>Wed, 19 Mar 2025 13:27:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/git-freeze-git-thaw/</guid><description>&lt;p>Now I am becoming one of the snobs™ with the first sentence in the following
paragraph. Here we go.&lt;/p>
&lt;p>I had &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
write me a pair of &lt;code>git&lt;/code> utilities: &lt;code>git freeze&lt;/code> and &lt;code>git thaw&lt;/code>.&lt;/p>
&lt;p>First of all: &amp;ldquo;to thaw&amp;rdquo; means &amp;ldquo;to defrost&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>To change from a frozen solid to a liquid by gradual warming.&lt;/p>
&lt;/blockquote>
&lt;p>Perhaps &lt;code>git unfreeze&lt;/code> would have been more intuitive, let&amp;rsquo;s leave the
bikeshedding to another day though.&lt;/p>
&lt;p>What should these utilities do? They are inspired by the ones with the same name
in Chromium
&lt;a href="https://www.chromium.org/developers/how-tos/install-depot-tools/">depot_tools&lt;/a>.
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up">Direct
link&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-freeze.html">&lt;code>git-freeze(1)&lt;/code>&lt;/a>
allows you to put the current branch in &amp;lsquo;suspended animation&amp;rsquo; by committing
your changes to a specially-named commit on the top of your current branch.
When you come back to your branch later, you can just run
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-thaw.html">&lt;code>git-thaw(1)&lt;/code>&lt;/a>
to get your work-in-progress changes back to what they were.&lt;/p>
&lt;/blockquote>
&lt;p>Installing
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools.html">&lt;code>depot_tools(7)&lt;/code>&lt;/a>
just to get these two utilities is too bloated though. The security software at
work flagged it as malware&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. And they didn&amp;rsquo;t even bother to package it for
Linux distributions in the first place.&lt;/p>
&lt;h2 id="git-freezehttpsgithubcomthiagowfxdotfilesblobmastergitbingit-freeze">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-freeze">&lt;code>git-freeze&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-freeze - Stage all files and create a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Stage all changes (tracked and untracked)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add -A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Create a commit with the freeze message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#98c379">&amp;#34;git-freeze&amp;#34;&lt;/span> -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze created successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-thawhttpsgithubcomthiagowfxdotfilesblobmastergitbingit-thaw">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-thaw">&lt;code>git-thaw&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-thaw - Undo a git-freeze operation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if there&amp;#39;s at least one commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git rev-parse --verify HEAD &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: No commits yet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if the last commit is a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git log -n &lt;span style="color:#d19a66">1&lt;/span> --pretty&lt;span style="color:#56b6c2">=&lt;/span>%B | grep -q &lt;span style="color:#98c379">&amp;#34;^git-freeze&lt;/span>$&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Last commit is not a git-freeze commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Undo the git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> git rev-parse --verify HEAD^ &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If there&amp;#39;s a parent commit, reset to it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git reset &lt;span style="color:#98c379">&amp;#34;HEAD^&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If it&amp;#39;s the initial commit, delete the reference and unstage everything&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git update-ref -d HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git restore --staged .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze thawed successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="post-ai-cleanup">Post-AI cleanup&lt;/h2>
&lt;p>The only change I had to make was to add &lt;code>-n&lt;/code> to &lt;code>git commit&lt;/code> in &lt;code>git-freeze&lt;/code> so
that pre-commit hooks would be skipped upon freeze.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Within an existing &lt;code>git&lt;/code> repository, do some work in a custom branch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decide that something else more important and/or urgent needs your attention.
Let go of &lt;a href="https://git-scm.com/docs/git-worktree">git worktrees&lt;/a> in this
instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git freeze&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Switch to a new branch. Do whatever. Done.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git checkout &amp;lt;your previous branch&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git thaw&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Resume your previous work. Profit.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Edit(2025-03-20)&lt;/strong>: A friend asked that is the difference between &lt;code>git freeze&lt;/code>
and &lt;code>git stash&lt;/code>. The main difference is that &lt;code>git stash&lt;/code> does not handle files
not yet tracked by &lt;code>git&lt;/code>, whereas &lt;code>git freeze&lt;/code> does. I think of &lt;code>freeze&lt;/code> as the
equivalent of completely clearing up my physical desk of all objects so that I
can focus on something else.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;em>An agentic coding tool made by Anthropic. Currently in beta as a research
preview.&lt;/em>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In hindsight that&amp;rsquo;s not even surprising.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Filling in the gaps of the internet</title><link>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</link><pubDate>Fri, 14 Mar 2025 16:12:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</guid><description>&lt;p>&lt;a href="https://evanhahn.com/filling-in-the-gaps-of-the-internet/">Filling in the gaps of the internet&lt;/a> by Evan Hahn:&lt;/p>
&lt;blockquote>
&lt;p>Here&amp;rsquo;s a small philosophy I have about the internet:&lt;/p>
&lt;p>I believe that it&amp;rsquo;s my duty to publish the answer to previously-unanswered
questions. That way, the next person who comes along has an easier time.&lt;/p>
&lt;/blockquote>
&lt;p>Hell yes!&lt;/p>
&lt;blockquote>
&lt;p>For example, I was once trying to figure out how to skip the first line of a
CSV file in Python. When I did a web search for &amp;ldquo;python skip first line of
CSV&amp;rdquo;, I couldn&amp;rsquo;t find the answer.&lt;/p>
&lt;p>After a few minutes, I figured it out myself. Then, I wrote a &lt;a href="https://evanhahn.com/python-skip-header-csv-reader/">quick blog
post&lt;/a> explaining my
solution…and now it&amp;rsquo;s one of the most popular posts on my site! Even though
the post only took a few minutes to write, it&amp;rsquo;s been one of my most viewed
over the last decade, (presumably) because so many people are trying to do the
exact same thing.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://perrotta.dev/2025/02/crawling-/-indexing-is-wild/">Hell yes!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Of course, this is a guideline, not a rule. Sometimes I don&amp;rsquo;t feel very
confident in my answer and don&amp;rsquo;t want to publish bogus information. Sometimes
I&amp;rsquo;m busy and don&amp;rsquo;t have time for a writeup, especially for more complex stuff.
And sometimes, nobody cares—how to compute a CRC32 checksum in Crystal has not
been a big hit; I might have wasted my time with that one.&lt;/p>
&lt;/blockquote>
&lt;p>And fair enough.&lt;/p>
&lt;p>Time is limited, after all.&lt;/p></description></item></channel></rss>