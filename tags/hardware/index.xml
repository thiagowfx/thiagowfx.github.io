<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Hardware on Not Just Serendipity</title><link>https://www.perrotta.dev/tags/hardware/</link><description>Recent content in Hardware on Not Just Serendipity</description><generator>Hugo -- 0.127.0</generator><language>en-us</language><copyright>Copyright © 2021 - 2024 Thiago Perrotta • CC BY-NC-SA 4.0 • RSS •</copyright><lastBuildDate>Wed, 12 Jan 2022 18:09:38 -0500</lastBuildDate><atom:link href="https://www.perrotta.dev/tags/hardware/index.xml" rel="self" type="application/rss+xml"/><item><title>★ Keychron K2: Review</title><link>https://www.perrotta.dev/2022/01/keychron-k2-review/</link><pubDate>Wed, 12 Jan 2022 18:09:38 -0500</pubDate><guid>https://www.perrotta.dev/2022/01/keychron-k2-review/</guid><description>&lt;p>This is a follow-up post of &lt;a href="https://www.perrotta.dev/2021/12/keychron-k2-linux-setup/">Keychron K2: Linux Setup&lt;/a>. The previous post focused on the configuration of the keyboard, this one focuses on its user experience from the point of view of a Software Engineer.&lt;/p></description><content:encoded><![CDATA[<p>This is a follow-up post of <a href="https://www.perrotta.dev/2021/12/keychron-k2-linux-setup/">Keychron K2: Linux Setup</a>. The previous post focused on the configuration of the keyboard, this one focuses on its user experience from the point of view of a Software Engineer.</p>
<h2 id="previously">Previously&hellip;</h2>
<p>My first (and previous) mechanical keyboard was a <a href="https://www.logitech.com/assets/64198/g610-orion-red.pdf">Logitech G610 Orion
Red</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. It&rsquo;s a full wired keyboard with Cherry MX Red switches
(linear) and dedicated multimedia keys. In my opinion it is a solid choice for
beginners because its interface is quite familiar thanks to the wide range of
available keys. It is branded as a gaming keyboard but frankly it was a fine
office keyboard as well. However after using it for a while I wanted to
upgrade.</p>
<p>The natural upgrade path would contain one or more of the following features, in order of importance:</p>
<ol>
<li>good support for both <strong>Linux</strong> and macOS, especially Linux</li>
<li><strong>compact</strong>: tenkeyless a.k.a. 80%, or 75%<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup></li>
<li><strong>portable</strong>: wireless, either with a dongle or with bluetooth or both</li>
<li>with decent battery life: should outlast at least a week of office work</li>
<li>not overpriced: ~$200 CAD budget</li>
<li>playful: with RGB backlight (instead of white LED)</li>
</ol>
<p>Given those, a natural upgrade path would have been the <a href="https://www.logitechg.com/en-ca/products/gaming-keyboards/g915-tkl-wireless.html">Logitech G915
TKL</a>. Its main caveat is that it is relatively overpriced,
~$300 CAD. Above that $300 CAD point one should arguably be looking for
ergonomic and/or fully programmable (QMK firmware) keyboards, like the Kinesis
Advantage and/or the Ergodox EZ<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>. Even though the G915 TKL is rock solid, it
didn&rsquo;t have any fancy features to justify that investment.</p>
<h2 id="the-quest-for-the-_perfect_-keyboard">The quest for the <em>perfect</em> keyboard&hellip;</h2>
<p>I then proceeded to outsource my luck to the wisdom of the crowds, by asking
for recommendations in a mailing list at $DAYJOB, giving them a subset of the
requirements above.</p>
<p>The choice was then obvious: I&rsquo;d get a <strong>Keychron</strong>. It fit all of my
requirements perfectly. The <a href="https://en.wikipedia.org/wiki/The_Paradox_of_Choice">issue</a> was that Keychron had
<a href="https://www.keychron.com/collections/all-products">so many choices</a> to pick from.</p>
<figure class="align-center "><a href="https://xkcd.com/1741/">
    <img loading="lazy" src="https://imgs.xkcd.com/comics/work.png#center"
         alt="Despite it being imaginary, I already have SUCH a strong opinion on the cord-switch firing incident."/> </a><figcaption>
            <p>XKCD Courtesy of Randall Munroe</p>
        </figcaption>
</figure>

<p>After some deliberation I had two options in mind: <a href="https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard">Keychron K2</a>
and <a href="https://www.keychron.com/products/keychron-k1-wireless-mechanical-keyboard">Keychron K1</a> TKL. The main difference between them is that
the K1 is a low-profile keyboard. I didn&rsquo;t know what low-profile meant at the
time and had to do some research to figure it out<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup>.</p>
<p>In the end I opted for the <a href="https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard"><strong>Keychron K2</strong></a>, red switches (linear),
with RGB backlight.</p>
<h2 id="the-keyboard">The keyboard</h2>
<p>The keyboard met all my expectations, even surpassing them, I am quite satisfied overall:</p>
<dl>
<dt>Linux support</dt>
<dd>Great out-of-the-box support, it just works. Even though I <a href="https://www.perrotta.dev/2021/12/keychron-k2-linux-setup/">tweaked</a> a few configs, it wasn&rsquo;t strictly
necessary. In particular, there&rsquo;s a physical toggle where you can choose between
macOS (=Linux) or Windows mode. Furthermore they provide both macOS-style (command, option, etc) and
Windows-style keycaps (super, alt, etc). For Linux I tend to stick with the Windows ones.</dd>
<dt>Compact</dt>
<dd>A 75% keyboard is compact by definition, what else could I add?
I wouldn&rsquo;t go lower than that though, in my opinion removing the function keys
goes too far and makes the keyboard harder to use. A Tenkeyless / 80% option
would also be compact enough while maybe increasing comfort a little bit, but
I managed to adapt quickly to the 75% layout. Multimedia and OS keys are easily
available by the means of <code>Fn + F1</code>, etc.</dd>
<dt>Portable</dt>
<dd>It has bluetooth, but can also be used while plugged in. There&rsquo;s a toggle that
controls which mode (wireless or wired) to use. The bluetooth has 3 channels and
it&rsquo;s very easy to switch between them: <code>Fn + 1</code>, <code>Fn + 2</code>, <code>Fn + 3</code>. This makes it easy
to switch between laptops and/or workstation, work and/or personal. The cable connector
is USB-C which in my opinion is a must these days (2020s).</dd>
<dt>Battery life</dt>
<dd>Battery lasts more than enough, to the point that I don&rsquo;t even need to care about it.
I tend to recharge it every 2 weeks or so. <code>Fn + b</code> will let me have a visual indication
of how much juice is still left. The keyboard automatically sleeps after 10 minutes of inactivity
in order to save battery, which I think is a nice bonus, I don&rsquo;t need to worry about turning it off.
This can be disabled if it ends up being annoying, though.</dd>
<dt>Great value for money</dt>
<dd>$90 USD at the time of this writing. Because I didn&rsquo;t want to deal with international shipping, I ended up
simply buying it from one of their official local retailers in Canada, <a href="https://oneofzero.net/">OneOfZero</a>. This
slightly increased what I paid for it (~$150 CAD with taxes), on the other hand the shipping was really fast. Just
beware, this particular retailer does not have a friendly return policy, if I recall correctly they charge a 25% fee
and end up throwing the keyboard away (landfill), which is very depressing.</dd>
<dt>Playful</dt>
<dd>The RGB lighting is fluff and completely irrelevant in terms of productivity, however it adds a playful touch to the keyboard.
I would say that white lighting is enough, but sometimes it&rsquo;s just <em>cool</em> to change to different color(s).
What can I say, we humans are visual creatures. You can easily adjust the light brightness and toggle it on/off (<code>Fn + light</code>),
plus there are several patterns to choose from. I tend to use a still pattern because it isn&rsquo;t distracting for programming or
other type of work that requires focus.</dd>
</dl>
<p><strong>Finally</strong>: The keyboard keycaps are quite sturdy and stick well in place. I had some
issues with my previous keyboard where some of its keycaps would easily fall
off it when moving it within my backpack. I do not have this issue with the
Keychron.</p>
<h2 id="future">Future</h2>
<p>Mechanical keyboards are meant to last. I do not intend to upgrade it any time
soon. However, if/when I ever do it, I will be looking for the following features:</p>
<ul>
<li>QMK firmware / programmable: would unlock more workflow possibilities. The
Keychron Q1 would be a good candidate for this.</li>
<li>With a dongle, in addition to bluetooth. Because sometimes bluetooth is just
annoying and/or unreliable. The Logitech G915 TKL has a dongle.</li>
<li>Other switches? So far I&rsquo;ve only used red ones (linear). More silent switches
could be useful.</li>
<li>Ergonomic: Whether it&rsquo;s a split, an ortholinear or just a curved keyboard,
I figure that at some point it will be a good investment for my wrists.
Adaptation is difficult but it may be necessary one day.</li>
</ul>
<p>I am not particularly attracted to custom keycaps, they are cute but not my cup
of tea. And I also do not see the appeal of hot swappable keycaps. I can
understand why some folks appreciate those features, customizability is
powerful, but for me it&rsquo;s less stressful to keep things simple.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Linked to the <code>.pdf</code> because apparently the SKU isn&rsquo;t listed in the Logitech product website anymore. At the time, it cost ~$120 CAD.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>This requirement indirectly excluded all those gaming keyboards with dedicated macro and/or multimedia keys, if they ended up increasing the overall keyboard surface area.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>In the past, I had the opportunity to borrow these from coworkers for a week but couldn&rsquo;t quite adapt to them, their learning curve is quite steep. Maybe I&rsquo;ll try that again in the future.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>It basically means the keys are thinner than usual, comparable to laptop keyboard keys.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>★ Keychron K2: Linux Setup</title><link>https://www.perrotta.dev/2021/12/keychron-k2-linux-setup/</link><pubDate>Sat, 11 Dec 2021 20:59:21 -0500</pubDate><guid>https://www.perrotta.dev/2021/12/keychron-k2-linux-setup/</guid><description>&lt;p>I recently purchased a &lt;a href="https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard">Keychron K2&lt;/a> mechanical keyboard. It is a 75% keyboard that has bluetooth. This article describes some quality-of-life improvements to use it with a Linux system.&lt;/p></description><content:encoded><![CDATA[<p>I recently purchased a <a href="https://www.keychron.com/products/keychron-k2-wireless-mechanical-keyboard">Keychron K2</a> mechanical keyboard. It is a 75% keyboard that has bluetooth. This article describes some quality-of-life improvements to use it with a Linux system.</p>
<p><strong>Note</strong>: Tested on Arch Linux only.</p>
<h2 id="kernel-module">Kernel Module</h2>
<p>Keychron keyboards are recognized out-of-the-box as Apple keyboards on Linux systems.</p>
<p>The corresponding kernel module is <code>hid_apple</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ modinfo hid_apple
</span></span></code></pre></div><p>Ensure the module is loaded within the initram for setups that use LUKS:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ grep MODULES -B <span style="color:#ae81ff">1</span> /etc/mkinitcpio.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># hid_apple for Keychron K2</span>
</span></span><span style="display:flex;"><span>MODULES<span style="color:#f92672">=(</span>hid_apple<span style="color:#f92672">)</span>
</span></span></code></pre></div><p>This works for wired mode but alas it&rsquo;s not possible to use the keyboard wirelessly to type in your LUKS password unless extra steps are taken:</p>
<ul>
<li>Install the <a href="https://aur.archlinux.org/packages/mkinitcpio-bluetooth/"><code>mkinitcpio-bluetooth</code></a> package, currently available in the AUR.</li>
<li>Add the <code>bluetooth</code> hook to your mkinitcpio, ensuring it comes before <code>encrypt</code>.</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ grep HOOKS -B <span style="color:#ae81ff">1</span> /etc/mkinitcpio.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># bluetooth for Keychron K2</span>
</span></span><span style="display:flex;"><span>HOOKS<span style="color:#f92672">=(</span>base udev autodetect keyboard bluetooth modconf block encrypt filesystems resume fsck<span style="color:#f92672">)</span>
</span></span></code></pre></div><ul>
<li>Regenerate it: <code>% mkinitcpio -P</code>.</li>
</ul>
<h2 id="bluetooth">Bluetooth</h2>
<p>There are 3 bluetooth slots, corresponding to the <code>1</code>, <code>2</code> and <code>3</code> keys.</p>
<p>To put the keyboard in pairing mode, hold <code>Fn + &lt;n&gt;</code> for a few seconds. The key will persistently blink.
From the computer, connect to the device named <code>Keychron K2</code>. Trust the keyboard.</p>
<p>Switch slots by pressing <code>Fn + &lt;n&gt;</code> once. There is some light feedback to indicate the switch.</p>
<p>Bluetooth works well out-of-the-box, but the keyboard automatically sleeps after 10 minutes of inactivity to save energy.
While it is possible to disable this behavior, I find it welcome. It is a hassle though because the bluetooth device refuses to reconnect once the keyboard is awaken. The naive solution is to pair it again from scratch, but a better user experience is to change bluetooth settings:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat /etc/bluetooth/main.conf
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>General<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>FastConnectable<span style="color:#f92672">=</span>true
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>Policy<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>UserspaceHID<span style="color:#f92672">=</span>true
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>And then restart bluetooth to apply them:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% systemctl restart bluetooth
</span></span></code></pre></div><p>This way the keyboard always automatically reconnects to the computer.</p>
<p>I also find it convenient to leave bluetooth enabled on startup:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span><span style="color:#75715e"># Enable the bluetooth daemon.</span>
</span></span><span style="display:flex;"><span>% systemctl enable bluetooth
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Enable the bluetooth adapter.</span>
</span></span><span style="display:flex;"><span>$ cat /etc/bluetooth/main.conf
</span></span><span style="display:flex;"><span>...
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>Policy<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>AutoEnable<span style="color:#f92672">=</span>true
</span></span><span style="display:flex;"><span>...
</span></span></code></pre></div><p>Finally, another tweak is to make the bluetooth adapter stay awake otherwise it may periodically disconnect:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat /etc/modprobe.d/btusb.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Turn off bluetooth autosuspend.</span>
</span></span><span style="display:flex;"><span>options btusb enable_autosuspend<span style="color:#f92672">=</span><span style="color:#ae81ff">0</span>
</span></span></code></pre></div><h2 id="function-keys-and-multimedia-keys">Function Keys and Multimedia Keys</h2>
<p>The default <code>fnmode</code> is set to multimedia keys:</p>
<pre tabindex="0"><code>0 = disabled
1 = normally media keys, switchable to function keys by holding Fn key (Default)
2 = normally function keys, switchable to media keys by holding Fn key
</code></pre><p>I prefer to set it to function keys. One of the reasons for that is to make
switching TTYs (Ctrl+Alt+Fn) possible. For some reason, Fn doesn&rsquo;t seem to work
in TTYs.</p>
<p>Change it in the current session only:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% echo <span style="color:#ae81ff">2</span> &gt;&gt; /sys/module/hid_apple/parameters/fnmode
</span></span></code></pre></div><p>If you do not have a root shell, use <code>sudo</code> / <code>doas</code> + <code>tee</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% echo <span style="color:#ae81ff">2</span> | sudo tee /sys/module/hid_apple/parameters/fnmode
</span></span></code></pre></div><p>Change it permanently:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ cat /etc/modprobe.d/hid_apple.conf
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Use function keys by default. Press Fn to use multimedia keys.</span>
</span></span><span style="display:flex;"><span>options hid_apple fnmode<span style="color:#f92672">=</span><span style="color:#ae81ff">2</span>
</span></span></code></pre></div><p>And then reload the kernel module:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% modprobe -r hid_apple <span style="color:#f92672">&amp;&amp;</span> modprobe hid_apple
</span></span></code></pre></div><h2 id="insert-key">Insert Key</h2>
<p>By default there is no native <code>Insert</code> key. Use <code>Fn + Del</code> to trigger <code>Insert</code>. For example, <code>Fn + Shift + Del</code> works like <code>Shift + Insert</code> in X11, yielding paste selection.</p>
<h2 id="battery">Battery</h2>
<p>Check the battery level programatically:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% pacman -S upower
</span></span><span style="display:flex;"><span>$ upower --dump | grep -i keyboard -A <span style="color:#ae81ff">7</span> | grep percentage
</span></span><span style="display:flex;"><span>    percentage:          71%
</span></span></code></pre></div><p>This only works in bluetooth mode (not in wired mode).</p>
<h2 id="shortcuts">Shortcuts</h2>
<ul>
<li>Hold <code>Fn + [1 | 2 | 3]</code> for a few seconds: Put bluetooth slot in pairing mode. The corresponding LED will persistently blink until pairing is complete.</li>
<li><code>Fn + [1 | 2 | 3]</code>: Toggle bluetooth slot. The corresponding LED will briefly blink.</li>
<li><code>Fn + b</code>: Check battery level visually. Green is more than 70%, blue is more than 30%, otherwise it will flash.</li>
<li><code>Fn + Light</code>: Toggle keyboard lights on/off.</li>
<li><code>Fn + [Left | Right]</code>: Browse keyboard light color schemes.</li>
</ul>
<h2 id="references">References</h2>
<ul>
<li><a href="https://wiki.archlinux.org/title/Apple_Keyboard">https://wiki.archlinux.org/title/Apple_Keyboard</a></li>
<li><a href="https://github.com/kurgol/keychron">https://github.com/kurgol/keychron</a></li>
<li><a href="https://gist.github.com/andrebrait/961cefe730f4a2c41f57911e6195e444">https://gist.github.com/andrebrait/961cefe730f4a2c41f57911e6195e444</a></li>
<li><a href="https://mikeshade.com/posts/keychron-linux-function-keys/">https://mikeshade.com/posts/keychron-linux-function-keys/</a></li>
<li><a href="https://github.com/kurgol/keychron/blob/master/k2.md">https://github.com/kurgol/keychron/blob/master/k2.md</a></li>
</ul>]]></content:encoded></item></channel></rss>