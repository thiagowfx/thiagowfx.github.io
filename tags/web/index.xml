<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>web on Not Just Serendipity</title><link>https://thiagowfx.github.io/tags/web/</link><description>Recent content in web on Not Just Serendipity</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>tbperrotta@gmail.com (Thiago Perrotta)</managingEditor><webMaster>tbperrotta@gmail.com (Thiago Perrotta)</webMaster><copyright>Copyright © 2021 - 2023 Thiago Perrotta • [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/) • [RSS](/index.xml) •</copyright><lastBuildDate>Fri, 25 Mar 2022 23:26:37 -0300</lastBuildDate><atom:link href="https://thiagowfx.github.io/tags/web/index.xml" rel="self" type="application/rss+xml"/><item><title>Send emails straight to spam</title><link>https://thiagowfx.github.io/2022/03/send-emails-straight-to-spam/</link><pubDate>Fri, 25 Mar 2022 23:26:37 -0300</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/03/send-emails-straight-to-spam/</guid><description>Just tested straight to spam today:
Love emails but hate people? Don’t want someone 🤡 at your party 🥳 but have to invite them 🤢 cause your mom 💁‍♀️ made you? Trust Straight 2 Spam to send your v important email 📧 straight to their spam 🗑
Click the button below👇 to copy a nasty ❌ ooey ❌ gooey ❌ spam-keyword filled invisible message 🔤 for your email that you totally sent on time ⏰ but the 🐦 dodo-brain 🧠 won&amp;rsquo;t see it because they didn’t check their spam folder 📂 (Just make sure you&amp;rsquo;re not in the recipient&amp;rsquo;s address book 📇, or all bets are off 🙅‍♀️)</description><content:encoded><![CDATA[<p>Just tested <a href="https://straight2spam.xyz">straight to spam</a> today:</p>
<blockquote>
<p>Love emails but hate people? Don’t want someone 🤡 at your party 🥳 but have to invite them 🤢 cause your mom 💁‍♀️ made you? Trust Straight 2 Spam to send your v important email 📧 straight to their spam 🗑</p>
<p>Click the button below👇 to copy a nasty ❌ ooey ❌ gooey ❌ spam-keyword filled invisible message 🔤 for your email that you totally sent on time ⏰ but the 🐦 dodo-brain 🧠 won&rsquo;t see it because they didn’t check their spam folder 📂 (Just make sure you&rsquo;re not in the recipient&rsquo;s address book 📇, or all bets are off 🙅‍♀️)</p>
</blockquote>
<p>It works exactly as advertised:</p>
<ul>
<li>Send an email to someone whose address book contains your email address, and it will <em>not</em> go to spam.</li>
<li>Send an email to someone whose address book does <em>not</em> contain your email address, and it goes straight to the spam folder.</li>
</ul>
<p>The email body is indeed invisible, at least in the Gmail web UI. Even <code>Ctrl+A</code> won&rsquo;t reveal it. If you click &ldquo;Show original&rdquo; to inspect the full message body and headers though, you&rsquo;ll see some junk like the following:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-text" data-lang="text"><span style="display:flex;"><span>Hello#1 $$$ 100% Act now Action Additional income Affordable All
</span></span><span style="display:flex;"><span>natural/new Amazed Apply now Avoid Be amazed/your own Bitcoin boss
</span></span><span style="display:flex;"><span>Beneficiary Billing Billion Bonus Boss Buy Call!!!!!! free/now Cancel
</span></span><span style="display:flex;"><span>Crypto Cash Casino
</span></span></code></pre></div><p>There&rsquo;s actually more, but I don&rsquo;t want to make this post too spammy for search engines.</p>
<p>The aforementioned text is wrapped in this HTML:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#f92672">div</span> <span style="color:#a6e22e">dir</span><span style="color:#f92672">=</span><span style="color:#e6db74">3D&#34;ltr&#34;</span>&gt;Hello&lt;<span style="color:#f92672">span</span> <span style="color:#a6e22e">style</span><span style="color:#f92672">=</span><span style="color:#e6db74">3D&#34;color:rgb(255,255,255);font-family:&amp;qu=</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">ot</span><span style="color:#960050;background-color:#1e0010">;</span><span style="color:#a6e22e">Comic</span> <span style="color:#a6e22e">Sans</span> <span style="color:#a6e22e">MS</span><span style="color:#960050;background-color:#1e0010">&amp;</span><span style="color:#a6e22e">quot</span><span style="color:#960050;background-color:#1e0010">;;</span><span style="color:#a6e22e">font-size:1px</span><span style="color:#960050;background-color:#1e0010">&#34;</span>&gt;
</span></span></code></pre></div><p>Which explains why it is &lsquo;invisible&rsquo; (note the white color).</p>
]]></content:encoded></item><item><title>HTTPS Everywhere: So long and thanks for all the fish</title><link>https://thiagowfx.github.io/2022/03/https-everywhere-so-long-and-thanks-for-all-the-fish/</link><pubDate>Tue, 22 Mar 2022 01:09:13 -0300</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/03/https-everywhere-so-long-and-thanks-for-all-the-fish/</guid><description>&lt;p>EFF&amp;rsquo;s&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> &lt;a href="https://chrome.google.com/webstore/detail/https-everywhere/gcbommkclmclpchllfjekcdonpmejbdp">HTTPS Everywhere&lt;/a> is a browser extension available for all major browsers that automatically upgrades HTTP to HTTPS on supported websites.&lt;/p></description><content:encoded><![CDATA[<p>EFF&rsquo;s<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> <a href="https://chrome.google.com/webstore/detail/https-everywhere/gcbommkclmclpchllfjekcdonpmejbdp">HTTPS Everywhere</a> is a browser extension available for all major browsers that automatically upgrades HTTP to HTTPS on supported websites.</p>
<p>Other than adblocking, it&rsquo;s one of the first extensions I add to a fresh browser installation.</p>
<p>Today I learned it is apparently not needed anymore. Both Google Chrome and Firefox have settings these days to perform exactly the same functionality of the extension.</p>
<p>In Google Chrome do: <a href="chrome://settings">chrome://settings</a> -&gt; Security and Privacy -&gt; Advanced -&gt; Toggle &lsquo;Always use secure connections&rsquo; on.</p>
<p>In Firefox the option is located on Settings -&gt; Privacy &amp; Security -&gt; HTTPs only mode.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>EFF is a big proponent and advocate for a secure web, being one of the core responsible actors for <a href="http://certbot.eff.org">certbot</a> and <a href="https://letsencrypt.org">Let&rsquo;s Encrypt</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Bypass news article paywalls</title><link>https://thiagowfx.github.io/2022/03/bypass-news-article-paywalls/</link><pubDate>Sun, 06 Mar 2022 21:49:53 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/03/bypass-news-article-paywalls/</guid><description>&lt;p>I try to avoid websites with paywalls. If I really like the website and it
deserves my attention, I will throw in a monthly subscription for it.
High-quality content deserves to be supported. The fragmentation isn&amp;rsquo;t always
great and it&amp;rsquo;s often hard to keep track of multiple distinct news sources and
portals / subscriptions, but that&amp;rsquo;s a topic for another day.&lt;/p>
&lt;p>Sometimes people will link to news articles or websites with paywalls from
various sources (blogs, social media, other news articles, etc). I&amp;rsquo;d rather
know in advance that those articles are paywalled, but that&amp;rsquo;s not always
possible. After clicking them, curiosity already killed the cat.&lt;/p>
&lt;p>There are several ways to access those as one-offs. I will add a disclaimer
that I do not publicly endorse any of those methods, they are just mentioned
for educational purposes.&lt;/p></description><content:encoded><![CDATA[<p>I try to avoid websites with paywalls. If I really like the website and it
deserves my attention, I will throw in a monthly subscription for it.
High-quality content deserves to be supported. The fragmentation isn&rsquo;t always
great and it&rsquo;s often hard to keep track of multiple distinct news sources and
portals / subscriptions, but that&rsquo;s a topic for another day.</p>
<p>Sometimes people will link to news articles or websites with paywalls from
various sources (blogs, social media, other news articles, etc). I&rsquo;d rather
know in advance that those articles are paywalled, but that&rsquo;s not always
possible. After clicking them, curiosity already killed the cat.</p>
<p>There are several ways to access those as one-offs. I will add a disclaimer
that I do not publicly endorse any of those methods, they are just mentioned
for educational purposes.</p>
<p>The most typical way is to open an incognito tab or window in your browser with
the desired URL. This works because many paywalls are often implemented with
browser cookies.</p>
<p>The second most typical way is to use a VPN to appear that you&rsquo;re accessing the
URL from another IP address. This works for websites that add rolling article
limits per IP address.</p>
<p>Occasionally some large news websites will implement paywalls poorly:</p>
<blockquote>
<p>The idea is pretty simple, news sites want Google to index their content so
it shows up in search results. So they don&rsquo;t show a paywall to the Google
crawler. We benefit from this because the Google crawler will cache a copy of
the site every time it crawls it.</p>
<p>All we do is show you that cached, unpaywalled version of the page.</p>
</blockquote>
<p><a href="https://12ft.io/">12ft</a> automatically uses this mechanism to display cached
versions of news articles. If you&rsquo;re in <code>&lt;url&gt;</code>, just prepend <code>12ft.io</code> to it:
<code>https://12ft.io/&lt;url&gt;</code>.</p>
<p>Alternatively, <a href="https://outline.com/">Outline</a> used to be another
website/service to do so, but apparently it is
<a href="https://news.ycombinator.com/item?id=30564665">unavailable</a> since last week.
Outline displays a <em>pretty printed</em> version of text from an article, looking a
lot like a markdown-rendered version of a web page.</p>
<p>Someone on Hacker News suggested <a href="https://txtify.it/">txtify.it</a> as a
replacement to it. Indeed, Txtify is very similar to Outline, however it
displays plain text instead (i.e. no formatting at all).</p>
<p>Apparently some people even go further by installing <a href="https://github.com/iamadamdev/bypass-paywalls-chrome">browser
extensions</a> to do so.</p>
<p>Ultimately, whenever possible, prefer to access news sources from news portals
that aren&rsquo;t paywalled and/or that you are a subscriber of.</p>]]></content:encoded></item><item><title>HTTP: a few acronyms</title><link>https://thiagowfx.github.io/2022/02/http-a-few-acronyms/</link><pubDate>Sun, 27 Feb 2022 21:48:03 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/02/http-a-few-acronyms/</guid><description>&lt;p>I keep forgetting these, so I wrote a small summary for my own reference.&lt;/p></description><content:encoded><![CDATA[<p>I keep forgetting these, so I wrote a small summary for my own reference.</p>
<h2 id="hsts">HSTS</h2>
<p><a href="https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security">Wikipedia — HSTS</a>:</p>
<blockquote>
<p>HTTP Strict Transport Security (HSTS) is a policy mechanism that helps to
protect websites against man-in-the-middle attacks such as protocol downgrade
attacks and cookie hijacking. It allows web servers to declare that web
browsers (or other complying user agents) should automatically interact with
it using only HTTPS connections.</p>
</blockquote>
<p>In layman&rsquo;s terms: <em>Force HTTPS on a given domain</em>.</p>
<p><a href="https://hstspreload.org/">HSTS Preload List</a>:</p>
<blockquote>
<p>This form is used to submit domains for inclusion in Chrome&rsquo;s HTTP Strict
Transport Security (HSTS) preload list. This is a list of sites that are
hardcoded into Chrome as being HTTPS only.</p>
<p>Most major browsers (Chrome, Firefox, Opera, Safari, IE 11 and Edge) also
have HSTS preload lists based on the Chrome list. (See the HSTS compatibility
matrix.)</p>
</blockquote>
<p>If you add your website to that list, major browsers will honor it and only use
HTTPS for your domain.</p>
<p>Some <a href="https://en.wikipedia.org/wiki/Top-level_domain">TLDs</a> enforce HTTPS
through HSTS, some popular ones are <code>.app</code> and <code>.dev</code>.
<a href="https://serverfault.com/q/1067229/180092">Here</a> is a more comprehensive list.</p>
<p><code>HSTS</code> is fire-and-forget, you&rsquo;ll usually only need to worry about it once,
when configuring a SSL certificate (HTTPS) for your domain or subdomains.</p>
<h2 id="csp">CSP</h2>
<p><a href="https://en.wikipedia.org/wiki/Content_Security_Policy">Wikipedia — CSP</a>:</p>
<blockquote>
<p>Content Security Policy (CSP) is a computer security standard introduced to
prevent cross-site scripting (XSS), clickjacking and other code injection
attacks resulting from execution of malicious content in the trusted web page
context.</p>
</blockquote>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP">MDN — CSP</a>:</p>
<blockquote>
<p>Content Security Policy (CSP) is an added layer of security that helps to
detect and mitigate certain types of attacks, including Cross-Site Scripting
(XSS) and data injection attacks. These attacks are used for everything from
data theft, to site defacement, to malware distribution.</p>
</blockquote>
<p>CSP can be configured in at least two distinct ways:</p>
<ol>
<li>Web server: return the <code>Content-Security-Policy</code> HTTP header:</li>
</ol>
<pre tabindex="0"><code>Content-Security-Policy: default-src &#39;self&#39;; img-src https://*; child-src &#39;none&#39;;
</code></pre><ol start="2">
<li>HTML <code>&lt;meta&gt;</code> tag:</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-html" data-lang="html"><span style="display:flex;"><span>&lt;<span style="color:#f92672">meta</span> <span style="color:#a6e22e">http-equiv</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;Content-Security-Policy&#34;</span> <span style="color:#a6e22e">content</span><span style="color:#f92672">=</span><span style="color:#e6db74">&#34;default-src &#39;self&#39;; img-src https://*; child-src &#39;none&#39;;&#34;</span>&gt;
</span></span></code></pre></div><p><code>CSP</code> is something to worry about at the application level. For example,
<a href="https://github.com/miniflux/v2/issues/748">miniflux</a> to fetch resources
(fonts) from another domain (Google Fonts).</p>
<h2 id="cors">CORS</h2>
<p><a href="https://en.wikipedia.org/wiki/Cross-origin_resource_sharing">Wikipedia — CORS</a>:</p>
<blockquote>
<p>Cross-origin resource sharing (CORS) is a mechanism that allows restricted
resources on a web page to be requested from another domain outside the
domain from which the first resource was served.</p>
</blockquote>
<p>CORS can be configured via web server: return the <code>Access-Control-Allow-Origin</code> HTTP header:</p>
<pre tabindex="0"><code>Access-Control-Allow-Origin: *
Access-Control-Allow-Origin: http://example.com:8080
</code></pre><p><code>CORS</code> is something to worry about at the application level. For example,
<a href="https://keep.google.com/">https://keep.google.com/</a> ⟷ <a href="https://google.com/">https://google.com/</a> cookies.</p>
<h2 id="csrf">CSRF</h2>
<p><a href="https://en.wikipedia.org/wiki/Cross-site_request_forgery">Wikipedia — CSRF</a>:</p>
<blockquote>
<p>Cross-site request forgery, also known as one-click attack or session riding
and abbreviated as CSRF (sometimes pronounced sea-surf) or XSRF, is a type of
malicious exploit of a website where unauthorized commands are submitted from
a user that the web application trusts.</p>
</blockquote>
<p><code>CSRF</code> is something to be aware of and to watch out for.
<a href="https://owasp.org/www-community/attacks/csrf">OWASP</a> has some additional
resources on it.</p>]]></content:encoded></item><item><title>What is my IP?</title><link>https://thiagowfx.github.io/2022/02/what-is-my-ip/</link><pubDate>Sat, 26 Feb 2022 17:55:38 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/02/what-is-my-ip/</guid><description>&lt;p>This post contains a small handful of distinct services to query your machine
external IP address.&lt;/p></description><content:encoded><![CDATA[<p>This post contains a small handful of distinct services to query your machine
external IP address.</p>
<h2 id="googlehttpswwwgooglecomsearchqwhatismyip"><a href="https://www.google.com/search?q=what+is+my+ip">Google</a></h2>
<p>URL: <a href="https://www.google.com/search?q=what+is+my+ip">https://www.google.com/search?q=what+is+my+ip</a></p>
<p>As of this writing, this doesn&rsquo;t work on duckduckgo:
<a href="https://duckduckgo.com/?q=what+is+my+ip">https://duckduckgo.com/?q=what+is+my+ip</a>. I suppose this is related to their
philosophy of not tracking their users.</p>
<p>This is the easiest method when you have a web browser as you do not need to
memorize any URL.</p>
<h2 id="i-can-haz-iphttpsicanhazipcom"><a href="https://icanhazip.com/">I can haz ip</a></h2>
<p>URL: <a href="https://icanhazip.com/">https://icanhazip.com/</a></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ curl icanhazip.com
</span></span><span style="display:flex;"><span>NNN.NNN.NNN.NNN
</span></span></code></pre></div><p>I love the simplicity of <em>I can haz ip</em>. It just returns your IP address in
plain text, nothing else. It also works from the web browser. You can find
details about it <a href="https://major.io/icanhazip-com-faq/">here</a>. <strong>TL;DR</strong>: It was
an <a href="https://github.com/major/icanhaz">open source</a> pet project of a single
person (<a href="https://major.io/">Major Hayden</a>), then it was eventually bought by
Cloudflare as it immensely grew.</p>
<p>It&rsquo;s also possible to query your IPv6 address <a href="https://apenwarr.ca/log/20170810">in case you have
one</a>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ curl -6 icanhazip.com
</span></span></code></pre></div><h2 id="ipinfohttpsipinfoio"><a href="https://ipinfo.io/">IPInfo</a></h2>
<p>URL: <a href="https://ipinfo.io/">https://ipinfo.io/</a></p>
<p>IPInfo returns structured data beyond just your IP address. There are several
similar services that do this, for example, <a href="https://www.whatismyip.com/">What is my
IP?</a>, however IPInfo is the cleanest one I have
seen.</p>
<h2 id="pingeuhttpspingeu"><a href="https://ping.eu/">ping.eu</a></h2>
<p>URL: <a href="https://ping.eu/">https://ping.eu/</a></p>
<p>I&rsquo;ll also give an honourable mention to ping.eu as it contains a small handful
of utilities to check for things like Traceroute, DNS, whois, port check, etc.</p>]]></content:encoded></item><item><title>Website fonts: just use the system font stack</title><link>https://thiagowfx.github.io/2022/02/website-fonts-just-use-the-system-font-stack/</link><pubDate>Sat, 26 Feb 2022 12:19:37 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/02/website-fonts-just-use-the-system-font-stack/</guid><description>&lt;p>When I created this blog, I pondered a lot about which typography to use. I
kept experimenting with several fonts available in &lt;a href="https://fonts.google.com/">Google
Fonts&lt;/a>, and settled on a few favorites for websites:&lt;/p></description><content:encoded><![CDATA[<p>When I created this blog, I pondered a lot about which typography to use. I
kept experimenting with several fonts available in <a href="https://fonts.google.com/">Google
Fonts</a>, and settled on a few favorites for websites:</p>
<ul>
<li>
<p>Header fonts (sans-serif): Inter, Fira Sans, Lato</p>
</li>
<li>
<p>Body fonts (serif): Crimson Pro, Vollkorn, Alegreya</p>
</li>
<li>
<p>Code fonts (mono): Fira Code, PT Mono, IBM Plex Mono</p>
</li>
</ul>
<p>Ultimately though, none of them mattered. I was motivated and
influenced by Kev Quirk&rsquo;s <a href="https://kevq.uk/how-local-fonts-can-save-the-environment/">Trying To Go Green With Local
Fonts</a>
and Steve&rsquo;s <a href="https://visitmy.website/2020/07/13/this-website-is-killing-the-planet/">This website is killing the
planet</a>,
which basically boils down to the same spirit of
<a href="https://motherfuckingwebsite.com/">https://motherfuckingwebsite.com/</a>: The web is too bloated
nowadays, most websites have a ton of unnecessary CSS and
JavaScript junk to fetch over and over again.</p>
<p>This is not a big deal if you have access to fast internet and
powerful computers, but that&rsquo;s not the case for many people in
the planet.</p>
<p>With the intent of not unnecessarily fetching fonts from the web, that&rsquo;s why my
current font stack just uses the existing fonts in your system, with a few
opinionated bits in case you have some of my favorite fonts already installed:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-css" data-lang="css"><span style="display:flex;"><span><span style="color:#f92672">body</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">font-family</span>: Crimson Pro, Vollkorn, Alegreya, Iowan Old Style, Apple Garamond, Baskerville, Times New Roman, Noto Serif, Droid Serif, Times, Source Serif Pro, <span style="color:#66d9ef">serif</span>, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol, Noto Color Emoji;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">h1</span><span style="color:#f92672">,</span> <span style="color:#f92672">h2</span><span style="color:#f92672">,</span> <span style="color:#f92672">h3</span><span style="color:#f92672">,</span> <span style="color:#f92672">h4</span><span style="color:#f92672">,</span> <span style="color:#f92672">h5</span><span style="color:#f92672">,</span> <span style="color:#f92672">h6</span><span style="color:#f92672">,</span> <span style="color:#f92672">footer</span><span style="color:#f92672">,</span> <span style="color:#f92672">nav</span><span style="color:#f92672">,</span> .<span style="color:#a6e22e">toc</span><span style="color:#f92672">,</span> .<span style="color:#a6e22e">post-meta</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">font-family</span>: Inter, Fira Sans, Lato, system-ui, <span style="color:#f92672">-</span>apple-system, BlinkMacSystemFont, Avenir Next, Avenir, Segoe UI, Helvetica Neue, Helvetica, Ubuntu, Roboto, Noto, Cantarell, Arial, <span style="color:#66d9ef">sans-serif</span>;
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">code</span><span style="color:#f92672">,</span> <span style="color:#f92672">pre</span> {
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">font-family</span>: Fira Code, PT Mono, IBM Plex Mono, Menlo, Consolas, Monaco, Liberation Mono, Ubuntu Mono, Lucida Console, <span style="color:#66d9ef">monospace</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>The system font stack reference comes from <a href="https://systemfontstack.com/">https://systemfontstack.com/</a> and <a href="https://css-tricks.com/snippets/css/system-font-stack/">CSS Tricks</a>.</p>]]></content:encoded></item><item><title>Thoughts on Gemini</title><link>https://thiagowfx.github.io/2022/02/thoughts-on-gemini/</link><pubDate>Tue, 08 Feb 2022 11:40:00 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/02/thoughts-on-gemini/</guid><description>&lt;p>From the &lt;a href="https://gemini.circumlunar.space">homepage&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Gemini is a new internet protocol which:&lt;/p>
&lt;ul>
&lt;li>Is heavier than gopher&lt;/li>
&lt;li>Is lighter than the web&lt;/li>
&lt;li>Will not replace either&lt;/li>
&lt;li>Strives for maximum power to weight ratio&lt;/li>
&lt;li>Takes user privacy very seriously&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s too abstract though. I prefer the way &lt;a href="https://kevq.uk/gemini-isnt-the-solution-to-the-broken-web/">Kev Quirk&lt;/a> puts it:&lt;/p>
&lt;blockquote>
&lt;p>To put that into human-digestible form; Gemini is basically a very light, text-only alternative to HTML.&lt;/p>
&lt;/blockquote></description><content:encoded><![CDATA[<p>From the <a href="https://gemini.circumlunar.space">homepage</a>:</p>
<blockquote>
<p>Gemini is a new internet protocol which:</p>
<ul>
<li>Is heavier than gopher</li>
<li>Is lighter than the web</li>
<li>Will not replace either</li>
<li>Strives for maximum power to weight ratio</li>
<li>Takes user privacy very seriously</li>
</ul>
</blockquote>
<p>That&rsquo;s too abstract though. I prefer the way <a href="https://kevq.uk/gemini-isnt-the-solution-to-the-broken-web/">Kev Quirk</a> puts it:</p>
<blockquote>
<p>To put that into human-digestible form; Gemini is basically a very light, text-only alternative to HTML.</p>
</blockquote>
<p>Gemini aims to replace &ldquo;lightweight HTML&rdquo;, but it already starts with a big barrier for entry and adoption: It&rsquo;s not obvious what it is by just reading its project homepage alone. This in my opinion comes off as elitist.</p>
<p>Furthermore, you need a custom piece of software in order to consume the so-called gemini <em>capsules</em> (a fancy name for what&rsquo;s the equivalent of a plain-text <a href="https://jamstack.org/generators/">SSG</a> website).</p>
<p>I tried out <a href="https://github.com/makeworld-the-better-one/amfora"><code>amfora</code></a> which is a popular CLI one<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. Amfora is pretty decent and lightweight. The experience is very similar to a hybrid of using a CLI RSS reader like <a href="https://newsboat.org"><code>newsboat</code></a> to keep track of your favorite capsules, and a CLI Web browser like <code>elinks</code> or <code>w3m</code> to navigate them.</p>
<p>And that&rsquo;s part of the adoption problem: Why would you subject yourself to purposely using a text-only browser in the 2020s? It is a painful experience, and there&rsquo;s not any extra value compared to just using a minimalist RSS reader like <a href="https://miniflux.app">miniflux</a> to keep track of your favorite blogs / news portals via RSS.</p>
<p>Nowadays there are plenty of SSGs, for every programming language you can think of, even in plain shell scripting (POSIX <code>sh</code>). There&rsquo;s little reason to learn a new niche protocol given that it&rsquo;s relatively easy to publish simple blogs.</p>
<p>Conclusion: As Kev puts it:</p>
<blockquote>
<p>I’m not sure if you heard, but <a href="https://thewebisfucked.com">The Web Is F*cked</a> and techies everywhere are touting the Gemini protocol as its saviour. I disagree. A lot.</p>
</blockquote>
<p>I will end this article with a praise for Gemini, courtesy of <a href="https://drewdevault.com/2020/11/01/What-is-Gemini-anyway.html">Drew DeVault</a>. Drew argues that:</p>
<blockquote>
<p>My disdain for web browsers is well documented. Web browsers are extraordinarily complex, and any attempt to build a new one would be a Sisyphean task. Successfully completing that implementation, if even possible, would necessarily produce a Lovecraftian mess: unmaintainable, full of security vulnerabilities, with gigabytes in RAM use and hours in compile times. And given that all of the contemporary web browsers that implement a sufficiently useful subset of web standards are ass and getting assier, what should we do?</p>
</blockquote>
<p>Fine, but the beloved plain duo of HTML + CSS still works just fine. There&rsquo;s no need to create a new, difficult-to-use protocol to <em>force</em> people to keep things simple. Unless you just wanna have fun and treat it like a toy or learning project; then go for it. Nothing wrong with that.</p>
<p>My interest for Gemini ends as soon as this post is published. Q.E.D.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://repology.org/project/amfora/versions">Packaged</a> for every relevant platform out there nowadays.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Throwaway accounts for ephemeral use cases</title><link>https://thiagowfx.github.io/2022/01/throwaway-accounts-for-ephemeral-use-cases/</link><pubDate>Wed, 26 Jan 2022 00:20:40 -0500</pubDate><author>tbperrotta@gmail.com (Thiago Perrotta)</author><guid>https://thiagowfx.github.io/2022/01/throwaway-accounts-for-ephemeral-use-cases/</guid><description>&lt;p>A brief list of disposable / throwaway account resources:&lt;/p></description><content:encoded><![CDATA[<p>A brief list of disposable / throwaway account resources:</p>
<h2 id="email-inbox">Email inbox</h2>
<ul>
<li><a href="https://dispostable.com/">https://dispostable.com/</a></li>
<li><a href="https://10minutemail.com/">https://10minutemail.com/</a></li>
<li><a href="https://yadim.dismail.de/">https://yadim.dismail.de/</a></li>
</ul>
<h2 id="nat--public-urls">NAT / public URLs</h2>
<ul>
<li><a href="https://ngrok.com/">https://ngrok.com/</a></li>
</ul>
<h2 id="pastebin">Pastebin</h2>
<ul>
<li><a href="https://paste.debian.net/">https://paste.debian.net/</a></li>
<li><a href="https://paste.dismail.de/">https://paste.dismail.de/</a></li>
<li><a href="https://paste.opensuse.org/">https://paste.opensuse.org/</a></li>
<li><a href="https://upaste.de/">https://upaste.de/</a> (produces short URLs, deleted after one hour)</li>
</ul>
<h2 id="sms">SMS</h2>
<ul>
<li><a href="https://smsreceivefree.com/">https://smsreceivefree.com/</a></li>
</ul>
<h2 id="appendix">Appendix</h2>
<ul>
<li><a href="https://blog.thenewoil.org/data-privacy-week-spotlight-backups-ngp6">The New Oil</a> has some good tips on disinformation for throwaway and/or ephemeral accounts.</li>
</ul>]]></content:encoded></item></channel></rss>