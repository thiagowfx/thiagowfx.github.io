<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Portuguese on not just serendipity 🍀</title><link>https://perrotta.dev/tags/portuguese/</link><description>Recent content in Portuguese on not just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sun, 16 Oct 2016 15:49:01 -0200</lastBuildDate><atom:link href="https://perrotta.dev/tags/portuguese/index.xml" rel="self" type="application/rss+xml"/><item><title>Matroshka</title><link>https://perrotta.dev/2016/10/matroshka/</link><pubDate>Sun, 16 Oct 2016 15:49:01 -0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2016/10/matroshka/</guid><description>&lt;p>Recentemente participei de uma
&lt;a href="https://ctf.tecland.com.br/Pwn2Win/game/scoreboard/">CTF&lt;/a> promovida pelo
&lt;a href="https://ctf-br.org/elt">ELT&lt;/a> (Epic Leet Team). Uma das &lt;em>challs&lt;/em> que consegui
resolver completamente foi a &lt;strong>matroshka&lt;/strong>, e aqui está um breve &lt;em>write-up&lt;/em>
sobre a mesma.&lt;/p>
&lt;p>Dado um arquivo &lt;code>matroshka.tar.gz&lt;/code>, precisávamos encontrar a &lt;em>flag&lt;/em>.&lt;/p>
&lt;p>Não era difícil desconfiar do que esse arquivo / &lt;em>chall&lt;/em> se tratava: matroshkas
são aquelas bonecas russas que se encaixam umas dentro das outras. Então&amp;hellip;de
cara, logo já desconfiei: provavelmente existe um arquivo compactado dentro de
outro, dentro de outro, dentro de outro, e assim por diante&amp;hellip;&lt;/p>
&lt;p>Por experiência, não valeria a pena tentar descompactar tudo manualmente, pois
sabe-se lá quantos níveis de compactação esse negócio iria ter (provavelmente
mais do que 100).&lt;/p>
&lt;p>De cara logo pensei em usar o &lt;a href="https://brettcsmith.org/2007/dtrx/">dtrx&lt;/a>, que é
um excelente programa (não perco tempo e sempre rodo um &lt;code>port install dtrx&lt;/code>)
para extrair arquivos sem ter que ficar se lembrando das sintaxes individuais de
cada programa. Nesse caso, não iria rolar: os arquivos eram renomeados de forma
a &lt;em>trickear&lt;/em> o dtrx, que funciona através de heurísticas, uma delas é a
&amp;rsquo;extensão&amp;rsquo; do nome do arquivo. Por exemplo, vários arquivos (após
descompactados) eram renomeados na forma &lt;code>*.elt&lt;/code>.&lt;/p>
&lt;p>A segunda alternativa foi (&lt;strong>serendipidade&lt;/strong>, não conhecia essa ferramenta
antes) tentar utilizar o &lt;a href="http://www.nongnu.org/atool/">atool&lt;/a>. Por motivos
similares ao &lt;code>dtrx&lt;/code>, não rolou.&lt;/p>
&lt;p>Pois bem, então o jeito ia ser descompactar tudo na marra. Pensei em escrever um
programa que faria o seguinte:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	unzip &lt;span style="color:#f92672">&amp;lt;&lt;/span>file&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">catch&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">try&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		tar xf &lt;span style="color:#f92672">&amp;lt;&lt;/span>file&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">catch&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">// ...e assim por diante
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Obviamente eu utilizaria os programas diretamente, então a coisa poderia ficar
um pouco mais simples, utilizando os return codes dos mesmos para detectar se
descompactaram o arquivo com sucesso. Por exemplo, &lt;code>tar xf &amp;lt;file&amp;gt;&lt;/code> retorna &lt;code>0&lt;/code>
se rodou corretamente, do contrário ele retorna algo diferente de zero. Isso se
mostrou válido para todos os programas de descompactação que utilizei, exceto o
lha, que insistia em retornar &lt;code>0&lt;/code> de qualquer jeito, mesmo quando falhava.&lt;/p>
&lt;p>Para automatizar essa tarefa, resolvi utilizar &lt;code>python2&lt;/code>. &lt;code>C/C++&lt;/code> provavelmente
também seriam bons candidatos, mas eu queria praticar o meu &lt;code>python&lt;/code>.&lt;/p>
&lt;p>Após algumas inspeções, notei que cada arquivo continha um e somente um arquivo
dentro dele, então a ideia base seria:&lt;/p>
&lt;ul>
&lt;li>mantenha uma lista com todos os arquivos conhecidos até então (no começo, só
haveria um);&lt;/li>
&lt;li>descompacte esse arquivo;&lt;/li>
&lt;li>detecte qual arquivo acabou de ser descompactado&lt;/li>
&lt;li>continue fazendo isso até encontrar a &lt;code>flag&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Meu código ficou assim:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> subprocess
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>TARGET_DIR &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;mat&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_kgb&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;kgb&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_gzip&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;gunzip&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;-S&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> file&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>)[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>], file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_tar&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;tar&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;xvf&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_rar&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;unrar&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_lha&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;lha&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;e&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_zip&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;unzip&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_arj&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;cp&amp;#34;&lt;/span>, file, file &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.arj&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;arj&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;rm&amp;#34;&lt;/span>, file &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;.arj&amp;#34;&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> err
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">uncompress_7z&lt;/span>(file):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> subprocess&lt;span style="color:#f92672">.&lt;/span>call([&lt;span style="color:#e6db74">&amp;#34;7z&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;x&amp;#34;&lt;/span>, file])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">colorprint&lt;/span>(s):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\033&lt;/span>&lt;span style="color:#e6db74">[93m&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> repr(s) &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\033&lt;/span>&lt;span style="color:#e6db74">[0m&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>os&lt;span style="color:#f92672">.&lt;/span>chdir(TARGET_DIR)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>base &lt;span style="color:#f92672">=&lt;/span> set()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> newbase &lt;span style="color:#f92672">=&lt;/span> set(os&lt;span style="color:#f92672">.&lt;/span>listdir(&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> diff &lt;span style="color:#f92672">=&lt;/span> newbase &lt;span style="color:#f92672">-&lt;/span> base
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> colorprint(diff)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(diff) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">raise&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;len(diff) &amp;gt; 1&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> len(diff) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;len(diff) == 0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> file &lt;span style="color:#f92672">in&lt;/span> diff:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_kgb(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_gzip(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_tar(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_rar(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_zip(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_arj(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_7z(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> err &lt;span style="color:#f92672">=&lt;/span> uncompress_lha(file)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> err &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;lha fail&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> base &lt;span style="color:#f92672">=&lt;/span> newbase
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Essa ideia funcionou bastante bem. A única coisa &lt;em>overkill&lt;/em> foi que eu não
deletei arquivos anteriores; isso poderia ter simplificado significativamente o
problema (e os &lt;em>sets&lt;/em> no python).&lt;/p>
&lt;p>Ademais, uma das coisas chatas do &lt;code>arj&lt;/code> é que ele só é capaz de extrair arquivos
que terminam em &lt;code>*.arj&lt;/code>, então fui obrigado a renomear/copiar um arquivo antes
de tentar utilizá-lo para extrair seu conteúdo.&lt;/p></description></item><item><title>Instalando o Gentoo a partir do Arch</title><link>https://perrotta.dev/2014/05/instalando-o-gentoo-a-partir-do-arch/</link><pubDate>Thu, 01 May 2014 02:20:00 +0000</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2014/05/instalando-o-gentoo-a-partir-do-arch/</guid><description>&lt;p>&lt;strong>TL;DR&lt;/strong>: pequena TODO list sobre como instalar o Gentoo. Você vai passar 90% do seu tempo olhando para &lt;strong>texto&lt;/strong> dando scroll na tela (processo demorado…).&lt;/p>
&lt;p>Esse é o método mais tradicional possível (e que me interessa) que pude constatar. Adapte-o para as suas próprias necessidades:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Boote em um ambiente com o Arch (na verdade, você pode fazer isso a partir de qualquer distro decente).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Crie uma partição &lt;code>/&lt;/code>, do tipo ext4, para acomodar a instalação do Gentoo. De preferência, coloque um label decente lá. Sugestões de ferramentas para isso: &lt;code>cfdisk&lt;/code> ou &lt;code>gparted&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Monte essa partição em &lt;code>/mnt/gentoo&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Continue a partir do &lt;a href="http:www.gentoo.org/doc/en/handbook/handbook-amd64.xml?part=1&amp;amp;chap=4">handbook&lt;/a> oficial do Gentoo – nesse caso, para a arquitetura amd64. No entanto, &lt;strong>atenção&lt;/strong>. Use &lt;a href="https:wiki.gentoo.org/wiki/Installation_alternatives">esse&lt;/a> guia para perceber quais etapas de instalação e configuração são diferentes (em relação a se estivéssemos instalando pelo método oficial, a partir do live environment do gentoo), mais especificamente &lt;strong>da parte 4 à parte 6&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Baixe o &lt;code>PKGBUILD&lt;/code> &lt;code>gentoo-mirrorselect&lt;/code> do AUR.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Use &lt;code>mirrorselect -i -o&lt;/code> e então selecione interativamente os mirrors mais próximos da sua localização atual. Copie o valor da variável &lt;code>GENTOO_MIRRORS&lt;/code> para o final do seu &lt;code>/mnt/gentoo/etc/portage/make.conf&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copie o seu &lt;code>/etc/resolv.conf&lt;/code> para &lt;code>/mnt/gentoo/etc/resolv.conf&lt;/code>. Isso é &lt;a href="https:bbs.archlinux.org/viewtopic.php?id=95865">importante&lt;/a> para ter conectividade dentro do ambiente de chroot.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>CFLAGS&lt;/code> que recomendo para o &lt;code>/etc/portake/make.conf&lt;/code> (&lt;a href="https:forums.gentoo.org/viewtopic-t-933456-start-0.html">helper&lt;/a>):&lt;/p>
&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>-march=native -O2 -pipe
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>A partir daqui, nada especial, apenas continue seguindo o handbook do gentoo, até a parte do bootloader.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Chegando na parte do bootloader, optei por deixar o Arch gerenciá-lo. Nesse caso, basta rodar um típico &lt;code>grub-mkconfig -o /boot/grub/grb.cfg&lt;/code> que o Gentoo deverá ser automaticamente detectado (supondo que o pacote &lt;code>os-prober&lt;/code> esteja instalado).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Configure a rede no Gentoo. Isso é bastante específico, mas o procedimento é bem parecido com a configuração da rede no Arch. A única questão é que, ao dar emerge no &lt;code>wpa_supplicant&lt;/code> (no caso de você utilizar Wi-fi), vai demorar bastante até todas as dependências serem instaladas (esse é o ponto principal que me afastou do Gentoo até hoje. Sem pacotes binários, ter que compilar tudo localmente…ao menos, se no final a otimização do sistema for maior, poderia ter valido mais a pena.)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Teste o Gentoo durante uma semana e diga o que você achou dele 😉&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decida se você gosta mais do Gentoo ou do Arch. Isso vale tanto para o sistema, tanto para a comunidade. Não tenho ideia de como seja a comunidade do Gentoo (a do Arch eu já tinha uma boa noção de como era mesmo antes de ter o sistema instalado).&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Valeu pessoal. Como sou 100% newbie no Gentoo, apreciarei quaisquer dicas! (Enquanto as dicas não aparecem, Wiki Pages e Forums Threads me esperam). Sabe, é bom, de vez em quando, ser newbie em alguma coisa. Claro que ser expert / muito bom / hacker em algumas aplicações é ótimo, mas eu acredito na importância de possuir uma boa base de conhecimento em geral (não necessariamente apenas para fins acadêmicos ou financeiros, mas também para satisfazer a mente: desafios são importantes!).&lt;/p>
&lt;p>Ah, mais dois comentários:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Terminando de escrever esse post e de editá-lo, a compilação dos (130) pacotes que o &lt;code>wpa_supplicant&lt;/code> puxou não chegou nem na metade… (eu teria instalado uns três ou quatro Archs automatizados nesse tempo – tá bom, não vale comparar pacotes binários com código-fonte, eu sei)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Esse é o meu terceiro ou quarto post utilizando o &lt;code>org2blog&lt;/code> (do emacs). Já ficou bastante claro para mim que vou passar a usá-lo de maneira fixa. O único problema é que eu ainda não sei a sintaxe de formatação dele direito, é muita informação. Não é nem que não seja intuitiva, mas já tem LaTeX, BBCode, Markdown, aí eu tenho que aprender mais uma markup language. Mas, provavelmente vou me submeter a isso, o &lt;strong>orgmode&lt;/strong> é sensacional para &lt;em>management&lt;/em> em geral.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Recovery típico via USB</title><link>https://perrotta.dev/2014/04/recovery-t%C3%ADpico-via-usb/</link><pubDate>Fri, 18 Apr 2014 16:38:36 +0000</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2014/04/recovery-t%C3%ADpico-via-usb/</guid><description>&lt;ol>
&lt;li>Meu computador não boota! E agora? Possíveis sintomas: tela preta congelada, tela de splash congelada, &lt;code>systemd&lt;/code> travado, &lt;code>upstart&lt;/code> travado, corrupção (&lt;code>fsck&lt;/code> não ficou satisfeito), bootloader (grub, syslinux, EFI) mal configurado (ou não configurado)&lt;/li>
&lt;li>Obter uma distro de Linux e gravá-la num USB Flash Drive (pendrive). Meu gosto pessoal: System rescue cd, Parted magic, Slitaz ou Arch Linux.&lt;/li>
&lt;li>Bootar a distro e imediatamente abrir um console / emulador de terminal. Com interface gráfica ou não, a gosto.&lt;/li>
&lt;li>&lt;code>fdisk -l&lt;/code> para detectar os discos do computador. Detectar o disco cujo sistema está com problema. Geralmente o que contém a partição &lt;code>/boot&lt;/code> ou &lt;code>/&lt;/code>. Identificar as partições também é usualmente importante.&lt;/li>
&lt;li>Se você precisar formatar alguma partição, use &lt;code>cfdisk&lt;/code> ou &lt;code>parted&lt;/code>. Exemplo: &lt;code>cfdisk /dev/sda1&lt;/code>.&lt;/li>
&lt;li>Se você precisar (re)criar algum &lt;em>filesystem&lt;/em>, use &lt;code>mkfs&lt;/code> (por exemplo, &lt;code>mkfs.ext4 -L &amp;quot;archroot&amp;quot; /dev/sda1&lt;/code>).&lt;/li>
&lt;li>Para (re)montar o seu sistema de arquivos: (por exemplo) &lt;code>mount /dev/sda1 /mnt&lt;/code>.&lt;/li>
&lt;li>&lt;code>chroot&lt;/code> no sistema que você acabou de montar: &lt;code>chroot /mnt&lt;/code>.&lt;/li>
&lt;li>Para recuperar (na verdade, gerar novamente) o arquivo de configuração do grub &lt;strong>dentro do chroot&lt;/strong>: &lt;code>grub-mkconfig -o /boot/grub/grub.cfg&lt;/code>.&lt;/li>
&lt;li>Para reinstalar o grub (&lt;strong>fora do chroot&lt;/strong>!), use &lt;code>grub-install&lt;/code>.&lt;/li>
&lt;li>Explorar o diretório &lt;code>/etc/systemd/system&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>Usualmente um desses passos é um caminho para resolver o problema. No final das contas, as coisas são bastante específicas, dependem do contexto.&lt;/p></description></item><item><title>Testando uma ISO no Linux sem o VirtualBox</title><link>https://perrotta.dev/2014/01/testando-uma-iso-no-linux-sem-o-virtualbox/</link><pubDate>Tue, 07 Jan 2014 16:22:01 +0000</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2014/01/testando-uma-iso-no-linux-sem-o-virtualbox/</guid><description>&lt;p>Não imagino que seja incomum o seguinte cenário:&lt;/p>
&lt;ul>
&lt;li>News: uma nova versão da distro &lt;em>Debisuse&lt;/em> está disponível.&lt;/li>
&lt;li>Usuário: vou baixar a ISO,&lt;/li>
&lt;li>criar uma máquina virtual no &lt;em>VirtualBox&lt;/em> (ou no &lt;em>VMWare&lt;/em>, vai que),&lt;/li>
&lt;li>Bootar a ISO a partir dela.&lt;/li>
&lt;/ul>
&lt;p>Isso tudo é muito mais prático do que gravar a ISO num Flash (Pen) Drive e então testá-la com um novo &lt;em>boot&lt;/em>. No entanto, podemos ser mais práticos ainda se utilizarmos, para isso, &lt;strong>um único comando&lt;/strong>, com o &lt;code>qemu&lt;/code>! O comando típico é:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>qemu-system-x86_64 --enable-kvm -m 512M -cdrom ~/Downloads/debisuse-latest.iso
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se sua arquitetura for de 32 bits, você vai querer &lt;em>qemu-system-i386&lt;/em>. O parâmetro &lt;em>m&lt;/em> regula a quantidade de memória a ser alocada para a máquina virtual.&lt;/p>
&lt;p>Para utilizar o QEMU, você vai precisar encontrar o pacote adequado na sua distro.&lt;/p>
&lt;ul>
&lt;li>No Debian/Ubuntu e openSUSE: &lt;code>qemu&lt;/code> e &lt;code>kvm&lt;/code> (não testei, mas tudo indica que são esses)&lt;/li>
&lt;li>No Arch: &lt;code>qemu&lt;/code> (veja &lt;a href="https://wiki.archlinux.org/index.php/Kvm">https://wiki.archlinux.org/index.php/Kvm&lt;/a> e &lt;a href="https://wiki.archlinux.org/index.php/QEMU">https://wiki.archlinux.org/index.php/QEMU&lt;/a>)&lt;/li>
&lt;/ul>
&lt;p>OBS.: O &lt;em>KVM&lt;/em> é para deixar a execução ainda mais rápida. Mas ele não é obrigatório, OK? Para poder usá-lo existe uma série de peculiaridades, tais como habilitar as opções de virtualização na sua &lt;em>BIOS&lt;/em> (isso é mais comum em laptops) e assegurar-se de que o módulo adequado do kernel foi carregado (geralmente &lt;code>kvm\_intel&lt;/code> ou &lt;code>kvm\_amd&lt;/code>). Você pode conferir isso com o comando:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>lsmod | grep kvm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Se ver alguma saída, existem boas chances de o módulo correto do &lt;em>KVM&lt;/em> já ter sido carregado pelo seu kernel. Para fins de comparação, essa é a minha saída:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kvm_intel &lt;span style="color:#ae81ff">131191&lt;/span> &lt;span style="color:#ae81ff">3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kvm &lt;span style="color:#ae81ff">388773&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> kvm_intel
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;em>Happy hacking!&lt;/em>&lt;/p></description></item></channel></rss>