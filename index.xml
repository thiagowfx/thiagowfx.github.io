<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>not just serendipity</title><link>https://www.perrotta.dev/</link><description>Recent content on not just serendipity</description><generator>Hugo -- 0.128.2</generator><language>en-us</language><copyright>Copyright © 2021 - 2024 Thiago Perrotta · CC BY-NC-SA 4.0 • RSS</copyright><lastBuildDate>Tue, 16 Jul 2024 11:32:43 +0200</lastBuildDate><atom:link href="https://www.perrotta.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Fans</title><link>https://www.perrotta.dev/2024/07/fans/</link><pubDate>Tue, 16 Jul 2024 11:32:43 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/fans/</guid><description>Coworker 1: We need new fans for the office. You are welcome to send some suggestions.
Coworker 2: Let&amp;rsquo;s start a thread on Slack and post some links to Amazon.
Coworker 3: Yes, we chould start a new channel there. It should be called OnlyFans.</description><content:encoded><![CDATA[<blockquote>
<p><strong>Coworker 1</strong>: We need new fans for the office. You are welcome to send some
suggestions.</p>
<p><strong>Coworker 2</strong>: Let&rsquo;s start a thread on Slack and post some links to Amazon.</p>
<p><strong>Coworker 3</strong>: Yes, we chould start a new channel there. It should be called
<em>OnlyFans</em>.</p>
</blockquote>
]]></content:encoded></item><item><title>kubectl: get all logs from all pods</title><link>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</link><pubDate>Mon, 15 Jul 2024 13:23:35 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</guid><description>&lt;p>Frequently:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But how do you know what hash to use after &lt;code>server-&lt;/code>?&lt;/p></description><content:encoded><![CDATA[<p>Frequently:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
</span></span></code></pre></div><p>But how do you know what hash to use after <code>server-</code>?</p>
<p><strong>Option 1)</strong>: TAB auto-completion:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-&lt;TAB&gt;
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>tab completion for <code>kubectl</code> isn&rsquo;t always properly set up</li>
<li>if there is more than one pod, you would have to type in the first few letters
of the hash before hitting TAB again, that&rsquo;s annoying and non-ergonomic</li>
</ul>
<p><strong>Option 2)</strong>: subshell</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd <span style="color:#66d9ef">$(</span>kubectl get pod -n argocd | grep argocd-repo-server | cut -f1 -d<span style="color:#e6db74">&#39; &#39;</span> | head -1<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>a lot of typing</li>
<li><code>head -1</code> is necessary in case there are multiple pods<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
</ul>
<p><strong>Option 3)</strong>: get all logs from all pods that match a given label</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd -l app<span style="color:#f92672">=</span>app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>--all-containers<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--ignore-errors<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>This is much more ergonomic.</p>
<p>You still need to figure out what label to use though:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl describe pod -n argocd argocd-repo-server-5d59975687-dxnh7 | grep -A7 -i labels:
</span></span><span style="display:flex;"><span>Labels:           app.kubernetes.io/component<span style="color:#f92672">=</span>repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/managed-by<span style="color:#f92672">=</span>Helm
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/name<span style="color:#f92672">=</span>argocd-repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/part-of<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/version<span style="color:#f92672">=</span>v2.11.4
</span></span><span style="display:flex;"><span>                  helm.sh/chart<span style="color:#f92672">=</span>argo-cd-7.3.4
</span></span><span style="display:flex;"><span>                  pod-template-hash<span style="color:#f92672">=</span>5d59975687
</span></span></code></pre></div><p><strong>Source</strong>: <a href="https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller">https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller</a></p>
<p>Happy logging!</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Or <code>tail -1</code>, for that matter.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>kubectl: get secret with jsonpath and add a newline</title><link>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</link><pubDate>Tue, 09 Jul 2024 11:36:34 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</guid><description>&lt;p>When retrieving opaque secrets with &lt;code>kubectl&lt;/code>, one will often invoke this
typical command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;{.data.value}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ&lt;span style="color:#f92672">==&lt;/span>ubuntu@ubuntu:~ $
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But isn&amp;rsquo;t this ugly? The prompt is concatenated with the output.&lt;/p></description><content:encoded><![CDATA[<p>When retrieving opaque secrets with <code>kubectl</code>, one will often invoke this
typical command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>But isn&rsquo;t this ugly? The prompt is concatenated with the output.</p>
<p>It turns out <code>jsonpath</code> can emit a newline for improved readability:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Note that the <code>{&quot;\n&quot;}</code> <strong>must</strong> be quoted.</p>
<p>And then you could pipe it to <code>base64 -d</code> afterwards, as usual, and it&rsquo;s a no-op:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d
</span></span><span style="display:flex;"><span>you are curious arent youubuntu@ubuntu:~ $
</span></span></code></pre></div><p>However, the <code>base64</code> output also swallows the newline. This can be resolved
with a simple <code>echo</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d <span style="color:#f92672">&amp;&amp;</span> echo
</span></span><span style="display:flex;"><span>you are curious arent you
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Newlines are hard, eh?</p>]]></content:encoded></item><item><title>icdiff: side-by-side diff</title><link>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</link><pubDate>Tue, 09 Jul 2024 10:47:51 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</guid><description>&lt;p>&lt;a href="https://www.jefftk.com/icdiff">&lt;code>icdiff&lt;/code>&lt;/a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:&lt;/p>
&lt;ul>
&lt;li>colored diff output&lt;/li>
&lt;li>side-by-side diff&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p><a href="https://www.jefftk.com/icdiff"><code>icdiff</code></a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:</p>
<ul>
<li>colored diff output</li>
<li>side-by-side diff</li>
</ul>
<p>The usual <code>diff</code> tool in Unix system has some basic color support<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.
Nonetheless, sometimes the output of <code>icdiff</code> is better, with little effort or
memorization.</p>
<p>Given two files (pardon my lack of creativity, but at least you know it&rsquo;s not AI
generated):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% cat first
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>% cat second
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>jesse
</span></span><span style="display:flex;"><span>pinkman
</span></span></code></pre></div><p>Plain <code>diff</code> output (terrible, IMHO):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff first second
</span></span><span style="display:flex;"><span>1,2d0
</span></span><span style="display:flex;"><span>&lt; gustavo
</span></span><span style="display:flex;"><span>&lt; fring
</span></span><span style="display:flex;"><span>4a3,4
</span></span><span style="display:flex;"><span>&gt; jesse
</span></span><span style="display:flex;"><span>&gt; pinkman
</span></span></code></pre></div><p>Better <code>diff</code> output:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff --color<span style="color:#f92672">=</span>auto -uN first second
</span></span><span style="display:flex;"><span>--- first	2024-07-09 10:50:01
</span></span><span style="display:flex;"><span>+++ second	2024-07-09 10:50:08
</span></span><span style="display:flex;"><span>@@ -1,4 +1,4 @@
</span></span><span style="display:flex;"><span>-gustavo
</span></span><span style="display:flex;"><span>-fring
</span></span><span style="display:flex;"><span> walter
</span></span><span style="display:flex;"><span> white
</span></span><span style="display:flex;"><span>+jesse
</span></span><span style="display:flex;"><span>+pinkman
</span></span></code></pre></div><p>&hellip;which is why I have <code>alias diff=&quot;diff --color=auto -uN&quot;</code> in my shell config /
dotfiles.</p>
<p>With <code>icdiff</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% icdiff first second
</span></span><span style="display:flex;"><span>first            second
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter           walter
</span></span><span style="display:flex;"><span>white            white
</span></span><span style="display:flex;"><span>                 jesse
</span></span><span style="display:flex;"><span>                 pinkman
</span></span></code></pre></div><p>Two observations:</p>
<ul>
<li>in this blog you cannot see the colors, therefore this example is meh</li>
<li><code>icdiff</code> will happily utilize your full terminal width, positioning the second
column quite to the right in case, thereby fully utilizing the available space</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>And there&rsquo;s also <code>colordiff</code>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Github-flavoured Markdown: Callouts</title><link>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</link><pubDate>Thu, 04 Jul 2024 10:17:08 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</guid><description>&lt;p>Since the end of the last year it&amp;rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!NOTE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Highlights information that users should take into account, even when skimming.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!TIP]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Optional information to help a user be more successful.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!IMPORTANT]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Crucial information necessary for users to succeed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!WARNING]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!CAUTION]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Negative potential consequences of an action.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the spirit of &lt;a href="https://github.com/jhuangtw/xg2xg">xg2xg&lt;/a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&amp;ldquo;caution&amp;rdquo;):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>Note: This is a note.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tip: This is a tip.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: This is a warning.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Important: This is important.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>Since the end of the last year it&rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!NOTE]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Highlights information that users should take into account, even when skimming.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!TIP]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Optional information to help a user be more successful.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!IMPORTANT]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Crucial information necessary for users to succeed.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!WARNING]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!CAUTION]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Negative potential consequences of an action.
</span></span></span></code></pre></div><p>In the spirit of <a href="https://github.com/jhuangtw/xg2xg">xg2xg</a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&ldquo;caution&rdquo;):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span>Note: This is a note.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Tip: This is a tip.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Warning: This is a warning.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Important: This is important.
</span></span></code></pre></div><p>Sources:</p>
<ul>
<li><a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/</a></li>
<li><a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925</a></li>
</ul>]]></content:encoded></item><item><title>Pipes: RSS Manipulation</title><link>https://www.perrotta.dev/2024/07/pipes-rss-manipulation/</link><pubDate>Wed, 03 Jul 2024 21:50:24 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/pipes-rss-manipulation/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes&lt;/a> is not around
anymore, however there is a modern replacement for it: &lt;a href="https://www.pipes.digital/">https://www.pipes.digital/&lt;/a>.&lt;/p></description><content:encoded><![CDATA[<p><a href="https://en.wikipedia.org/wiki/Yahoo!_Pipes">Yahoo! Pipes</a> is not around
anymore, however there is a modern replacement for it: <a href="https://www.pipes.digital/">https://www.pipes.digital/</a>.</p>
<p>It was on Hacker News recently: <a href="https://news.ycombinator.com/item?id=40841980">https://news.ycombinator.com/item?id=40841980</a></p>
<p>Here is a practical use case for it: to filter out unwanted episodes from
podcast RSS feeds.</p>
<p>I follow <a href="https://jovemnerd.com.br/podcasts/nerdcast">Jovem Nerd - Nerdcasts</a>.
They are a Brazilian podcast.</p>
<p>However, in the recent years, they added a lot of other (unrelated) podcasts
from their network to the main NerdCast feed, effectively polluting it. The
cleaner and elegant action to do would have been to publish individual RSS feeds
for each of their podcast series, and perhaps an additional one to contain all
of them, for those who would like to subscribe to everything. But that&rsquo;s not
what they do.</p>
<p>This is an effective marketing strategy for them, because the smaller podcast
series benefit from the exposure in the main feed. At the same time, this is
hostile to listeners, as we end up receiving bundling of episodes we are not
looking for.</p>
<p>Enter the new Pipes.</p>
<p>With it I can build the following pipeline:</p>
<ul>
<li>fetch the nerdcast feed: <a href="https://api.jovemnerd.com.br/feed-nerdcast/">https://api.jovemnerd.com.br/feed-nerdcast/</a></li>
<li>filter only the items that contain &ldquo;NerdCast&rdquo; in <code>item.title</code></li>
<li>publish a new feed</li>
</ul>
<p>The end result (&ldquo;NerdCast ONLY&rdquo;):</p>
<ul>
<li>Preview: <a href="https://www.pipes.digital/feedpreview/VqaEW4qJ">https://www.pipes.digital/feedpreview/VqaEW4qJ</a></li>
<li>Raw feed: <a href="https://www.pipes.digital/feed/VqaEW4qJ">https://www.pipes.digital/feed/VqaEW4qJ</a>?</li>
</ul>
<p>You are welcome.</p>
<p>Documentation: <a href="https://www.pipes.digital/docs">https://www.pipes.digital/docs</a></p>]]></content:encoded></item><item><title>t-shirt</title><link>https://www.perrotta.dev/2024/07/t-shirt/</link><pubDate>Wed, 03 Jul 2024 09:34:41 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/t-shirt/</guid><description>When attending tech conferences, wear T-shirts from previous conferences, or from prior editions of the same conference. It is a good icebreaker when people recognize them.
Of course, there is no need to buy a T-shirt from every single conference you attend; owning one or two of them is enough.</description><content:encoded>&lt;p>When attending tech conferences, wear T-shirts from previous conferences, or
from prior editions of the same conference. It is a good icebreaker when people
recognize them.&lt;/p>
&lt;p>Of course, there is no need to buy a T-shirt from every single conference you
attend; owning one or two of them is enough.&lt;/p></content:encoded></item><item><title>Terraform: perform a global update</title><link>https://www.perrotta.dev/2024/07/terraform-perform-a-global-update/</link><pubDate>Tue, 02 Jul 2024 12:33:37 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/terraform-perform-a-global-update/</guid><description>&lt;p>Given a &lt;code>terraform/modules&lt;/code> directory tree, we would like to globally update the
minimum required terraform version in all modules.&lt;/p></description><content:encoded><![CDATA[<p>Given a <code>terraform/modules</code> directory tree, we would like to globally update the
minimum required terraform version in all modules.</p>
<ul>
<li>Option 1: Use <code>ack</code> or <code>fd</code> + <code>sed</code>.</li>
<li>Option 2: Use <a href="https://github.com/minamijoyo/tfupdate"><code>tfupdate</code></a>, which can
be installed via <code>homebrew</code> or your favorite package manager (c.f.
<a href="https://repology.org/project/tfupdate/versions">repology</a>).</li>
</ul>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ tfupdate terraform -r terraform/modules -v <span style="color:#e6db74">&#39;~&gt; 1.6.6&#39;</span>
</span></span></code></pre></div>]]></content:encoded></item><item><title>Explain a crontab expression</title><link>https://www.perrotta.dev/2024/07/explain-a-crontab-expression/</link><pubDate>Mon, 01 Jul 2024 18:48:47 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/explain-a-crontab-expression/</guid><description>&lt;p>Given, for example, &lt;code>0 0 * * *&lt;/code>, how do you figure out when it will run?&lt;/p></description><content:encoded><![CDATA[<p>Given, for example, <code>0 0 * * *</code>, how do you figure out when it will run?</p>
<ul>
<li>Option 1: Read the docs! The <a href="https://wiki.archlinux.org/title/Cron">ArchWiki</a>
is frequently a great reference. Alternatively, use your favorite search
engine.</li>
<li>Option 2: Ask ChatGPT! A simple <code>cron: 0 0 * * *</code> prompt is enough. No need
to embezzle it with <code>explain what this does</code> or <code>what does this do?</code>.</li>
<li>Option 3: Paste it into <a href="https://crontab.guru/">https://crontab.guru/</a>.</li>
</ul>]]></content:encoded></item><item><title>Localhost domain</title><link>https://www.perrotta.dev/2024/07/localhost-domain/</link><pubDate>Mon, 01 Jul 2024 11:34:34 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/localhost-domain/</guid><description>&lt;p>If you find yourself in a situation wherein http://localhost:1313 has issues,
you can use a domain that redirects to localhost. For example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://localdev.me:1313/">http://localdev.me:1313/&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://demo.localdev.me:1313/">http://demo.localdev.me:1313/&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>If you find yourself in a situation wherein http://localhost:1313 has issues,
you can use a domain that redirects to localhost. For example:</p>
<ul>
<li><a href="http://localdev.me:1313/">http://localdev.me:1313/</a></li>
<li><a href="http://demo.localdev.me:1313/">http://demo.localdev.me:1313/</a></li>
</ul>
<blockquote>
<p>When I’m doing local development, I sometimes need a domain name that routes
back to localhost. I’ve long run into cases where I need subdomains and ended
up modifying my local hosts file. I’ve used this for a variety of situations
going back for a long time. From Kubernetes ingress work to web development.</p>
</blockquote>
<blockquote>
<p><code>localdev.me</code> DNS is served through amazon. The domain name and any subdomains
point to <code>127.0.0.1</code>.</p>
</blockquote>
<blockquote>
<p>The next time you need a custom domain or subdomain for local development,
instead of hancking your hosts file you might consider localdev.me.</p>
</blockquote>
<p>Source: <a href="https://codeengineered.com/blog/2022/localdev-me/">https://codeengineered.com/blog/2022/localdev-me/</a></p>]]></content:encoded></item><item><title>a little</title><link>https://www.perrotta.dev/2024/07/a-little/</link><pubDate>Mon, 01 Jul 2024 08:26:54 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/a-little/</guid><description>Do you speak English?
A little / Meh / Ein bisschen / Mixed
Speaks perfect English
Sprechen Sie Deutsch?
Nur ein bisschen / A2
Speaks lousy Deutsch</description><content:encoded><![CDATA[<ul>
<li>
<p>Do you speak English?</p>
</li>
<li>
<p>A little / Meh / Ein bisschen / Mixed</p>
</li>
</ul>
<p><em>Speaks perfect English</em></p>
<hr>
<ul>
<li>
<p>Sprechen Sie Deutsch?</p>
</li>
<li>
<p>Nur ein bisschen / A2</p>
</li>
</ul>
<p><em>Speaks lousy Deutsch</em></p>
]]></content:encoded></item><item><title>timezones</title><link>https://www.perrotta.dev/2024/07/timezones/</link><pubDate>Mon, 01 Jul 2024 08:16:30 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/timezones/</guid><description>If you are arranging a meeting with someone in the other side of the globe, it is good courtesy to send your availability in their local timezone.</description><content:encoded>&lt;p>If you are arranging a meeting with someone in the other side of the globe, it
is good courtesy to send your availability in their local timezone.&lt;/p></content:encoded></item><item><title>Copy files from laptop to Steam Deck</title><link>https://www.perrotta.dev/2024/06/copy-files-from-laptop-to-steam-deck/</link><pubDate>Sun, 30 Jun 2024 15:05:37 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/copy-files-from-laptop-to-steam-deck/</guid><description>&lt;p>Let&amp;rsquo;s say the files you want to copy are in &lt;code>~/Downloads&lt;/code>.&lt;/p></description><content:encoded><![CDATA[<p>Let&rsquo;s say the files you want to copy are in <code>~/Downloads</code>.</p>
<p>Start a local HTTP server on your laptop:</p>
<pre tabindex="0"><code>$ cd ~/Downloads
$ python3 -m http.server
Serving HTTP on :: port 8000 (http://[::]:8000/) ...
</code></pre><p>Find the IP address of your laptop within your LAN:</p>
<pre tabindex="0"><code>$ ifconfig  # macOS
$ ip addr   # linux
</code></pre><p>Now go to your Steam Deck, access <code>http://&lt;ip&gt;:8000</code> via the installed web
browser, and download your files.</p>
<p>Alternatively, run <code>wget</code> / <code>curl</code> in a terminal.</p>]]></content:encoded></item><item><title>Entschuldigung</title><link>https://www.perrotta.dev/2024/06/entschuldigung/</link><pubDate>Mon, 24 Jun 2024 00:35:33 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/entschuldigung/</guid><description>Whenever we play badminton and someone hits the shuttle in such a way that it gently touches the net from the top, followed up by a point, the person instantly apologizes. It makes me smile every single time this unspoken tradition happens.</description><content:encoded>&lt;p>Whenever we play badminton and someone hits the shuttle in such a way that it
gently touches the net from the top, followed up by a point, the person
instantly apologizes. It makes me smile every single time this unspoken
tradition happens.&lt;/p></content:encoded></item><item><title>★ XY problem</title><link>https://www.perrotta.dev/2024/06/xy-problem/</link><pubDate>Sun, 23 Jun 2024 14:50:19 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/xy-problem/</guid><description>&lt;p>When asking questions or filing bugs / feature requests in the internet, I often
refer to these two invaluable resources:&lt;/p></description><content:encoded><![CDATA[<p>When asking questions or filing bugs / feature requests in the internet, I often
refer to these two invaluable resources:</p>
<ul>
<li><a href="http://www.catb.org/~esr/faqs/smart-questions.html">How To Ask Questions The Smart Way</a> by Eric S. Raymond</li>
<li><a href="https://xyproblem.info">XY problem</a>: The XY problem is asking about your
attempted solution rather than your actual problem. This leads to enormous
amounts of wasted time and energy, both on the part of people asking for help,
and on the part of those providing help.</li>
</ul>
<p>Here is a recent example: <a href="https://github.com/23andMe/Yamale/issues/250">https://github.com/23andMe/Yamale/issues/250</a></p>
<blockquote>
<p><a href="https://xyproblem.info">https://xyproblem.info</a> / Motivation: Somewhat related to #228: It&rsquo;s not
currently possible to exclude files from a given directory. In the context of
developing Kubernetes GitOps repository this is often an issue. The ability to
run yamale on individual files would address it.</p>
</blockquote>]]></content:encoded></item><item><title>Rename files in bulk</title><link>https://www.perrotta.dev/2024/06/rename-files-in-bulk/</link><pubDate>Wed, 19 Jun 2024 13:39:04 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/rename-files-in-bulk/</guid><description>&lt;p>Whenever the files are in the same directory, &lt;code>vidir&lt;/code> from &lt;a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils&lt;/a> is the best
interactive tool.&lt;/p>
&lt;p>If files are scattered across multiple directories, consider using the
&lt;a href="https://man.archlinux.org/man/rename.1.en">&lt;code>rename&lt;/code>&lt;/a> utility from &lt;code>util-linux&lt;/code>.&lt;/p></description><content:encoded><![CDATA[<p>Whenever the files are in the same directory, <code>vidir</code> from <a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils</a> is the best
interactive tool.</p>
<p>If files are scattered across multiple directories, consider using the
<a href="https://man.archlinux.org/man/rename.1.en"><code>rename</code></a> utility from <code>util-linux</code>.</p>
<p>A simple example to rename all <code>readme.md</code> files to <code>README.md</code> for consistency:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>rename <span style="color:#e6db74">&#39;s/readme\.md/README.md/&#39;</span> **/*
</span></span></code></pre></div>]]></content:encoded></item><item><title>Sleep forever</title><link>https://www.perrotta.dev/2024/06/sleep-forever/</link><pubDate>Sat, 15 Jun 2024 15:01:02 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/sleep-forever/</guid><description>&lt;p>The following commands will make the shell sleep indefinitely:&lt;/p></description><content:encoded><![CDATA[<p>The following commands will make the shell sleep indefinitely:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sleep inf
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sleep infinity
</span></span></code></pre></div><p>Previously I would call a command such as a <code>while true</code> loop or the <code>yes</code>
utility, but <code>sleep</code> is also handy.</p>]]></content:encoded></item><item><title>Bcrypt-hash a password</title><link>https://www.perrotta.dev/2024/06/bcrypt-hash-a-password/</link><pubDate>Thu, 06 Jun 2024 13:35:05 +0200</pubDate><guid>https://www.perrotta.dev/2024/06/bcrypt-hash-a-password/</guid><description>&lt;p>Given the password &lt;code>correct horse battery staple&lt;/code>, we would like to bcrypt-hash
it.&lt;/p>
&lt;figure class="align-center ">&lt;a href="https://xkcd.com/936/">
&lt;img loading="lazy" src="https://imgs.xkcd.com/comics/password_strength.png#center"
alt="Through 20 years of effort, we&amp;#39;ve successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess."/> &lt;/a>&lt;figcaption>
&lt;p>XKCD Courtesy of Randall Munroe&lt;/p>
&lt;/figcaption>
&lt;/figure></description><content:encoded><![CDATA[<p>Given the password <code>correct horse battery staple</code>, we would like to bcrypt-hash
it.</p>
<figure class="align-center "><a href="https://xkcd.com/936/">
    <img loading="lazy" src="https://imgs.xkcd.com/comics/password_strength.png#center"
         alt="Through 20 years of effort, we&#39;ve successfully trained everyone to use passwords that are hard for humans to remember, but easy for computers to guess."/> </a><figcaption>
            <p>XKCD Courtesy of Randall Munroe</p>
        </figcaption>
</figure>

<p>Here&rsquo;s one way to do so via the command line:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ htpasswd -nbBC <span style="color:#ae81ff">10</span> <span style="color:#e6db74">&#34;&#34;</span> <span style="color:#e6db74">&#39;correct horse battery staple&#39;</span> | tr -d <span style="color:#e6db74">&#39;:\n&#39;</span> | sed <span style="color:#e6db74">&#39;s/$2y/$2a/&#39;</span>
</span></span></code></pre></div><p>&hellip;which yields:</p>
<pre tabindex="0"><code>$2a$10$HKSHfLu4l7TvOmnLkhUngu2U1pJUUw7hEU0LE1iN84S09fJsZowHm
</code></pre><p>You could verify it matches e.g. via <a href="https://bcrypt-generator.com/">https://bcrypt-generator.com/</a>.</p>
<p><strong>Context</strong>: <a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD</a> expects a
bcrypt-hashed password in its config file.</p>]]></content:encoded></item><item><title>★ Github actions workflow</title><link>https://www.perrotta.dev/2024/05/github-actions-workflow/</link><pubDate>Tue, 28 May 2024 10:23:22 +0200</pubDate><guid>https://www.perrotta.dev/2024/05/github-actions-workflow/</guid><description>&lt;p>This post exemplifies an efficient workflow to shorten the edit-refresh loop
when dealing with github actions.&lt;/p></description><content:encoded><![CDATA[<p>This post exemplifies an efficient workflow to shorten the edit-refresh loop
when dealing with github actions.</p>
<h2 id="assumptions">Assumptions</h2>
<ul>
<li>You have <code>git</code>, <code>jq</code> and the <a href="https://cli.github.com/"><code>gh</code></a> command-line tool
installed (<code>brew install gh</code>)</li>
<li>You have a github actions file in
<code>~/.github/workflows/package-release-dispatch.yml</code>.</li>
<li>The action has the following form:</li>
</ul>
<pre tabindex="0"><code>on:
  workflow_dispatch:
    inputs:
      ref:
        description: &#39;Ref to build from. This can either be a SHA or a branch/tag&#39;
        required: true
        type: string
  push:
    branches:
      - master
    paths:
      - &#39;.github/workflows/package-release-dispatch.yml&#39;
      - &#39;helm/**&#39;
</code></pre><p>The goal is to iterate on the <code>jobs:</code> section of the action.</p>
<h2 id="workflow">Workflow</h2>
<p>Trigger an action run from the command line:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh workflow run package-release-dispatch.yml <span style="color:#f92672">[</span>--ref master<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>-f ref<span style="color:#f92672">=</span>master<span style="color:#f92672">]</span>
</span></span></code></pre></div><p><code>--ref</code> should be the git branch you&rsquo;re working on, for example,
<code>thiagowfx/my-cool-feature</code>.</p>
<p><code>-f</code> provides an input to the workflow. In this case, there&rsquo;s an input named
<code>ref</code>, which is meant to be the branch the action will act upon.</p>
<p>The action takes a little while to trigger, we can <code>sleep</code> to give it some time.
I found that <code>sleep 3</code> is a sensible value (3 seconds).</p>
<p>How to view the action?</p>
<p>First we need to get its ID. Here&rsquo;s one way to do so:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh run list --workflow<span style="color:#f92672">=</span>package-release-dispatch.yml --json databaseId --jq <span style="color:#e6db74">&#39;.[0].databaseId&#39;</span>
</span></span></code></pre></div><h3 id="option-1-via-the-command-line">Option 1) Via the command-line</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh run watch &lt;id&gt;
</span></span></code></pre></div><p>It&rsquo;s analogous to <code>watch</code>, continuously refreshing the action progress in the
background, step by step. Example:</p>
<pre tabindex="0"><code>* master Package release dispatch · 12345678
Triggered via workflow_dispatch about 1 minute ago

JOBS
* build (ID 23456789)
  ✓ Set up job
  ✓ Checkout source code
  ✓ Run azure/setup-helm@v4
  ✓ Install yq
  ✓ Install helm cm-push plugin
  ✓ Set up Helm repos
  * Helm package all charts sans blacklist
  * Publish all helm packages
  * Post Checkout source code
</code></pre><h3 id="option-2-via-the-web-browser">Option 2) Via the web browser</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh run view &lt;id&gt; -w
</span></span></code></pre></div><p>It will open the system web browser in the right page, pertaining to the action
run.</p>
<h2 id="putting-everything-together">Putting everything together</h2>
<h3 id="option-1">Option 1)</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh workflow run package-release-dispatch.yml --ref master -f ref<span style="color:#f92672">=</span>master <span style="color:#f92672">&amp;&amp;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  sleep <span style="color:#ae81ff">3</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  gh run watch <span style="color:#66d9ef">$(</span>gh run list --workflow<span style="color:#f92672">=</span>package-release-dispatch.yml --json databaseId --jq <span style="color:#e6db74">&#39;.[0].databaseId&#39;</span><span style="color:#66d9ef">)</span>
</span></span></code></pre></div><h3 id="option-2">Option 2)</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gh workflow run package-release-dispatch.yml --ref master -f ref<span style="color:#f92672">=</span>master <span style="color:#f92672">&amp;&amp;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  sleep <span style="color:#ae81ff">3</span> <span style="color:#f92672">&amp;&amp;</span> <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>  gh run view <span style="color:#66d9ef">$(</span>gh run list --workflow<span style="color:#f92672">=</span>package-release-dispatch.yml --json databaseId --jq <span style="color:#e6db74">&#39;.[0].databaseId&#39;</span><span style="color:#66d9ef">)</span> -w
</span></span></code></pre></div>]]></content:encoded></item><item><title>Terraform: AWS deployment to random availability zones</title><link>https://www.perrotta.dev/2024/05/terraform-aws-deployment-to-random-availability-zones/</link><pubDate>Tue, 21 May 2024 14:31:03 +0200</pubDate><guid>https://www.perrotta.dev/2024/05/terraform-aws-deployment-to-random-availability-zones/</guid><description>&lt;p>A common scenario: there&amp;rsquo;s a new deployment you would like to roll out to AWS.
Let&amp;rsquo;s say you pick &amp;ldquo;us-east-1&amp;rdquo; as your cloud region. There are multiple
availability zones within it:&lt;/p>
&lt;ul>
&lt;li>us-east-1a&lt;/li>
&lt;li>us-east-1b&lt;/li>
&lt;li>us-east-1c&lt;/li>
&lt;li>us-east-1d&lt;/li>
&lt;li>us-east-1e&lt;/li>
&lt;li>us-east-1f&lt;/li>
&lt;/ul>
&lt;p>Suppose you want to pick two of them for your service/app, and you don&amp;rsquo;t
particularly care about which one. How to proceed?&lt;/p></description><content:encoded><![CDATA[<p>A common scenario: there&rsquo;s a new deployment you would like to roll out to AWS.
Let&rsquo;s say you pick &ldquo;us-east-1&rdquo; as your cloud region. There are multiple
availability zones within it:</p>
<ul>
<li>us-east-1a</li>
<li>us-east-1b</li>
<li>us-east-1c</li>
<li>us-east-1d</li>
<li>us-east-1e</li>
<li>us-east-1f</li>
</ul>
<p>Suppose you want to pick two of them for your service/app, and you don&rsquo;t
particularly care about which one. How to proceed?</p>
<h2 id="option-1-hard-coding">Option #1: Hard-coding</h2>
<p>Pick two arbitrary zones and hard-code them.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-terraform" data-lang="terraform"><span style="display:flex;"><span><span style="color:#66d9ef">variable</span> <span style="color:#e6db74">&#34;availability_zones&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">type</span>    = list(<span style="color:#a6e22e">string</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">default</span> = [<span style="color:#e6db74">&#34;us-east-1a&#34;</span>, <span style="color:#e6db74">&#34;us-east-1b&#34;</span>]
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">resource</span> <span style="color:#e6db74">&#34;aws_subnet&#34;</span> <span style="color:#e6db74">&#34;private&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vpc_id</span>            = <span style="color:#a6e22e">aws_vpc</span>.<span style="color:#a6e22e">chartmuseum</span>.<span style="color:#a6e22e">id</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">cidr_block</span>        = element(var.<span style="color:#a6e22e">private_subnets</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">availability_zone</span> = element(var.<span style="color:#a6e22e">availability_zones</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">count</span>             = length(var.<span style="color:#a6e22e">private_subnets</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Caveat</strong>: <a href="https://www.goodreads.com/book/show/10639.The_Paradox_of_Choice">The paradox of
choice</a>,
unnecessary decision fatigue.</p>
<h2 id="option-2-pick-the-first-two">Option #2: Pick the first two</h2>
<p>Use the AWS data source to dynamically find all zones, and pick the first two.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-terraform" data-lang="terraform"><span style="display:flex;"><span><span style="color:#66d9ef">data</span> <span style="color:#e6db74">&#34;aws_availability_zones&#34;</span> <span style="color:#e6db74">&#34;available&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">state</span> = <span style="color:#e6db74">&#34;available&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">resource</span> <span style="color:#e6db74">&#34;aws_subnet&#34;</span> <span style="color:#e6db74">&#34;private&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vpc_id</span>            = <span style="color:#a6e22e">aws_vpc</span>.<span style="color:#a6e22e">chartmuseum</span>.<span style="color:#a6e22e">id</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">cidr_block</span>        = element(var.<span style="color:#a6e22e">private_subnets</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">availability_zone</span> = element(data.<span style="color:#a6e22e">aws_availability_zones</span>.<span style="color:#a6e22e">available</span>.<span style="color:#a6e22e">names</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">count</span>             = length(var.<span style="color:#a6e22e">private_subnets</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>Note that <code>terraform plan</code> should display the full zone list.</p>
<p><strong>Caveat</strong>: Heavily biased towards the first two zones.</p>
<h2 id="option-3-random-shuffling">Option #3: Random shuffling</h2>
<p>Pick two zones at random!</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-terraform" data-lang="terraform"><span style="display:flex;"><span><span style="color:#66d9ef">data</span> <span style="color:#e6db74">&#34;aws_availability_zones&#34;</span> <span style="color:#e6db74">&#34;available&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">state</span> = <span style="color:#e6db74">&#34;available&#34;</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">resource</span> <span style="color:#e6db74">&#34;random_shuffle&#34;</span> <span style="color:#e6db74">&#34;aws_availability_zone_names&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">input</span>        = data.<span style="color:#a6e22e">aws_availability_zones</span>.<span style="color:#a6e22e">available</span>.<span style="color:#a6e22e">names</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">result_count</span> = <span style="color:#ae81ff">2</span>
</span></span><span style="display:flex;"><span>}
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">resource</span> <span style="color:#e6db74">&#34;aws_subnet&#34;</span> <span style="color:#e6db74">&#34;private&#34;</span> {
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">vpc_id</span>            = <span style="color:#a6e22e">aws_vpc</span>.<span style="color:#a6e22e">chartmuseum</span>.<span style="color:#a6e22e">id</span>
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">cidr_block</span>        = element(var.<span style="color:#a6e22e">private_subnets</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">availability_zone</span> = element(<span style="color:#a6e22e">random_shuffle</span>.<span style="color:#a6e22e">aws_availability_zone_names</span>.<span style="color:#a6e22e">result</span>, count.<span style="color:#a6e22e">index</span>)
</span></span><span style="display:flex;"><span>  <span style="color:#a6e22e">count</span>             = length(var.<span style="color:#a6e22e">private_subnets</span>)
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Winner</strong>: In my opinion, this is the most elegant approach.</p>
<p><code>random_shuffle</code> will output the selected regions upon running <code>terraform apply</code>.</p>]]></content:encoded></item></channel></rss>