<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>not just serendipity</title><link>https://www.perrotta.dev/</link><description>Recent content on not just serendipity</description><generator>Hugo -- 0.132.1</generator><language>en-us</language><copyright>Copyright Â© 2021 - 2024 Thiago Perrotta Â· CC BY-NC-SA 4.0 Â· RSS Â· Made with â™¥ in ðŸ‡¨ðŸ‡¦</copyright><lastBuildDate>Tue, 13 Aug 2024 11:27:17 +0200</lastBuildDate><atom:link href="https://www.perrotta.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>JSON schema negation</title><link>https://www.perrotta.dev/2024/08/json-schema-negation/</link><pubDate>Tue, 13 Aug 2024 11:27:17 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/json-schema-negation/</guid><description>&lt;p>&lt;a href="https://json-schema.org/">JSON Schema&lt;/a> is a powerful validation tool to enforce
a given structure and/or data type in JSON and YAML files.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: Disallow &lt;code>aws.iam_role&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, with the implicit goal of
allowing &lt;code>aws.iamRole&lt;/code>. Because naming and sticking to conventions is hard.&lt;/p>
&lt;p>Illustration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">aws&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">iamRole&lt;/span>: &lt;span style="color:#ae81ff">fooArn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">iam_role&lt;/span>: &lt;span style="color:#ae81ff">barArn &lt;/span> &lt;span style="color:#75715e"># &amp;lt;-- disallow&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description><content:encoded><![CDATA[<p><a href="https://json-schema.org/">JSON Schema</a> is a powerful validation tool to enforce
a given structure and/or data type in JSON and YAML files.</p>
<p><strong>Problem statement</strong>: Disallow <code>aws.iam_role</code><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, with the implicit goal of
allowing <code>aws.iamRole</code>. Because naming and sticking to conventions is hard.</p>
<p>Illustration:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">aws</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">iamRole</span>: <span style="color:#ae81ff">fooArn</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">iam_role</span>: <span style="color:#ae81ff">barArn </span> <span style="color:#75715e"># &lt;-- disallow</span>
</span></span></code></pre></div><p>We can accomplish this with the following schema (<code>% cat values.schema.json</code>):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-json" data-lang="json"><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;$schema&#34;</span>: <span style="color:#e6db74">&#34;http://json-schema.org/draft-07/schema#&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;title&#34;</span>: <span style="color:#e6db74">&#34;Schema that disallows aws.iam_role&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;object&#34;</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;additionalProperties&#34;</span>: <span style="color:#66d9ef">true</span>,
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">&#34;properties&#34;</span>: {
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">&#34;aws&#34;</span>: {
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;type&#34;</span>: <span style="color:#e6db74">&#34;object&#34;</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;additionalProperties&#34;</span>: <span style="color:#66d9ef">true</span>,
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">&#34;not&#34;</span>: {
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">&#34;required&#34;</span>: [<span style="color:#e6db74">&#34;iam_role&#34;</span>]
</span></span><span style="display:flex;"><span>      }
</span></span><span style="display:flex;"><span>    }
</span></span><span style="display:flex;"><span>  }
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>Test</strong>: <code>helm lint</code> should fail that schema validation with the aforementioned
input.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>This is for a <a href="https://helm.sh/docs/topics/charts/#schema-files">helm
chart</a>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Release</title><link>https://www.perrotta.dev/2024/08/release/</link><pubDate>Sat, 10 Aug 2024 21:30:27 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/release/</guid><description>me: walks towards a linux laptop from someone in a party1
me: runs cat /etc/*release
&amp;hellip;Gentoo Linux&amp;hellip;
A smile appears. Enlightenment irradiates.
Which kind of party is this?&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description><content:encoded><![CDATA[<blockquote>
<p><em>me</em>: <em>walks towards a linux laptop</em> from someone in a party<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></p>
<p><em>me</em>: <em>runs</em> <code>cat /etc/*release</code></p>
<p>&hellip;Gentoo Linux&hellip;</p>
<p>A smile appears. Enlightenment irradiates.</p>
</blockquote>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Which kind of party is this?&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>â˜… Self-documented Makefiles</title><link>https://www.perrotta.dev/2024/08/self-documented-makefiles/</link><pubDate>Thu, 08 Aug 2024 10:42:49 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/self-documented-makefiles/</guid><description>&lt;p>&lt;code>Makefile&lt;/code>s are often great &lt;code>bash&lt;/code> script replacements. Instead of creating a
&lt;code>bash&lt;/code> script with multiple functions with various dependencies (from a
topological graph viewpoint), just create a bunch of &lt;code>Makefile&lt;/code> targets.&lt;/p></description><content:encoded><![CDATA[<p><code>Makefile</code>s are often great <code>bash</code> script replacements. Instead of creating a
<code>bash</code> script with multiple functions with various dependencies (from a
topological graph viewpoint), just create a bunch of <code>Makefile</code> targets.</p>
<p>Recently I found myself writing the following <code>Makefile</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#75715e"># This Makefile is used to bootstrap the ArgoCD installation in the cluster.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># It is idempotent.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>ROOT <span style="color:#f92672">:=</span> <span style="color:#66d9ef">$(</span>shell git rev-parse --show-toplevel<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>TERRAFORM_GITHUB_PATH <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/terraform/modules/global-github&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>TERRAFORM <span style="color:#f92672">:=</span> terraform
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">all</span><span style="color:#f92672">:</span> webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Update helm dependencies.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">helm helm-dep-update</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/argocd&#34;</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/external-secrets&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Edit all files.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">edit</span><span style="color:#f92672">:</span> edit-webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Modify github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">edit-webhook webhook-edit</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#e6db74">&#34;</span>$$<span style="color:#e6db74">EDITOR&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">/main.tf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># Apply github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#a6e22e">webhook</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">$(</span>TERRAFORM<span style="color:#66d9ef">)</span> -chdir<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> apply
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">.PHONY</span><span style="color:#f92672">:</span> all edit edit-webhook helm helm-dep-update webhook webhook-edit
</span></span></code></pre></div><p>As you can see, there are a bunch of comments on top of each target. The
question is: How to surface these comments to the user?</p>
<p>A <code>make help</code> command would be great.</p>
<p>With a bit of searching, I found:</p>
<ul>
<li><a href="https://gist.github.com/prwhite/8168133">https://gist.github.com/prwhite/8168133</a></li>
<li><a href="https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html">https://marmelab.com/blog/2016/02/29/auto-documented-makefile.html</a></li>
</ul>
<p>These were good starting points. The technique was to transform the above
<code>Makefile</code> into the following one:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#75715e"># This Makefile is used to bootstrap the ArgoCD installation in the cluster.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"># It is idempotent.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>ROOT <span style="color:#f92672">:=</span> <span style="color:#66d9ef">$(</span>shell git rev-parse --show-toplevel<span style="color:#66d9ef">)</span>
</span></span><span style="display:flex;"><span>TERRAFORM_GITHUB_PATH <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/terraform/modules/global-github&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>TERRAFORM <span style="color:#f92672">:=</span> terraform
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">all</span><span style="color:#f92672">:</span> webhook
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">helm helm-dep-update</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Update helm dependencies.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/argocd&#34;</span>
</span></span><span style="display:flex;"><span>	helm dep update <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>ROOT<span style="color:#66d9ef">)</span><span style="color:#e6db74">/helm/external-secrets&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">edit</span><span style="color:#f92672">:</span> edit-webhook  <span style="color:#75715e">## Edit all files.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">edit-webhook webhook-edit</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Modify github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#e6db74">&#34;</span>$$<span style="color:#e6db74">EDITOR&#34;</span> <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">/main.tf&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">webhook</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Apply github webhooks to the deploy servers.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	<span style="color:#66d9ef">$(</span>TERRAFORM<span style="color:#66d9ef">)</span> -chdir<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>TERRAFORM_GITHUB_PATH<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span> apply
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">.PHONY</span><span style="color:#f92672">:</span> all edit edit-webhook helm helm-dep-update webhook webhook-edit
</span></span></code></pre></div><p>Then we would add a <code>help</code> target to parse the comments after the <code>##</code>.</p>
<p>The first source suggested:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>           <span style="color:#75715e">## Show this help.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@fgrep -h <span style="color:#e6db74">&#34;##&#34;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | fgrep -v fgrep | sed -e <span style="color:#e6db74">&#39;s/\\$$//&#39;</span> | sed -e <span style="color:#e6db74">&#39;s/##//&#39;</span>
</span></span></code></pre></div><p>It is simple and gets the job done, but the formatting was poor:</p>
<pre tabindex="0"><code>% make help
help:            Show this help.
helm helm-dep-update:   Update helm dependencies.
edit: edit-webhook   Edit all files.
edit-webhook webhook-edit:   Modify github webhooks to the deploy servers.
webhook:   Apply github webhooks to the deploy servers.
</code></pre><p>The second source suggested:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>
</span></span><span style="display:flex;"><span>	@grep -E <span style="color:#e6db74">&#39;^[a-zA-Z_-]+:.*?## .*$$&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | sort | awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; {printf &#34;\033[36m%-30s\033[0m %s\n&#34;, $$1, $$2}&#39;</span>
</span></span></code></pre></div><p>&hellip;which produces:</p>
<pre tabindex="0"><code>% make help
edit                           Edit all files.
webhook                        Apply github webhooks to the deploy servers.
</code></pre><p>The formatting is great, but alas it does not match multiple targets in a single
line.</p>
<p>I could have modified the targets to be like this:</p>
<pre tabindex="0"><code>edit-webhook: webhook-edit
webhook-edit:  ## Description here
</code></pre><p>However then I would have to duplicate their comments. I wanted to do better.</p>
<p>With a bit of LLM<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> magic from GPT-4o, we can have the best of both worlds,
supporting both single and multiple targets in the same line:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span><span style="color:#a6e22e">help</span><span style="color:#f92672">:</span>  <span style="color:#75715e">## Show this help.
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>	@grep -E <span style="color:#e6db74">&#39;^[a-zA-Z_-]+([ \t]+[a-zA-Z_-]+)*:[ \t]*## .*$$&#39;</span> <span style="color:#66d9ef">$(</span>MAKEFILE_LIST<span style="color:#66d9ef">)</span> | awk <span style="color:#e6db74">&#39;BEGIN {FS = &#34;:.*?## &#34;}; {n=split($$1, targets, /[ \t]+/); for (i=1; i&lt;=n; i++) {if (targets[i] != &#34;&#34;) printf &#34;\033[36m%-30s\033[0m %s\n&#34;, targets[i], $$2}}&#39;</span> | sort
</span></span></code></pre></div><p>The output (amazing!):</p>
<pre tabindex="0"><code>% make help
edit-webhook                   Modify github webhooks to the deploy servers.
helm                           Update helm dependencies.
helm-dep-update                Update helm dependencies.
help                           Show this help.
webhook                        Apply github webhooks the deploy servers.
webhook-edit                   Modify github webhooks to the deploy servers.
</code></pre><p>The chat session: <a href="https://chatgpt.com/share/f9872dfa-650e-4a0c-b974-701181c237c6">https://chatgpt.com/share/f9872dfa-650e-4a0c-b974-701181c237c6</a>.</p>
<p>We could also add:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-make" data-lang="make"><span style="display:flex;"><span>.DEFAULT_GOAL <span style="color:#f92672">:=</span> help
</span></span></code></pre></div><p>&hellip;to ensure that a plain <code>make</code> invokation behaves like <code>make help</code>.</p>
<p><strong>Edit(2024-08-08)</strong>: I had to make one small adaptation<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> to make it work with
dependencies, which is the whole point of <code>make</code>:</p>
<pre tabindex="0"><code>help:  ## Show this help.
	@grep -E &#39;^[.a-zA-Z_-]+([ \t]+[.a-zA-Z_-]+)*:[ \t.a-zA-Z_-]*## .*$$&#39; $(MAKEFILE_LIST) | awk &#39;BEGIN {FS = &#34;:.*?## &#34;}; {n=split($$1, targets, /[ \t]+/); for (i=1; i&lt;=n; i++) {if (targets[i] != &#34;&#34;) printf &#34;\033[36m%-30s\033[0m %s\n&#34;, targets[i], $$2}}&#39; | sort
</code></pre><p>The previous version would not recognize the following entry:</p>
<pre tabindex="0"><code>all-in-dev: edit webhook  ## Run all necessary steps in the development environment.`
</code></pre><div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>If I&rsquo;ll start to talk about &ldquo;AI&rdquo; in this blog, the very least I can do is
to call them what they really are: <strong>LLMs</strong>. The &ldquo;AI&rdquo; acronym is currently <em>way</em>
too hyped.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Never fully trust LLMs. Well, drop the <em>fully</em>. Just <strong>never trust LLMs</strong>,
period.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Optimize PNG images</title><link>https://www.perrotta.dev/2024/08/optimize-png-images/</link><pubDate>Tue, 06 Aug 2024 14:39:31 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/optimize-png-images/</guid><description>&lt;p>Before checking &lt;code>.png&lt;/code> images into git repositories, you should optimize them â€“
mostly for their file size.&lt;/p></description><content:encoded><![CDATA[<p>Before checking <code>.png</code> images into git repositories, you should optimize them â€“
mostly for their file size.</p>
<p>The Chromium project provides <a href="https://chromium.googlesource.com/chromium/src/+/refs/heads/main/tools/resources/optimize-png-files.sh">this
script</a>
to do so. It boils down to installing and running the following executables:</p>
<ul>
<li><code>optipng</code>: <a href="https://optipng.sourceforge.net/">https://optipng.sourceforge.net/</a></li>
<li><code>pngcrush</code>: <a href="https://pmt.sourceforge.io/pngcrush/">https://pmt.sourceforge.io/pngcrush/</a></li>
<li><code>pngout</code>: <a href="https://www.jonof.id.au/kenutils.html">https://www.jonof.id.au/kenutils.html</a></li>
</ul>
<p>The first two are available via homebrew.</p>]]></content:encoded></item><item><title>kubectl: print all secret values in plain text</title><link>https://www.perrotta.dev/2024/08/kubectl-print-all-secret-values-in-plain-text/</link><pubDate>Tue, 06 Aug 2024 13:37:31 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/kubectl-print-all-secret-values-in-plain-text/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/">kubernetes
secret&lt;/a> with more
than one key-value pair, print &lt;strong>all&lt;/strong> of them in plain text (i.e.
base64-decoded in this context).&lt;/p></description><content:encoded><![CDATA[<p><strong>Problem statement</strong>: Given a <a href="https://kubernetes.io/docs/concepts/configuration/secret/">kubernetes
secret</a> with more
than one key-value pair, print <strong>all</strong> of them in plain text (i.e.
base64-decoded in this context).</p>
<p><strong>Edit(2024-08-08)</strong>: It turns out I made a mistake. The effect of the post
below is akin to <code>kubectl describe [...] -o yaml</code>. I&rsquo;ll keep the post for
bookkeeping purposes anyway.</p>
<p>Basically, something like:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl cat secret -n infra-services my-cool-secret
</span></span></code></pre></div><p>Except that there is no <code>kubectl cat</code>, what a shame. It would be really great if
we had it, for consistency with <code>systemctl cat</code>. Oh well.</p>
<p>There is <code>kubectl edit</code> though â€“ amen, just like <code>systemctl edit</code>. This will
open your <code>$EDITOR</code>. It&rsquo;s often inconvenient to copy text to the clipboard from
your terminal-based editor though, due to intricacies of different terminals,
shells, terminal multiplexers, and OSC-52, therefore I don&rsquo;t deem this as an
acceptable solution.</p>
<p>There is a simple trick though:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>EDITOR<span style="color:#f92672">=</span>cat kubectl edit secret -n infra-services my-cool-secret
</span></span></code></pre></div><p>&hellip;which works exactly as you would expect <code>kubectl cat</code> to behave. It displays
a warning at the end:</p>
<pre tabindex="0"><code>Edit cancelled, no changes made.
</code></pre><p>&hellip;however it can be duly ignored.</p>
<p>If we didn&rsquo;t have this trick, we could have:</p>
<ul>
<li>written a bloated tool in golang to pipe to e.g. <a href="https://github.com/ashleyschuett/kubernetes-secret-decode">https://github.com/ashleyschuett/kubernetes-secret-decode</a> (<a href="https://itnext.io/secrets-in-plain-text-13a98f54ef97">via</a>)</li>
<li>used the <code>kubectl edit</code> trick above, with a decent terminal and OSC-52 setup</li>
<li>used <code>jq</code> with its <code>map</code> and <code>base64d</code> constructs (c.f. <a href="https://stackoverflow.com/questions/50286066/kubernetes-kubectl-print-all-secrets">Stack
Overflow</a>)</li>
<li>used <code>kubectl describe</code> with <code>-o jsonpath</code>, specifying every single field, one
by one (super tedious) c.f. <a href="https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/">this previous post</a></li>
</ul>]]></content:encoded></item><item><title>Direnv nested</title><link>https://www.perrotta.dev/2024/08/direnv-nested/</link><pubDate>Thu, 01 Aug 2024 01:02:10 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/direnv-nested/</guid><description>&lt;p>I covered &lt;a href="https://www.perrotta.dev/2022/01/direnv-automate-your-environment-variables/">&lt;code>direnv&lt;/code>&lt;/a> before.&lt;/p>
&lt;p>&lt;strong>New scenario&lt;/strong>: Given a directory structure with two nested &lt;code>.envrc&lt;/code>s:&lt;/p></description><content:encoded><![CDATA[<p>I covered <a href="https://www.perrotta.dev/2022/01/direnv-automate-your-environment-variables/"><code>direnv</code></a> before.</p>
<p><strong>New scenario</strong>: Given a directory structure with two nested <code>.envrc</code>s:</p>
<pre tabindex="0"><code>% tree -a top
top
â”œâ”€â”€ .envrc
â””â”€â”€ inner
    â””â”€â”€ .envrc
</code></pre><p>It turns out that, surprisingly, <code>cd top/inner</code> will load <em>only</em>
<code>top/inner/.envrc</code>. The top-level <code>top/.envrc</code> will <em>not</em> be automatically
loaded.</p>
<p>This is intentional, meant for security reasons.</p>
<p>In order to source the parent <code>.envrc</code>, add <code>source_up</code> to the inner one.</p>
<p>Alternatively, <code>source_env ..</code> also works. I prefer <code>source_up</code>.</p>
<p>There&rsquo;s also <code>source_up_if_exists</code>, which works gracefully even if there&rsquo;s
no env file to source upwards.</p>
<p>The full list of built-in functions is available here:
<a href="https://direnv.net/man/direnv-stdlib.1.html">https://direnv.net/man/direnv-stdlib.1.html</a></p>
<p><strong>Reference</strong>: <a href="https://github.com/direnv/direnv/issues/757">https://github.com/direnv/direnv/issues/757</a></p>
<p><strong>Use Case</strong>: Add top-level environment variables to <code>top/.envrc</code>. Add <code>layout</code>
to <code>top/inner/.envrc</code>. For example, perhaps <code>inner</code> is a custom <code>git</code> repository
/ project.</p>]]></content:encoded></item><item><title>Disallow AI scraping</title><link>https://www.perrotta.dev/2024/08/disallow-ai-scraping/</link><pubDate>Thu, 01 Aug 2024 00:54:55 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/disallow-ai-scraping/</guid><description>&lt;p>Although there&amp;rsquo;s never a guarantee, you can attempt to disallow &amp;ldquo;AI&amp;rdquo; from
scraping the posts in your blog, in the same spirit of &amp;ldquo;DNT - Do Not Track&amp;rdquo; in
modern web browsers.&lt;/p>
&lt;p>If you have control over your
&lt;a href="https://perrotta.dev/robots.txt">&lt;code>robots.txt&lt;/code>&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>,
add something like the following to it:&lt;/p></description><content:encoded><![CDATA[<p>Although there&rsquo;s never a guarantee, you can attempt to disallow &ldquo;AI&rdquo; from
scraping the posts in your blog, in the same spirit of &ldquo;DNT - Do Not Track&rdquo; in
modern web browsers.</p>
<p>If you have control over your
<a href="https://perrotta.dev/robots.txt"><code>robots.txt</code></a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>,
add something like the following to it:</p>
<pre tabindex="0"><code>User-agent: GPTBot
Disallow: /

User-agent: ChatGPT-User
Disallow: /

User-agent: CCBot
Disallow: /

User-agent: Google-Extended
Disallow: /

User-agent: anthropic-ai
Disallow: /

User-agent: Claude-Web
Disallow: /

User-agent: ClaudeBot
Disallow: /

User-agent: cohere-ai
Disallow: /

User-agent: PerplexityBot
Disallow: /

User-agent: FacebookBot
Disallow: /

# Default rule
User-agent: *
Disallow:
</code></pre><p>The list above is non-exhaustive and will not be kept up-to-date, it&rsquo;s just
meant as a reference and/or starting point.</p>
<p>You could always use Gen AI itself to help you populate it, credits go to
<a href="https://grubz.blog/ai-scrapers-post/">https://grubz.blog/ai-scrapers-post/</a>.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>You <em>really</em> should.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>No analytics</title><link>https://www.perrotta.dev/2024/08/no-analytics/</link><pubDate>Thu, 01 Aug 2024 00:48:27 +0200</pubDate><guid>https://www.perrotta.dev/2024/08/no-analytics/</guid><description>&lt;p>There are many analytics and tracking offerings for blogs. I don&amp;rsquo;t want any of
them.&lt;/p></description><content:encoded><![CDATA[<p>There are many analytics and tracking offerings for blogs. I don&rsquo;t want any of
them.</p>
<p>In this umpteenth iteration of my personal blog, I realized from the start that
I would be much happier by not having any anxiety related to trying to figure
out how many visitors I have.</p>
<p>It&rsquo;s such a peace of mind to write just for the sake of writing.</p>
<p>A public blog is not a journal, yet it plays its own role in the grand scheme of
things.</p>
<p>The world would be a happier place if we cared less about numbers; or, at least,
certain numbers, such as Instagram / Twitter / TikTok followers, or story views,
or blog post impressions.</p>
<p>The obvious and most sensible exception is when(ever) you have a business or a
brand. Then it is important to stay in the know, when your revenue depends on
it.</p>]]></content:encoded></item><item><title>Docker on Alpine Linux</title><link>https://www.perrotta.dev/2024/07/docker-on-alpine-linux/</link><pubDate>Tue, 30 Jul 2024 22:56:58 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/docker-on-alpine-linux/</guid><description>&lt;p>In this post: how to properly start &lt;code>docker&lt;/code> on an Alpine Linux server.&lt;/p></description><content:encoded><![CDATA[<p>In this post: how to properly start <code>docker</code> on an Alpine Linux server.</p>
<p>First, install <code>docker</code> and friends:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas apk add docker docker-cli docker-compose
</span></span></code></pre></div><p>Then start the <code>docker</code> service:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas service docker start
</span></span></code></pre></div><p>Check if it started successfully:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>service docker status
</span></span></code></pre></div><p>If not, then look at the logs:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>less /var/log/docker.log
</span></span></code></pre></div><p>I got an error:</p>
<pre tabindex="0"><code>failed to start daemon: error initializing graphdriver: driver not supported
</code></pre><p>The suggestion was to change the driver to <code>overlay2</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% $EDITOR /etc/docker/daemon.json
</span></span><span style="display:flex;"><span><span style="color:#f92672">{</span>
</span></span><span style="display:flex;"><span>  <span style="color:#e6db74">&#34;storage-driver&#34;</span>: <span style="color:#e6db74">&#34;overlay2&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">}</span>
</span></span></code></pre></div><p>Then restart <code>docker</code>.</p>
<p>I got another error:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>level<span style="color:#f92672">=</span>error msg<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;failed to mount overlay: no such device&#34;</span> storage-driver<span style="color:#f92672">=</span>overlay2
</span></span></code></pre></div><p>The suggestion was to reboot:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas reboot
</span></span></code></pre></div><p>Then start <code>docker</code> again:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>doas service docker start
</span></span></code></pre></div><p>And now everything works!</p>]]></content:encoded></item><item><title>Emoji appropriation</title><link>https://www.perrotta.dev/2024/07/emoji-appropriation/</link><pubDate>Tue, 30 Jul 2024 22:39:12 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/emoji-appropriation/</guid><description>Sometimes, when you chat with people, you notice that they tend to use a certain (sub)set of emojis frequently. The emoji choice is part of their personality.
After a while, you then start to associate the emoji with the person1, even when it is used in other contexts, by other people.
It is such a powerful association meaning.
Which emoji are you?
Also, some people (millenials?) tend to (over)use emoticons, perhaps even more so than GIFs by Gen-Z.</description><content:encoded><![CDATA[<p>Sometimes, when you chat with people, you notice that they tend to use a certain
(sub)set of emojis frequently. The emoji choice is part of their personality.</p>
<p>After a while, you then start to associate the emoji with the person<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>, even
when it is used in other contexts, by other people.</p>
<p>It is such a powerful association meaning.</p>
<p>Which emoji are you?</p>
<p>Also, some people (millenials?) tend to (over)use emoticons, perhaps even more
so than GIFs by Gen-Z. ;)</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Caveat: Your exes better not have their own emoji identity, or else you
<em>will</em> remember them whenever you see the emoji.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></content:encoded></item><item><title>Audiobooks read by the author</title><link>https://www.perrotta.dev/2024/07/audiobooks-read-by-the-author/</link><pubDate>Mon, 29 Jul 2024 10:52:26 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/audiobooks-read-by-the-author/</guid><description>The best non-fiction audiobooks are the ones read by the author. Nothing beats the sense of familiarity and passion than its own creator.</description><content:encoded>&lt;p>The best non-fiction audiobooks are the ones read by the author. Nothing beats
the sense of familiarity and passion than its own creator.&lt;/p>
</content:encoded></item><item><title>Parallel</title><link>https://www.perrotta.dev/2024/07/parallel/</link><pubDate>Wed, 24 Jul 2024 14:48:09 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/parallel/</guid><description>&lt;p>Apparently there are two Unix-y ways to run commands in parallel:&lt;/p>
&lt;ul>
&lt;li>GNU parallel: &lt;a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/&lt;/a>&lt;/li>
&lt;li>moreutils parallel: &lt;a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>Apparently there are two Unix-y ways to run commands in parallel:</p>
<ul>
<li>GNU parallel: <a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/</a></li>
<li>moreutils parallel: <a href="https://www.gnu.org/software/parallel/">https://www.gnu.org/software/parallel/</a></li>
</ul>
<p>A simple example with <code>wc -l</code>:</p>
<p>GNU receives input from stdin:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>find . -type f | parallel wc -l
</span></span></code></pre></div><p>Moreutils receives input from command-line arguments:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>parallel wc -l -- <span style="color:#66d9ef">$(</span>find . -type f<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><p>Style aside, the annoyance is that they are not compatible in Debian, Ubuntu and
macOS (homebrew), due to both having the <code>parallel</code> executable:</p>
<ul>
<li><a href="https://superuser.com/questions/917577/how-can-i-install-gnu-parallel-alongside-moreutils-on-ubuntu-debian">https://superuser.com/questions/917577/how-can-i-install-gnu-parallel-alongside-moreutils-on-ubuntu-debian</a></li>
<li><a href="https://askubuntu.com/questions/1191516/what-happens-to-usr-bin-parallel-if-i-install-the-moreutils-on-top-of-the-paral">https://askubuntu.com/questions/1191516/what-happens-to-usr-bin-parallel-if-i-install-the-moreutils-on-top-of-the-paral</a></li>
</ul>
<p>Debian thread wherein no consensus is achieved:
<a href="https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=597050">https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=597050</a></p>
<p>I will stick to <code>moreutils</code> due to its simplicity and richer suite.
Nonetheless, it would be better if we didn&rsquo;t have binary clashes like this. It
is really annoying and developer-unfriendly.</p>
<p>Of course, my favorite Linux distributions do not have this issue:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% apk info -L moreutils | grep parallel
</span></span><span style="display:flex;"><span>usr/bin/parallel-moreutils
</span></span></code></pre></div><p>&hellip;Alpine just installs <code>parallel</code> from <code>moreutils</code> with another name.</p>
<p>Arch Linux <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/moreutils/-/blob/main/PKGBUILD?ref_type=heads">does the
same</a>:</p>
<pre tabindex="0"><code>mv &#34;$pkgdir&#34;/usr/bin/parallel &#34;$pkgdir&#34;/usr/bin/parallel-moreutils
</code></pre><p>Moreover, GNU Parallel has an annoying citation notice, which the Arch Linux
package <a href="https://gitlab.archlinux.org/archlinux/packaging/packages/parallel/-/blob/main/0001-Remove-citation-things.patch?ref_type=heads">helpfully
removes</a><sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p><a href="https://bugs.launchpad.net/ubuntu/+source/parallel/+bug/1779764">Some</a>
<a href="https://news.ycombinator.com/item?id=15319715">context</a>. Not everyone works
in academia. Also it&rsquo;s quite weird that the program is called &ldquo;GNU
parallel&rdquo;, is published under the GPL, and yet does not seemingly follow the
<a href="https://www.gnu.org/licenses/gpl-faq.en.html#RequireCitation">GPL
guidelines</a>.
<a href="https://git.savannah.gnu.org/cgit/parallel.git/tree/doc/citation-notice-faq.txt#n27">This</a>
is the official FAQ of the program.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Zoom</title><link>https://www.perrotta.dev/2024/07/zoom/</link><pubDate>Tue, 23 Jul 2024 17:58:37 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/zoom/</guid><description>&lt;p>When presenting your screen over video calls, always remember to zoom in.&lt;/p></description><content:encoded><![CDATA[<p>When presenting your screen over video calls, always remember to zoom in.</p>
<p>When presenting your terminal, always remember to use a decent color scheme,
with enough contrast.</p>
<p>When making demos in conferences, always remember to zoom in.</p>
<p>It&rsquo;s not about you, it&rsquo;s about your audience.</p>]]></content:encoded></item><item><title>Alpine Linux: How to install all manpages (idiomatically)</title><link>https://www.perrotta.dev/2024/07/alpine-linux-how-to-install-all-manpages-idiomatically/</link><pubDate>Sat, 20 Jul 2024 16:19:53 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/alpine-linux-how-to-install-all-manpages-idiomatically/</guid><description>&lt;p>This post is a reply to
&lt;a href="https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html">https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html&lt;/a>.&lt;/p>
&lt;p>The author describes their experience while attempting to install all man pages
for all the packages in use in their system.&lt;/p>
&lt;p>The breakdown progression has some valuable insights on how a typical Unix
sysadmin addresses a problem. I tend to adopt a similar approach when entering
unknown territory.&lt;/p>
&lt;p>However, in Alpine Linux, there is a better way.&lt;/p></description><content:encoded><![CDATA[<p>This post is a reply to
<a href="https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html">https://tilde.town/~kzimmermann/articles/installing_alpine_manpages.html</a>.</p>
<p>The author describes their experience while attempting to install all man pages
for all the packages in use in their system.</p>
<p>The breakdown progression has some valuable insights on how a typical Unix
sysadmin addresses a problem. I tend to adopt a similar approach when entering
unknown territory.</p>
<p>However, in Alpine Linux, there is a better way.</p>
<h2 id="solution">Solution</h2>
<p>There is a <code>docs</code> metapackage:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% apk info docs
</span></span><span style="display:flex;"><span>docs-0.2-r6 description:
</span></span><span style="display:flex;"><span>Meta package <span style="color:#66d9ef">for</span> pulling in all documentation
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>docs-0.2-r6 webpage:
</span></span><span style="display:flex;"><span>https://alpinelinux.org
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>docs-0.2-r6 installed size:
</span></span><span style="display:flex;"><span><span style="color:#ae81ff">4096</span> B
</span></span></code></pre></div><p>All you have to do is:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% doas apk add docs
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>1/125<span style="color:#f92672">)</span> Installing mandoc-doc <span style="color:#f92672">(</span>1.14.6-r13<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>2/125<span style="color:#f92672">)</span> Installing docs <span style="color:#f92672">(</span>0.2-r6<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>3/125<span style="color:#f92672">)</span> Installing libseccomp-doc <span style="color:#f92672">(</span>2.5.5-r1<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">(</span>4/125<span style="color:#f92672">)</span> Installing busybox-doc <span style="color:#f92672">(</span>1.36.1-r31<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>...<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>Likewise, it is trivial to get rid of all man pages:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% doas apk del docs
</span></span></code></pre></div><p>I would like to give a few other suggestions to the author, if we were to assume
there is no <code>docs</code> metapackage:</p>
<ul>
<li>
<p><strong>Step 2</strong>: You could also <code>cat /etc/apk/world</code>
(<a href="https://serverfault.com/questions/1032488/alpine-linux-apk-list-out-directly-installed-packages-by-apk-add">reference</a>).</p>
</li>
<li>
<p><strong>Step 4</strong>: <code>combine</code> from <a href="https://www.perrotta.dev/2022/05/tools-you-should-know-about-moreutils/">moreutils</a> is more
user-friendly than <code>comm</code>. I need to look up how to use <code>comm</code> every single
time, whereas <code>combine</code> is much easier to remember.</p>
</li>
</ul>
<h2 id="appendix">Appendix</h2>
<p>This was also a typical <a href="https://www.perrotta.dev/2024/06/xy-problem/">xyproblem</a> example:</p>
<ul>
<li>
<p>What is the attempt? &ldquo;I want to install, via <code>apk add</code>, all <code>foo-doc</code> packages
for every <code>foo</code> package on my system&rdquo;.</p>
</li>
<li>
<p>What is the end goal? &ldquo;I want to install all man pages for the installed
packages on my system&rdquo;.</p>
</li>
</ul>]]></content:encoded></item><item><title>Format dialogues in markdown</title><link>https://www.perrotta.dev/2024/07/format-dialogues-in-markdown/</link><pubDate>Tue, 16 Jul 2024 11:37:53 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/format-dialogues-in-markdown/</guid><description>I wanted to add a new kind of post to this blog, wherein I transcribe conversations (a dialogue).
Initially, I formatted conversations like this:
Alice: Hi Bob: Hello In code:
- Alice: Hi - Bob: Hello But that&amp;rsquo;s just an ordinary list.
I thought about using em-dashes next, but they were meh (â€“).
Then the lazy web helped me with inspirations, and I settled with the following format:
Alice: Hi</description><content:encoded><![CDATA[<p>I wanted to add a new kind of post to this blog, wherein I transcribe
conversations (a dialogue).</p>
<p>Initially, I formatted conversations like this:</p>
<ul>
<li>Alice: Hi</li>
<li>Bob: Hello</li>
</ul>
<p>In code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span><span style="color:#66d9ef">-</span> Alice: Hi
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">-</span> Bob: Hello
</span></span></code></pre></div><p>But that&rsquo;s just an ordinary list.</p>
<p>I thought about using em-dashes next, but they were meh (â€“).</p>
<p>Then the lazy web helped me with inspirations, and I settled with the following
format:</p>
<blockquote>
<p><strong>Alice</strong>: Hi</p>
<p><strong>Bob</strong>: Hello</p>
</blockquote>
<p>In code:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-markdown" data-lang="markdown"><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">**Alice**: Hi
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt;
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef"></span><span style="font-style:italic">&gt; **Bob**: Hello
</span></span></span></code></pre></div><p>It combines blockquotes with bolding the speaker. Simple, yet effective.</p>
<p><strong>Source</strong>: <a href="https://blog.jakelee.co.uk/markdown-conversation-formatting/">https://blog.jakelee.co.uk/markdown-conversation-formatting/</a></p>
]]></content:encoded></item><item><title>Fans</title><link>https://www.perrotta.dev/2024/07/fans/</link><pubDate>Tue, 16 Jul 2024 11:32:43 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/fans/</guid><description>Coworker 1: We need new fans for the office. You are welcome to send some suggestions.
Coworker 2: Let&amp;rsquo;s start a thread on Slack and post some links to Amazon.
Coworker 3: Yes, we chould start a new channel there. It should be called OnlyFans.</description><content:encoded><![CDATA[<blockquote>
<p><strong>Coworker 1</strong>: We need new fans for the office. You are welcome to send some
suggestions.</p>
<p><strong>Coworker 2</strong>: Let&rsquo;s start a thread on Slack and post some links to Amazon.</p>
<p><strong>Coworker 3</strong>: Yes, we chould start a new channel there. It should be called
<em>OnlyFans</em>.</p>
</blockquote>
]]></content:encoded></item><item><title>kubectl: get all logs from all pods</title><link>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</link><pubDate>Mon, 15 Jul 2024 13:23:35 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-all-logs-from-all-pods/</guid><description>&lt;p>Frequently:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But how do you know what hash to use after &lt;code>server-&lt;/code>?&lt;/p></description><content:encoded><![CDATA[<p>Frequently:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-5d59975687-dxnh7
</span></span></code></pre></div><p>But how do you know what hash to use after <code>server-</code>?</p>
<p><strong>Option 1)</strong>: TAB auto-completion:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd argocd-repo-server-&lt;TAB&gt;
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>tab completion for <code>kubectl</code> isn&rsquo;t always properly set up</li>
<li>if there is more than one pod, you would have to type in the first few letters
of the hash before hitting TAB again, that&rsquo;s annoying and non-ergonomic</li>
</ul>
<p><strong>Option 2)</strong>: subshell</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd <span style="color:#66d9ef">$(</span>kubectl get pod -n argocd | grep argocd-repo-server | cut -f1 -d<span style="color:#e6db74">&#39; &#39;</span> | head -1<span style="color:#66d9ef">)</span>
</span></span></code></pre></div><p><strong>Caveats</strong>:</p>
<ul>
<li>a lot of typing</li>
<li><code>head -1</code> is necessary in case there are multiple pods<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup></li>
</ul>
<p><strong>Option 3)</strong>: get all logs from all pods that match a given label</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>kubectl logs -n argocd -l app<span style="color:#f92672">=</span>app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>--all-containers<span style="color:#f92672">]</span> <span style="color:#f92672">[</span>--ignore-errors<span style="color:#f92672">]</span>
</span></span></code></pre></div><p>This is much more ergonomic.</p>
<p>You still need to figure out what label to use though:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl describe pod -n argocd argocd-repo-server-5d59975687-dxnh7 | grep -A7 -i labels:
</span></span><span style="display:flex;"><span>Labels:           app.kubernetes.io/component<span style="color:#f92672">=</span>repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/instance<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/managed-by<span style="color:#f92672">=</span>Helm
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/name<span style="color:#f92672">=</span>argocd-repo-server
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/part-of<span style="color:#f92672">=</span>argocd
</span></span><span style="display:flex;"><span>                  app.kubernetes.io/version<span style="color:#f92672">=</span>v2.11.4
</span></span><span style="display:flex;"><span>                  helm.sh/chart<span style="color:#f92672">=</span>argo-cd-7.3.4
</span></span><span style="display:flex;"><span>                  pod-template-hash<span style="color:#f92672">=</span>5d59975687
</span></span></code></pre></div><p><strong>Source</strong>: <a href="https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller">https://stackoverflow.com/questions/33069736/how-do-i-get-logs-from-all-pods-of-a-kubernetes-replication-controller</a></p>
<p>Happy logging!</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Or <code>tail -1</code>, for that matter.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>kubectl: get secret with jsonpath and add a newline</title><link>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</link><pubDate>Tue, 09 Jul 2024 11:36:34 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/kubectl-get-secret-with-jsonpath-and-add-a-newline/</guid><description>&lt;p>When retrieving opaque secrets with &lt;code>kubectl&lt;/code>, one will often invoke this
typical command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;{.data.value}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ&lt;span style="color:#f92672">==&lt;/span>ubuntu@ubuntu:~ $
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But isn&amp;rsquo;t this ugly? The prompt is concatenated with the output.&lt;/p></description><content:encoded><![CDATA[<p>When retrieving opaque secrets with <code>kubectl</code>, one will often invoke this
typical command:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>But isn&rsquo;t this ugly? The prompt is concatenated with the output.</p>
<p>It turns out <code>jsonpath</code> can emit a newline for improved readability:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>ubuntu@ubuntu:~ $ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span>
</span></span><span style="display:flex;"><span>eW91IGFyZSBjdXJpb3VzIGFyZW50IHlvdQ<span style="color:#f92672">==</span>
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Note that the <code>{&quot;\n&quot;}</code> <strong>must</strong> be quoted.</p>
<p>And then you could pipe it to <code>base64 -d</code> afterwards, as usual, and it&rsquo;s a no-op:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d
</span></span><span style="display:flex;"><span>you are curious arent youubuntu@ubuntu:~ $
</span></span></code></pre></div><p>However, the <code>base64</code> output also swallows the newline. This can be resolved
with a simple <code>echo</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>$ kubectl get secret -n argocd argocd-github-webhook-secret -o jsonpath<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;{.data.value}{&#34;\n&#34;}&#39;</span> | base64 -d <span style="color:#f92672">&amp;&amp;</span> echo
</span></span><span style="display:flex;"><span>you are curious arent you
</span></span><span style="display:flex;"><span>ubuntu@ubuntu:~ $
</span></span></code></pre></div><p>Newlines are hard, eh?</p>]]></content:encoded></item><item><title>icdiff: side-by-side diff</title><link>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</link><pubDate>Tue, 09 Jul 2024 10:47:51 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/icdiff-side-by-side-diff/</guid><description>&lt;p>&lt;a href="https://www.jefftk.com/icdiff">&lt;code>icdiff&lt;/code>&lt;/a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:&lt;/p>
&lt;ul>
&lt;li>colored diff output&lt;/li>
&lt;li>side-by-side diff&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p><a href="https://www.jefftk.com/icdiff"><code>icdiff</code></a> is a simple diffing tool written in
python that comes with two sensible out-of-the-box defaults:</p>
<ul>
<li>colored diff output</li>
<li>side-by-side diff</li>
</ul>
<p>The usual <code>diff</code> tool in Unix system has some basic color support<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>.
Nonetheless, sometimes the output of <code>icdiff</code> is better, with little effort or
memorization.</p>
<p>Given two files (pardon my lack of creativity, but at least you know it&rsquo;s not AI
generated):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% cat first
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>% cat second
</span></span><span style="display:flex;"><span>walter
</span></span><span style="display:flex;"><span>white
</span></span><span style="display:flex;"><span>jesse
</span></span><span style="display:flex;"><span>pinkman
</span></span></code></pre></div><p>Plain <code>diff</code> output (terrible, IMHO):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff first second
</span></span><span style="display:flex;"><span>1,2d0
</span></span><span style="display:flex;"><span>&lt; gustavo
</span></span><span style="display:flex;"><span>&lt; fring
</span></span><span style="display:flex;"><span>4a3,4
</span></span><span style="display:flex;"><span>&gt; jesse
</span></span><span style="display:flex;"><span>&gt; pinkman
</span></span></code></pre></div><p>Better <code>diff</code> output:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% diff --color<span style="color:#f92672">=</span>auto -uN first second
</span></span><span style="display:flex;"><span>--- first	2024-07-09 10:50:01
</span></span><span style="display:flex;"><span>+++ second	2024-07-09 10:50:08
</span></span><span style="display:flex;"><span>@@ -1,4 +1,4 @@
</span></span><span style="display:flex;"><span>-gustavo
</span></span><span style="display:flex;"><span>-fring
</span></span><span style="display:flex;"><span> walter
</span></span><span style="display:flex;"><span> white
</span></span><span style="display:flex;"><span>+jesse
</span></span><span style="display:flex;"><span>+pinkman
</span></span></code></pre></div><p>&hellip;which is why I have <code>alias diff=&quot;diff --color=auto -uN&quot;</code> in my shell config /
dotfiles.</p>
<p>With <code>icdiff</code>:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>% icdiff first second
</span></span><span style="display:flex;"><span>first            second
</span></span><span style="display:flex;"><span>gustavo
</span></span><span style="display:flex;"><span>fring
</span></span><span style="display:flex;"><span>walter           walter
</span></span><span style="display:flex;"><span>white            white
</span></span><span style="display:flex;"><span>                 jesse
</span></span><span style="display:flex;"><span>                 pinkman
</span></span></code></pre></div><p>Two observations:</p>
<ul>
<li>in this blog you cannot see the colors, therefore this example is meh</li>
<li><code>icdiff</code> will happily utilize your full terminal width, positioning the second
column quite to the right in case, thereby fully utilizing the available space</li>
</ul>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>And there&rsquo;s also <code>colordiff</code>.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>]]></content:encoded></item><item><title>Github-flavoured Markdown: Callouts</title><link>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</link><pubDate>Thu, 04 Jul 2024 10:17:08 +0200</pubDate><guid>https://www.perrotta.dev/2024/07/github-flavoured-markdown-callouts/</guid><description>&lt;p>Since the end of the last year it&amp;rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!NOTE]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Highlights information that users should take into account, even when skimming.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!TIP]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Optional information to help a user be more successful.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!IMPORTANT]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Crucial information necessary for users to succeed.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!WARNING]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">[!CAUTION]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="font-style:italic">&lt;/span>&lt;span style="color:#66d9ef">&amp;gt; &lt;/span>&lt;span style="font-style:italic">Negative potential consequences of an action.
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the spirit of &lt;a href="https://github.com/jhuangtw/xg2xg">xg2xg&lt;/a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&amp;ldquo;caution&amp;rdquo;):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-md" data-lang="md">&lt;span style="display:flex;">&lt;span>Note: This is a note.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Tip: This is a tip.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Warning: This is a warning.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Important: This is important.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Sources:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925&lt;/a>&lt;/li>
&lt;/ul></description><content:encoded><![CDATA[<p>Since the end of the last year it&rsquo;s possible to add callouts to markdown files
on GitHub. They are treated specially and rendered in a visually distinct way:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!NOTE]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Highlights information that users should take into account, even when skimming.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!TIP]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Optional information to help a user be more successful.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!IMPORTANT]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Crucial information necessary for users to succeed.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!WARNING]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Critical content demanding immediate user attention due to potential risks.
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">
</span></span></span><span style="display:flex;"><span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">[!CAUTION]
</span></span></span><span style="display:flex;"><span><span style="font-style:italic"></span><span style="color:#66d9ef">&gt; </span><span style="font-style:italic">Negative potential consequences of an action.
</span></span></span></code></pre></div><p>In the spirit of <a href="https://github.com/jhuangtw/xg2xg">xg2xg</a>, this feature has a
direct 1:1 mapping with the classic g3doc callouts at Google (except for
&ldquo;caution&rdquo;):</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span>Note: This is a note.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Tip: This is a tip.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Warning: This is a warning.
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>Important: This is important.
</span></span></code></pre></div><p>Sources:</p>
<ul>
<li><a href="https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/">https://github.blog/changelog/2023-12-14-new-markdown-extension-alerts-provide-distinctive-styling-for-significant-content/</a></li>
<li><a href="https://github.com/orgs/community/discussions/16925">https://github.com/orgs/community/discussions/16925</a></li>
</ul>]]></content:encoded></item></channel></rss>