<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>¬ just serendipity 🍀</title><link>https://perrotta.dev/</link><description>Recent content on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sat, 11 Jan 2025 04:29:42 -0300</lastBuildDate><atom:link href="https://perrotta.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>sscce</title><link>https://perrotta.dev/2025/01/sscce/</link><pubDate>Sat, 11 Jan 2025 04:29:42 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/sscce/</guid><description>&lt;p>&lt;strong>Short, Self Contained, Correct (Compilable), Example&lt;/strong> (&amp;ldquo;sscce&amp;rdquo;):&lt;/p>
&lt;p>If you are having a problem with some code and seeking help, preparing a Short,
Self Contained, Correct Example (SSCCE) is very useful. But what is an SSCCE?&lt;/p>
&lt;p>It is all in the name, really. Take a look at each part. The version prepared
for others to see should be:&lt;/p>
&lt;ul>
&lt;li>Short (Small): Minimise bandwidth for the example, do not bore the audience.&lt;/li>
&lt;li>Self Contained: Ensure everything is included, ready to go.&lt;/li>
&lt;li>Correct: Copy, paste, (compile,) see is the aim.&lt;/li>
&lt;li>Example: Displays the problem we are trying to solve.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Source&lt;/strong>: &lt;a href="https://www.sscce.org/">https://www.sscce.org/&lt;/a>&lt;/p>
&lt;p>One of my favorite resources to link to from Q&amp;amp;A (like Stack Overflow) and forums / BBS.&lt;/p></description></item><item><title>Cloudflare: Email Workers</title><link>https://perrotta.dev/2025/01/cloudflare-email-workers/</link><pubDate>Sat, 11 Jan 2025 01:48:44 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/cloudflare-email-workers/</guid><description>&lt;p>My journey into the
&lt;a href="https://en.wikipedia.org/wiki/Serverless_computing">serverless&lt;/a> world hereby
starts.&lt;/p>
&lt;p>And I am very happy to have chosen &lt;a href="https://www.cloudflare.com/">the best™
provider&lt;/a> in the universe to delight me in this
sweet learning curve. ✨&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: I have my own domain, you have probably noticed that.&lt;/p>
&lt;p>Given a specific hypothetical subdomain &lt;code>neetflex@&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> within my own domain, make
it an email recipient that automatically forwards to both &lt;code>user1@example.com&lt;/code>
and &lt;code>user2@example.com&lt;/code>.&lt;/p>
&lt;p>The first attempt involves setting up an &lt;a href="https://developers.cloudflare.com/email-routing/">Email
Routing&lt;/a> rule. The issue is
that you can only do 1:1 mappings: &lt;code>neetflex@&lt;/code> -&amp;gt; &lt;code>user1@example.com&lt;/code>
would work, but it is impossible to add &lt;code>user2@example.com&lt;/code> for the same
recipient.&lt;/p>
&lt;p>&lt;strong>Workaround&lt;/strong>: &lt;a href="https://developers.cloudflare.com/email-routing/email-workers/">Email Workers&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>With Email Workers you can leverage the power of Cloudflare Workers to
implement any logic you need to process your emails and create complex rules.
These rules determine what happens when you receive an email.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>Aside&lt;/em>: The platform is such a delight to use, I am deeply enchanted. Their
documentation is absolutely superb. I am getting seduced and couldn&amp;rsquo;t agree more
with &lt;a href="https://danielmiessler.com/blog/google-has-opened-the-door-to-cloudflare">Daniel
Miessler&lt;/a>.&lt;/p>
&lt;p>I proceed to create an Email Worker with the following code&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ts" data-lang="ts">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">async&lt;/span> &lt;span style="color:#a6e22e">email&lt;/span>(&lt;span style="color:#a6e22e">message&lt;/span>, &lt;span style="color:#a6e22e">env&lt;/span>, &lt;span style="color:#a6e22e">ctx&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> (&lt;span style="color:#a6e22e">message&lt;/span>.&lt;span style="color:#66d9ef">from&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;info@account.neetflex.com&amp;#34;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> (&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">address&lt;/span> &lt;span style="color:#66d9ef">of&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// keep-sorted start
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#e6db74">&amp;#34;user1@example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;user2@example.com&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// keep-sorted end
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> ]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">await&lt;/span> &lt;span style="color:#a6e22e">message&lt;/span>.&lt;span style="color:#a6e22e">forward&lt;/span>(&lt;span style="color:#a6e22e">address&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;named &lt;code>neetflex-magic-link&lt;/code>.&lt;/p>
&lt;p>There&amp;rsquo;s an integrated testing tool that makes it a breeze to ensure my worker
logic works as intended.&lt;/p>
&lt;p>Once I am satisfied with the results, I deploy the email worker.&lt;/p>
&lt;p>&lt;strong>Final step&lt;/strong>: create an email route rule from &lt;code>neetflex@{domain}&lt;/code> to the
aforementioned email worker. Done, profit!$!&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>At the time of this post, you can
&lt;a href="https://developers.cloudflare.com/workers/languages/">choose&lt;/a> among JavaScript,
TypeScript, Python and Rust to code your worker in.&lt;/p>
&lt;p>Original idea:
&lt;a href="https://community.cloudflare.com/t/routing-an-email-to-more-than-one-address-from-the-same-user/437169/2">source&lt;/a>
from Cloudflare Community.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Don&amp;rsquo;t judge me if I am a fan of &lt;a href="https://neetcode.io/">neetcode&lt;/a>&amp;rsquo;s sense
of humour.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I miss(ed) programming in TypeScript! (even if only such a small snippet).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>&lt;em>Literally&lt;/em>.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>.gitkeep</title><link>https://perrotta.dev/2025/01/.gitkeep/</link><pubDate>Sat, 11 Jan 2025 00:43:44 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/.gitkeep/</guid><description>&lt;p>I&amp;rsquo;m not sure if this is well-known, so here&amp;rsquo;s a short anecdotal blog post:&lt;/p>
&lt;p>&lt;code>git&lt;/code> cannot track empty directories.&lt;/p>
&lt;p>I wanted to add a &lt;code>drafts/&lt;/code> folder to my blog repository, alongside a
&lt;code>.gitignore&lt;/code> containing &lt;code>drafts/*.md&lt;/code> so that my staging posts wouldn&amp;rsquo;t be
accidentally checked into version control.&lt;/p>
&lt;p>If &lt;code>drafts/&lt;/code> is supposed to be empty, then how can I check it into version
control?&lt;/p>
&lt;p>The &lt;a href="https://stackoverflow.com/a/7229996/1745064">answer&lt;/a> is to create a dummy
&lt;code>.gitkeep&lt;/code> file inside it with &lt;code>touch drafts/.gitkeep&lt;/code>. This way I can
&lt;a href="https://github.com/thiagowfx/thiagowfx.github.io/tree/master/drafts">push&lt;/a> the
&lt;code>drafts/&lt;/code> directory to VCS. And it will remain empty (of markdown files)!&lt;/p></description></item><item><title>Anki: insert emoji on macOS</title><link>https://perrotta.dev/2025/01/anki-insert-emoji-on-macos/</link><pubDate>Sat, 11 Jan 2025 00:28:48 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/anki-insert-emoji-on-macos/</guid><description>&lt;p>There&amp;rsquo;s a longstanding bug in &lt;a href="https://apps.ankiweb.net/">Anki&lt;/a> on macOS: it&amp;rsquo;s
not possible to insert an emoji in the editor view via the system emoji picker.&lt;/p>
&lt;p>Whenever you click an emoji, the emoji picker closes whilst nothing is inserted.&lt;/p>
&lt;p>This has always annoyed me.&lt;/p>
&lt;p>Today I found a
&lt;a href="https://forums.ankiweb.net/t/macos-emoji-picker-not-working-in-editor-view/4061">workaround&lt;/a> (thanks Luc!):&lt;/p>
&lt;blockquote>
&lt;p>For anyone who comes across this. I figured out a quick workaround. You have
to open the Emoji-Picker-Keyboard on your Mac and then select the Emoji and
pull it into the editor window with your mouse.&lt;/p>
&lt;/blockquote>
&lt;p>It works indeed!&lt;/p>
&lt;p>My previous alternative was to use the emoji picker to insert an emoji in
another application (e.g. the Notes.app), and then manually cut and paste it.&lt;/p></description></item><item><title>Why self-answer questions in your own blog instead of Stack Overflow?</title><link>https://perrotta.dev/2025/01/why-self-answer-questions-in-your-own-blog-instead-of-stack-overflow/</link><pubDate>Thu, 09 Jan 2025 21:39:29 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/why-self-answer-questions-in-your-own-blog-instead-of-stack-overflow/</guid><description>&lt;p>I am a fan of the &lt;a href="https://stackexchange.com/">Stack Exchange&lt;/a> network, which
includes &lt;a href="https://stackoverflow.com/">Stack Overflow&lt;/a>.&lt;/p>
&lt;p>At the time of this post, I even link to &lt;a href="https://stackoverflow.com/users/1745064/thiagowfx">my
profile&lt;/a> there from the
footer of this website.&lt;/p>
&lt;p>Nonetheless,
&lt;a href="https://substack.evancarroll.com/p/the-erasure-of-luigi-mangione">nothing&lt;/a>
beats &lt;a href="https://news.ycombinator.com/item?id=42642089">owning&lt;/a> your own
&lt;a href="https://gist.github.com/hopeseekr/f522e380e35745bd5bdc3269a9f0b132">content&lt;/a>:&lt;/p>
&lt;p>Theodore R. Smith:&lt;/p>
&lt;blockquote>
&lt;p>If someone with 20,000+ karma has their nicely-formatted questions closed so
quickly, what must the newbies and rank-in-file encounter? This is probably a
big reason why it&amp;rsquo;s declining.&lt;/p>
&lt;/blockquote>
&lt;p>Moderators tend to be extremely (nit)picky there, oftentimes in a way that is
obtrusive and wielding gatekeeping, especially to newcomers.&lt;/p>
&lt;p>It&amp;rsquo;s great when you&amp;rsquo;re under the radar and avoid them; otherwise, it can be
quite cumbersome although, statistically speaking, it&amp;rsquo;s unlikely that you would
encounter this experience. It only happened to me once in 12 years using the
site – but it&amp;rsquo;s worth to note I am not much active there.&lt;/p>
&lt;p>I am trying to post these &amp;ldquo;today I learned&amp;rdquo; posts in my own blog for a myriad of
reasons, some of them including a) owning my content, b) not having to fight for
the right of my own content to exist, c) not wasting time on &lt;a href="https://xkcd.com/386/">frivolous
discussions&lt;/a> with moderators.&lt;/p>
&lt;p>And there&amp;rsquo;s a bit of a psychological dopamine hit as well – it surely feels good
to look back at a subset of lessons from what I have accomplished / learned,
represented by textual blog posts.&lt;/p>
&lt;p>In my opinion though the dopamine is only healthy because the blog is a toy
project. If I had to commercialize it and/or have to care about viral content /
number of readers / impressions / ad revenue then it would sooner or later feel
burdensome and transactional.&lt;/p></description></item><item><title>ArgoCD: cache: key is missing</title><link>https://perrotta.dev/2025/01/argocd-cache-key-is-missing/</link><pubDate>Thu, 09 Jan 2025 20:20:03 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/argocd-cache-key-is-missing/</guid><description>&lt;p>If you experience the title error message in ArgoCD (e.g. via its web UI and/or
in pod logs), it&amp;rsquo;s related to
&lt;a href="https://github.com/argoproj/argo-cd/issues/5068">argo-cd#5068&lt;/a>. The full error
message is:&lt;/p>
&lt;pre tabindex="0">&lt;code>Unable to load data: cache: key is missing
&lt;/code>&lt;/pre>&lt;p>As I
&lt;a href="https://github.com/argoproj/argo-cd/issues/5068#issuecomment-2580878251">commented&lt;/a>
in the bug, here&amp;rsquo;s how to fix it:&lt;/p>
&lt;blockquote>
&lt;p>The following workaround sufficed for me: &lt;code>k delete pod -n argocd argocd-application-controller-0&lt;/code>.&lt;/p>
&lt;p>Initially I ran &lt;code>k rollout restart deployment -n argocd argocd-application-controller&lt;/code> but it didn&amp;rsquo;t work.&lt;/p>
&lt;/blockquote>
&lt;p>In my experience, this error only happens once, ephemerally, during ArgoCD
bootstrapping. Once fixed it does not reoccur.&lt;/p>
&lt;p>Another potential workaround is to disable redis / caching altogether, as ArgoCD
can fully operate without it, but I wouldn&amp;rsquo;t recommend that.&lt;/p></description></item><item><title>Quick and dirty random password generator</title><link>https://perrotta.dev/2025/01/quick-and-dirty-random-password-generator/</link><pubDate>Thu, 09 Jan 2025 16:41:15 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/quick-and-dirty-random-password-generator/</guid><description>&lt;p>On Linux / macOS, use &lt;code>/dev/urandom&lt;/code>, with a &lt;code>tr&lt;/code> pass-through filter:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% tr -dc &lt;span style="color:#e6db74">&amp;#39;A-Za-z0-9&amp;#39;&lt;/span> &amp;lt; /dev/urandom | head -c &lt;span style="color:#ae81ff">20&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> echo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>BLH1gVgdukdmTcvopOuC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the example above only alphanumeric characters are allowed.&lt;/p>
&lt;p>There are other popular ways to do so:&lt;/p>
&lt;ul>
&lt;li>Dice (&lt;a href="https://diceware.dmuth.org/">Douglas Muth&lt;/a>,
&lt;a href="https://www.eff.org/dice">EFF&lt;/a>).&lt;/li>
&lt;li>&lt;a href="https://pwgen.sourceforge.net/">&lt;code>pwgen&lt;/code>&lt;/a> (via &lt;code>brew home pwgen&lt;/code>)&lt;/li>
&lt;/ul></description></item><item><title>YAML: enforce schema linting</title><link>https://perrotta.dev/2025/01/yaml-enforce-schema-linting/</link><pubDate>Thu, 09 Jan 2025 13:22:32 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/yaml-enforce-schema-linting/</guid><description>&lt;p>&lt;a href="https://yaml.org/">YAML&lt;/a> files can have a schema associated to them.&lt;/p>
&lt;p>&lt;a href="https://schemastore.org/">Schema store&lt;/a> is a popular source for schemas. Or you
could &lt;a href="https://json-schema.org/">write your own&lt;/a>.&lt;/p>
&lt;p>JSON Schemas work on YAML files just fine.&lt;/p>
&lt;p>Let&amp;rsquo;s say you found a schema. For example, for &lt;a href="https://json.schemastore.org/json-patch.json">JSON Patch&lt;/a>.&lt;/p>
&lt;p>Assume this sample &lt;code>.yaml&lt;/code> file:&lt;/p>
&lt;pre tabindex="0">&lt;code>- op: remove
 path: /spec/syncPolicy/automated
&lt;/code>&lt;/pre>&lt;p>How to enforce the schema above in CI?&lt;/p>
&lt;p>One approach I like is with &lt;a href="https://github.com/redhat-developer/yaml-language-server">YAML Language
Server&lt;/a> by Red Hat.&lt;/p>
&lt;p>You start by annotating the file with the desired schema:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># yaml-language-server: $schema=https://json.schemastore.org/json-patch.json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">op&lt;/span>: &lt;span style="color:#ae81ff">remove&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/spec/syncPolicy/automated&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And then you integrate it with a CI tool that is aware of it. I like
&lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a>. Assuming you follow the pre-commit
setup, integrate the hook:&lt;/p>
&lt;pre tabindex="0">&lt;code>repos:
 - repo: https://github.com/jmlrt/check-yamlschema
 rev: v0.0.4
 hooks:
 - id: check-yamlschema
&lt;/code>&lt;/pre>&lt;p>Then &lt;code>pre-commit run [--all-files] check-yamlschema&lt;/code> shall perform its job.&lt;/p>
&lt;p>&lt;a href="https://github.com/jmlrt/check-yamlschema">https://github.com/jmlrt/check-yamlschema&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A CLI and pre-commit hook for jsonschema validation in YAML files with
multiple documents&lt;/p>
&lt;p>Parse multi-documents YAML files, look for inline schema comments, and
validate the documents according to their schema.&lt;/p>
&lt;/blockquote>
&lt;p>The &lt;a href="https://json.schemastore.org/any.json">&amp;lsquo;any&amp;rsquo;&lt;/a> schema&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> can be handy as an
opt-out mechanism:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;$schema&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;http://json-schema.org/draft-07/schema#&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;$id&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;https://json.schemastore.org/any.json&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;anyOf&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;object&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;array&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;string&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;number&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;boolean&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#f92672">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;null&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;a href="https://github.com/SchemaStore/schemastore/pull/3885">Submitted&lt;/a> by yours truly.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>ghostty: find popular themes</title><link>https://perrotta.dev/2025/01/ghostty-find-popular-themes/</link><pubDate>Thu, 09 Jan 2025 02:56:37 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/ghostty-find-popular-themes/</guid><description>&lt;p>&lt;a href="https://ghostty.org/">Ghostty 1.0&lt;/a> was barely released and it&amp;rsquo;s already quite
popular.&lt;/p>
&lt;p>I&amp;rsquo;ve been &lt;a href="https://perrotta.dev/2024/12/ghostty/">daily driving&lt;/a> it since December
last year and it has been quite enjoyable. There are a few annoyances here and
there, but its minimalism and speed make up for them.&lt;/p>
&lt;p>Today I stumbled upon &lt;a href="https://ghostty.town/">ghostty.town&lt;/a>, which hosts
user-submitted configs. Reminds me of:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://terminal.love/">https://terminal.love/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://terminal.sexy/">https://terminal.sexy/&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>My current config is quite simple (by design!):&lt;/p>
&lt;pre tabindex="0">&lt;code>cursor-style-blink = false
shell-integration-features = no-cursor

theme=catppuccin-macchiato

macos-titlebar-style=tabs
&lt;/code>&lt;/pre>&lt;p>I got inspired to use the &lt;a href="https://catppuccin.com/">Catppuccin&lt;/a> theme thanks to
&lt;a href="https://jnsgr.uk/2024/07/how-i-computer-in-2024/">Jon Seager&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s no need to customize the default font as it&amp;rsquo;s &lt;a href="https://perrotta.dev/2024/12/picking-a-monospaced-code-font/">quite sensible&lt;/a> (JetBrains Mono, &lt;a href="https://ghostty.org/docs/config">as
per&lt;/a>).&lt;/p></description></item><item><title>Helm: migrate chart dependencies from HTTPS to OCI</title><link>https://perrotta.dev/2025/01/helm-migrate-chart-dependencies-from-https-to-oci/</link><pubDate>Wed, 08 Jan 2025 18:45:57 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/helm-migrate-chart-dependencies-from-https-to-oci/</guid><description>&lt;p>I got aware of this due to
&lt;a href="https://blog.bitnami.com/2024/10/bitnami-helm-charts-moving-to-oci.html">Bitnami&lt;/a>&amp;rsquo;s
blog post.&lt;/p>
&lt;p>In &lt;code>Chart.yaml&lt;/code>, instead of depending on:&lt;/p>
&lt;pre tabindex="0">&lt;code>- https://charts.bitnami.com/bitnami/airflow-18.3.2.tgz
&lt;/code>&lt;/pre>&lt;p>Instead, depend on:&lt;/p>
&lt;pre tabindex="0">&lt;code>- oci://registry-1.docker.io/bitnamicharts/airflow:18.3.2
&lt;/code>&lt;/pre>&lt;p>The switch is transparent, it works out-of-the-box.&lt;/p>
&lt;p>However there&amp;rsquo;s one caveat: You cannot &lt;code>helm repo add oci://registry-1.docker.io/bitnamicharts&lt;/code>. That only works for &lt;code>https://&lt;/code>
registries.&lt;/p>
&lt;p>The workaround is to &lt;code>helm pull oci://[...] --version {version}&lt;/code> and/or to
browse available tags/versions via docker hub.&lt;/p></description></item><item><title>Alpine Linux: install / pin old packages</title><link>https://perrotta.dev/2025/01/alpine-linux-install-/-pin-old-packages/</link><pubDate>Wed, 08 Jan 2025 15:54:44 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/alpine-linux-install-/-pin-old-packages/</guid><description>&lt;p>Let&amp;rsquo;s say you want to install an older version of &lt;code>jq&lt;/code> in Alpine Linux.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;ul>
&lt;li>Alpine v3.18 has &lt;code>jq&lt;/code> 1.6&lt;/li>
&lt;li>Alpine v3.19 has &lt;code>jq&lt;/code> 1.7&lt;/li>
&lt;/ul>
&lt;p>You&amp;rsquo;re probably using Alpine v3.21 or edge today, which has an even newer
version of &lt;code>jq&lt;/code>. Hence &lt;code>doas apk add jq&lt;/code> will not do.&lt;/p>
&lt;p>Let&amp;rsquo;s assume you do not want to edit your &lt;code>/etc/apk/repositories&lt;/code>, as this is an
one-off, for a single package. What can you do then?&lt;/p>
&lt;p>Use the &lt;code>--repository&lt;/code> flag from &lt;code>apk&lt;/code>!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas apk add --no-cache --repository&lt;span style="color:#f92672">=&lt;/span>http://dl-cdn.alpinelinux.org/alpine/v3.18/main jq&lt;span style="color:#f92672">=&lt;/span>~1.6
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s also important to pin the package version (&lt;code>~1.6&lt;/code>), otherwise the latest
one available gets installed.&lt;/p></description></item><item><title>Emissor NFE Sebrae v4.01 para emissão de notas fiscais</title><link>https://perrotta.dev/2025/01/emissor-nfe-sebrae-v4.01-para-emiss%C3%A3o-de-notas-fiscais/</link><pubDate>Wed, 08 Jan 2025 00:29:46 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/emissor-nfe-sebrae-v4.01-para-emiss%C3%A3o-de-notas-fiscais/</guid><description>&lt;p>&lt;em>To my English-speaking readers: this post contains Brazilian bureaucracy and
it&amp;rsquo;s in Portuguese, you may want to skip it.&lt;/em>&lt;/p>
&lt;h2 id="instalação">Instalação&lt;/h2>
&lt;p>Baixe o arquivo JNLP (cópia): &lt;a href="emissorNfe-4_0_1.jnlp">emissorNfe-4_0_1.jnlp&lt;/a>.&lt;/p>
&lt;p>Ou direto da fonte: &lt;a href="https://storage.googleapis.com/nfe-sebrae-prd/nfe/v401/producao/emissorNFe-4_0_1.jnlp">GCS&lt;/a>&lt;/p>
&lt;p>Execute-o com o Java Web Start (JWS) do Java 8. Não existe mais JWS a partir do
Java 11. Caso não tenha um runtime (JRE), baixe-o diretamente do &lt;a href="https://www.java.com/pt-BR/download/manual.jsp">site da
Oracle&lt;/a>.&lt;/p>
&lt;p>Caso não funcione, delete e reinstale o applet:&lt;/p>
&lt;ul>
&lt;li>Abra o Menu Iniciar&lt;/li>
&lt;li>Procure &amp;ldquo;Configurar Java&amp;rdquo; no campo de busca&lt;/li>
&lt;li>Clique na Aba &amp;ldquo;Geral&amp;rdquo;&lt;/li>
&lt;li>Em &amp;ldquo;Arquivos Temporários na Internet&amp;rdquo;, clique em &amp;ldquo;Exibir&amp;hellip;&amp;rdquo;&lt;/li>
&lt;li>Clique no ícone do emissor, e depois no botão &amp;lsquo;X&amp;rsquo; vermelho.&lt;/li>
&lt;li>Execute o arquivo JNLP novamente.&lt;/li>
&lt;/ul>
&lt;h2 id="notas">Notas&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://openwebstart.com/">OpenWebStart&lt;/a> não funcionou. Ele lança uma
exceção.&lt;/li>
&lt;/ul></description></item><item><title>bash: distinguish between script invocation versus source</title><link>https://perrotta.dev/2025/01/bash-distinguish-between-script-invocation-versus-source/</link><pubDate>Tue, 07 Jan 2025 22:08:20 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/bash-distinguish-between-script-invocation-versus-source/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a &lt;code>main.sh&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> bash script that does a bunch of
variable &lt;code>export&lt;/code>s:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># [...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export AWS_ACCESS_KEY_ID&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$credentials&lt;span style="color:#e6db74">&amp;#34;&lt;/span> | jq -r &lt;span style="color:#e6db74">&amp;#39;.Credentials.AccessKeyId&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export AWS_SECRET_ACCESS_KEY&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$credentials&lt;span style="color:#e6db74">&amp;#34;&lt;/span> | jq -r &lt;span style="color:#e6db74">&amp;#39;.Credentials.SecretAccessKey&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>export AWS_SESSION_TOKEN&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>echo &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$credentials&lt;span style="color:#e6db74">&amp;#34;&lt;/span> | jq -r &lt;span style="color:#e6db74">&amp;#39;.Credentials.SessionToken&amp;#39;&lt;/span>&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;we want to source it so that these exported variables become available in the
current shell context&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ source ./main.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;at the same time, we want to prevent users from invoking it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>$ ./main.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;because, otherwise, the variables wouldn&amp;rsquo;t be exported.&lt;/p>
&lt;p>How can we distinguish between these two forms in &lt;code>bash&lt;/code>?&lt;/p>
&lt;p>The following snippet works in this scenario:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$0&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>BASH_SOURCE[0]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;error: do not invoke this script directly; instead, run \`source &lt;/span>$0&lt;span style="color:#e6db74">\`&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The general scenario is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">[[&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>$0&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">${&lt;/span>BASH_SOURCE[0]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">]]&lt;/span>; &lt;span style="color:#66d9ef">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The script was invoked with ./main.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> echo &lt;span style="color:#e6db74">&amp;#34;The script was invoked with source main.sh&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="llm-moment">LLM moment&lt;/h2>
&lt;p>I got it from ChatGPT + personal amends. If you&amp;rsquo;re curious, this is the original
snippet obtained with the first prompt:&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/bin/bash

if [[ $0 = &amp;#34;$BASH_SOURCE&amp;#34; ]]; then
 echo &amp;#34;The script was invoked with ./main.sh&amp;#34;
else
 echo &amp;#34;The script was invoked with source main.sh&amp;#34;
fi
&lt;/code>&lt;/pre>&lt;p>Out of curiosity, I asked:&lt;/p>
&lt;blockquote>
&lt;p>improve this script&lt;/p>
&lt;/blockquote>
&lt;p>To which I got:&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/bin/bash

if [[ &amp;#34;${BASH_SOURCE[0]}&amp;#34; == &amp;#34;${0}&amp;#34; ]]; then
 echo &amp;#34;The script was invoked with ./main.sh&amp;#34;
else
 echo &amp;#34;The script was invoked with source main.sh or . main.sh&amp;#34;
fi
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;which is similar to my final version. Not bad! That said, you would hope
that, in 2025, this &amp;ldquo;improve this script&amp;rdquo; chain-of-thought prompt reasoning
would be part of the model out-of-the-box, oneshot. &lt;em>Oh, well.&lt;/em>&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s for &lt;a href="https://perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/">this script&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In this context the &lt;code>./&lt;/code> is optional and was added only for clarity.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Diffing two directories</title><link>https://perrotta.dev/2025/01/diffing-two-directories/</link><pubDate>Tue, 07 Jan 2025 15:23:55 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/diffing-two-directories/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given an &amp;lsquo;alpha&amp;rsquo; directory setup with a bunch of
configuration files (e.g. for CI/CD) that works for one cluster, and given
another &amp;lsquo;bravo&amp;rsquo; directory for a distinct cluster, how can you compare the
differences between both directories e.g. perhaps to reconcile them, or to make
them consistent and uniform?&lt;/p>
&lt;p>In this context, &lt;code>cp -r&lt;/code> or &lt;code>rsync&lt;/code> are out of scope. We do not want to clone
one directory into another: that would have been trivial.&lt;/p>
&lt;h1 id="diffoscope">Diffoscope&lt;/h1>
&lt;p>Main tool: &lt;a href="https://diffoscope.org/">Diffoscope&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>In-depth comparison of files, archives, and directories.&lt;/p>
&lt;p>diffoscope tries to get to the bottom of what makes files or directories
different. It will recursively unpack archives of many kinds and transform
various binary formats into more human-readable form to compare them. It can
compare two tarballs, ISO images, or PDF just as easily.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>diffoscope&lt;/code> gained a lot of popularity a few years ago, when linux
distributions started to care about &lt;a href="https://reproducible-builds.org/">reproducible
builds&lt;/a>. In fact, it&amp;rsquo;s highlighted in their
&lt;a href="https://reproducible-builds.org/tools/">tools&lt;/a> page.&lt;/p>
&lt;p>&lt;strong>Usage&lt;/strong>: Very similar to &lt;code>diff&lt;/code>. Run &lt;code>diffoscope {dir1} {dir2}&lt;/code>.&lt;/p>
&lt;h2 id="midnight-commander">Midnight Commander&lt;/h2>
&lt;p>The classic &lt;a href="https://midnight-commander.org/">&lt;code>mc&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>GNU Midnight Commander is a visual file manager, licensed under GNU General
Public License and therefore qualifies as Free Software. It&amp;rsquo;s a feature rich
full-screen text mode application that allows you to copy, move and delete
files and whole directory trees, search for files and run commands in the
subshell. Internal viewer and editor are included.&lt;/p>
&lt;/blockquote>
&lt;p>It has two side-by-side panes. The idea is to navigate to a directory in each
pane (toggle pane focus with &lt;code>Tab&lt;/code>), and then perform a visual inspection (use
arrow keys to navigate). The effect is comparable to having two side-by-side
&lt;code>tmux&lt;/code> panes with &lt;a href="https://github.com/ranger/ranger">&lt;code>ranger&lt;/code>&lt;/a> opened in each of
them.&lt;/p></description></item><item><title>nginx: add basic auth</title><link>https://perrotta.dev/2025/01/nginx-add-basic-auth/</link><pubDate>Tue, 07 Jan 2025 03:28:02 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/nginx-add-basic-auth/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: You want to expose a HTTPS service from your cloud VPS to
the public Internet. You do not wish to use a VPN (e.g.
&lt;a href="https://tailscale.com/">tailscale&lt;/a>) to do so – which is a great way to address
this, but it&amp;rsquo;s out of scope in this particular instance. How to proceed?&lt;/p>
&lt;p>Here&amp;rsquo;s a simple yet effective way: use / configure &lt;a href="https://nginx.org/">nginx&lt;/a>
as a reverse proxy.&lt;/p>
&lt;p>Then add &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Authentication">HTTP basic
auth&lt;/a> to it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% doas htpasswd -c /etc/nginx/.htpasswd myuser
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The command will prompt for a password.&lt;/p>
&lt;p>Once it&amp;rsquo;s set, add two lines to the corresponding &lt;code>server {}&lt;/code> block in your
nginx config:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">auth_basic&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Restricted&lt;/span> &lt;span style="color:#e6db74">Access&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">auth_basic_user_file&lt;/span> &lt;span style="color:#e6db74">/etc/nginx/.htpasswd&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#960050;background-color:#1e0010">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally: run &lt;code>nginx -s reload&lt;/code>.&lt;/p>
&lt;p>Now, whenever you navigate to that host, you&amp;rsquo;ll be prompted to enter the basic
HTTP auth creds above.&lt;/p>
&lt;p>The beauty of this approach is that it works for any HTTPS server, as it is
service agnostic.&lt;/p>
&lt;p>The next level would be to integrate an SSO solution such as
&lt;a href="https://goauthentik.io/">Authentik&lt;/a>, however it&amp;rsquo;s quite more complex.&lt;/p></description></item><item><title>Stimulation Clicker</title><link>https://perrotta.dev/2025/01/stimulation-clicker/</link><pubDate>Tue, 07 Jan 2025 01:59:39 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/stimulation-clicker/</guid><description>&lt;p>&lt;a href="https://neal.fun/stimulation-clicker/">Stimulation Clicker&lt;/a> by Neal Agarwal
(via &lt;a href="https://news.ycombinator.com/item?id=42611536">HN&lt;/a>).&lt;/p>
&lt;p>One more to the pile.&lt;/p>
&lt;p>Previously:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.decisionproblem.com/paperclips/">Universal Paper Clips&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://perrotta.dev/2024/10/exponential-idle/">Exponential Idle&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Your app should have been a website</title><link>https://perrotta.dev/2025/01/your-app-should-have-been-a-website/</link><pubDate>Tue, 07 Jan 2025 01:06:22 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/your-app-should-have-been-a-website/</guid><description>&lt;p>P. Martin Ortiz (&lt;a href="https://schwarztech.net/snippets/your-app-should-have-been-a-website">via Eric Schwarz&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>Remember when every company rushed to make an app? Airlines, restaurants, even
your local coffee shop. Back then, it made some sense. Browsers weren&amp;rsquo;t as
powerful, and apps had unique features like notifications and offline access.
But fast-forward to today, and browsers can do all that. Yet businesses still
push native apps as if it&amp;rsquo;s 2010, and we&amp;rsquo;re left downloading apps for things
that should just work on the web.&lt;/p>
&lt;/blockquote>
&lt;p>I am waiting for the modern™ version: &amp;ldquo;your website should have been a LLM
prompt&amp;rdquo;.&lt;/p></description></item><item><title>Logseq: linking and backlinking</title><link>https://perrotta.dev/2025/01/logseq-linking-and-backlinking/</link><pubDate>Mon, 06 Jan 2025 22:49:44 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/logseq-linking-and-backlinking/</guid><description>&lt;p>This is the first post with the &lt;a href="https://perrotta.dev/tags/pkm/">pkm&lt;/a> tag. Run before
it&amp;rsquo;s &lt;a href="https://en.wikipedia.org/wiki/The_Paradox_of_Choice">too late&lt;/a>!&lt;/p>
&lt;p>Expect more of these as I find myself slowly migrating from
&lt;a href="https://obsidian.md/">Obsidian&lt;/a> to &lt;a href="https://logseq.com/">Logseq&lt;/a>. More on that
later.&lt;/p>
&lt;p>When creating pages in logseq, there are &lt;strong>two&lt;/strong> basic forms to link to other pages,
and they are essentially equivalent.&lt;/p>
&lt;p>The first one is to use a &lt;code>#hashtag&lt;/code> (or simply &amp;rsquo;tag&amp;rsquo;). For example:&lt;/p>
&lt;pre tabindex="0">&lt;code>Books to read in 2010:

- The Hitchhiker&amp;#39;s Guide to the Galaxy by Douglas Adams #book #fiction
- Harry Potter and the Prisoner of Azkaban by J.K. Rowling #book #fiction
- Elite da Tropa by André Batista, Rodrigo Pimentel &amp;amp; Luiz Eduardo Soares #book #nonfiction
&lt;/code>&lt;/pre>&lt;p>&lt;em>^alpha&lt;/em>&lt;/p>
&lt;p>Under the hood it creates 3 pages: &lt;code>Book&lt;/code>, &lt;code>Fiction&lt;/code> and &lt;code>Nonfiction&lt;/code>. Clicking
any of these hashtags opens up the corresponding page. In the page it&amp;rsquo;s possible
to find a backlink to the original page / block that links to it.&lt;/p>
&lt;p>The second one is to use double brackets. For example:&lt;/p>
&lt;pre tabindex="0">&lt;code>- Elite da Tropa is a Brazilian [[book]] written by the ex-police officers André
 Batista and Rodrigo Pimentel together with Luiz Eduardo Soares. It was first
 published in 2006. The book originated the film Elite Squad.
 - Source: https://en.wikipedia.org/wiki/Elite_da_Tropa
&lt;/code>&lt;/pre>&lt;p>&lt;em>^bravo&lt;/em>&lt;/p>
&lt;p>Clicking &lt;code>[[book]]&lt;/code> goes to the same page as &lt;code>#book&lt;/code>.&lt;/p>
&lt;p>Why are there two forms? I don&amp;rsquo;t know. But here&amp;rsquo;s what I learned: it doesn&amp;rsquo;t
matter which one you choose to use, as they are effectively equivalent. For
example, you could have written instead:&lt;/p>
&lt;pre tabindex="0">&lt;code>- Elite da Tropa is a Brazilian #book written by the ex-police officers André
 Batista and Rodrigo Pimentel together with Luiz Eduardo Soares. It was first
 published in 2006. The book originated the film Elite Squad.
 - Source: https://en.wikipedia.org/wiki/Elite_da_Tropa
&lt;/code>&lt;/pre>&lt;p>&lt;em>^charlie&lt;/em>&lt;/p>
&lt;p>&amp;hellip;the effect would have been the same.&lt;/p>
&lt;p>The idiomatic style seems to favour the use of double brackets when writing
prose (i.e. &lt;em>bravo&lt;/em>), and the use of hashtags when &amp;ldquo;tagging&amp;rdquo; or qualifying
sentences (i.e. &lt;em>alpha&lt;/em>). That said, intermixing them is harmless.&lt;/p></description></item><item><title>Linux is free if your time is worthless</title><link>https://perrotta.dev/2025/01/linux-is-free-if-your-time-is-worthless/</link><pubDate>Mon, 06 Jan 2025 01:32:57 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/linux-is-free-if-your-time-is-worthless/</guid><description>&lt;p>(&lt;a href="https://amontalenti.com/2025/01/05/linux-is-free">via Andrew Montalenti&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>One of my favorite old Linux jokes is, &amp;ldquo;Linux is free… if your time is
worthless.&amp;rdquo; This quote is possibly adapted from a jwz interview dating back to
1998. In it, he said:&lt;/p>
&lt;blockquote>
&lt;p>I think Linux is a great thing, because Linux is an alternative to [major
operating systems], and because, of all the operating systems that are at
all relevant today, Unix is the best of a bad lot. […] As we all know, Linux
is only free if your time has no value, and I find that my time is better
spent doing things other than the endless moving-target-upgrade dance.&lt;/p>
&lt;/blockquote>
&lt;/blockquote>
&lt;p>Snark aside, that&amp;rsquo;s a good read.&lt;/p>
&lt;p>Ever since &lt;a href="https://www.cncf.io/">&amp;ldquo;Cloud Native&amp;rdquo;&lt;/a> became mainstream, developer
userspace tools became more valuable than whatever OS flavour you choose to run.
So pick &lt;a href="https://kevquirk.com/blog/on-virtue-signalling">whichever you like&lt;/a>,
work hard, and have fun.&lt;/p>
&lt;p>And yes, 2025 is finally the &lt;a href="https://yotld.com/">year of the linux desktop&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Or is it?&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>LaTeX beamer slides with notes</title><link>https://perrotta.dev/2025/01/latex-beamer-slides-with-notes/</link><pubDate>Mon, 06 Jan 2025 01:02:56 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/latex-beamer-slides-with-notes/</guid><description>&lt;p>(&lt;a href="https://gist.github.com/andrejbauer/ac361549ac2186be0cdb">via Andrej Bauer&lt;/a> from University of Ljubljana, adapted):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-tex" data-lang="tex">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\documentclass&lt;/span>&lt;span style="color:#a6e22e">[12pt]&lt;/span>{beamer}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\usepackage&lt;/span>{pgfpages}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">%\setbeameroption{hide notes} % Only slides
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">%\setbeameroption{show only notes} % Only notes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">\setbeameroption&lt;/span>{show notes on second screen=right} &lt;span style="color:#75715e">% Both
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">% Give a slight yellow tint to the notes page
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">\setbeamertemplate&lt;/span>{note page}{&lt;span style="color:#66d9ef">\pagecolor&lt;/span>{yellow!5}&lt;span style="color:#66d9ef">\insertnote&lt;/span>}&lt;span style="color:#66d9ef">\usepackage&lt;/span>{palatino}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\title&lt;/span>{How to make Beamer slides with notes}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\author&lt;/span>{Thiago Perrotta&lt;span style="color:#66d9ef">\\&lt;/span>Universidade Federal do Rio de Janeiro}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\date&lt;/span>{&lt;span style="color:#66d9ef">\small&lt;/span> &lt;span style="color:#66d9ef">\today&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\begin&lt;/span>{document}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\begin&lt;/span>{frame}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\titlepage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\note&lt;/span>&lt;span style="color:#a6e22e">[item]&lt;/span>{Thank the audience for being awake.}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\end&lt;/span>{frame}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\begin&lt;/span>{frame}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\begin&lt;/span>{itemize}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\item&lt;/span> Here are
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\item&lt;/span> some very boring bullets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\item&lt;/span> about nothing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\end&lt;/span>{itemize}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\note&lt;/span>&lt;span style="color:#a6e22e">[item]&lt;/span>{Note that this slide is boring.}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\note&lt;/span>&lt;span style="color:#a6e22e">[item]&lt;/span>{Observe that there are no actual bullets here.}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">\note&lt;/span>&lt;span style="color:#a6e22e">[item]&lt;/span>{Future work: add another bullet.}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\end&lt;/span>{frame}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">\end&lt;/span>{document}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I created a sample LaTeX project on &lt;a href="https://www.overleaf.com/">Overleaf&lt;/a>
because I did not want to install the full &lt;a href="https://tug.org/texlive/">texlive&lt;/a>
suite on my Mac.&lt;/p>
&lt;p>It compiled successfully and worked beautifully.&lt;/p>
&lt;p>The workflow is: 1) Generate the notes:&lt;/p>
&lt;pre tabindex="0">&lt;code>\setbeameroption{hide notes} % Only slides
%\setbeameroption{show only notes} % Only notes
%\setbeameroption{show notes on second screen=right} % Both
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>Generate the slides:&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>%\setbeameroption{hide notes} % Only slides
\setbeameroption{show only notes} % Only notes
%\setbeameroption{show notes on second screen=right} % Both
&lt;/code>&lt;/pre>&lt;p>Then present the slides in the projector whilst keeping the notes open in your
laptop.&lt;/p>
&lt;p>The author suggests to use &lt;a href="https://skim-app.sourceforge.io/">Skim.app&lt;/a> to sync
both documents. It&amp;rsquo;s a good idea, I had used it at the time when I wrote my
undergrad thesis.&lt;/p>
&lt;p>Overleaf is quite different today than from 8 years ago:&lt;/p>
&lt;ul>
&lt;li>There is a visual editor (ala &lt;a href="https://www.lyx.org/">LyX&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>)&lt;/li>
&lt;li>There&amp;rsquo;s first-class integration with Academia (Zotero, Mendeley)&lt;/li>
&lt;li>There&amp;rsquo;s an &lt;a href="https://www.overleaf.com/learn/how-to/Writefull_integration">AI-based language feedback
feature&lt;/a> (is this
surprising in 2025?)&lt;/li>
&lt;li>There&amp;rsquo;s first-class git integration / github sync&lt;/li>
&lt;/ul>
&lt;p>Very cool!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I used to love LyX. It used to be my favorite way to create slides /
presentations for university. I am happy to see it&amp;rsquo;s still under active
development.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Mindmaps in markdown</title><link>https://perrotta.dev/2025/01/mindmaps-in-markdown/</link><pubDate>Mon, 06 Jan 2025 00:28:20 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/mindmaps-in-markdown/</guid><description>&lt;p>&lt;a href="https://markmap.js.org/">Markmap&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Visualize your Markdown with mindmaps&lt;/p>
&lt;/blockquote>
&lt;p>They do provide a &lt;a href="https://markmap.js.org/repl">REPL&lt;/a>.&lt;/p>
&lt;p>A typical document may look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span># Food
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Fruit
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Apple
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Banana
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Orange
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">## Sweets
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### Cake
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### Pastel de Nata
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">### Chocolate
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Bitter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Crunchy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">-&lt;/span> Milk
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each heading level maps to a deeper mindmap node.
Headings at the same level and lists create edges from the parent heading.&lt;/p>
&lt;p>Besides the REPL, there&amp;rsquo;s a &lt;a href="https://marketplace.visualstudio.com/items?itemName=gera2ld.markmap-vscode">VSCode extension&lt;/a>.&lt;/p>
&lt;p>It&amp;rsquo;s possible to export the resulting mindmap to interactive HTML and to SVG.&lt;/p>
&lt;p>I originally discovered this tool via a &lt;a href="https://training.linuxfoundation.org/full-catalog/">Linux
Foundation&lt;/a> course.&lt;/p>
&lt;p>It is a good complement to &lt;a href="https://perrotta.dev/2024/10/mermaid-rich-diagrams-in-markdown/">Mermaid&lt;/a>.&lt;/p></description></item><item><title>Reply to: Mistakes engineers make in large established codebases</title><link>https://perrotta.dev/2025/01/reply-to-mistakes-engineers-make-in-large-established-codebases/</link><pubDate>Sun, 05 Jan 2025 03:15:47 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/reply-to-mistakes-engineers-make-in-large-established-codebases/</guid><description>&lt;p>&lt;a href="https://www.seangoedecke.com/large-established-codebases/">Sean Goedecke&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The cardinal mistake is inconsistency&lt;/p>
&lt;p>There&amp;rsquo;s one mistake I see more often than anything else, and it&amp;rsquo;s absolutely
deadly: ignoring the rest of the codebase and just implementing your feature
in the most sensible way. In other words, limiting your touch points with the
existing codebase in order to keep your nice clean code uncontaminated by
legacy junk. For engineers that have mainly worked on small codebases, this is
very hard to resist. But you must resist it! In fact, you must sink as deeply
into the legacy codebase as possible, in order to maintain consistency.&lt;/p>
&lt;p>Why is consistency so important in large codebases? Because it protects you
from nasty surprises, it slows down the codebase&amp;rsquo;s progression into a mess,
and it allows you to take advantage of future improvements.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Consistency is the most important thing. Let me quickly run through some other
concerns as well, though:&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Consistency, consistency, consistency&lt;/strong>. Hell yeah!&lt;/p>
&lt;p>Consistency isn&amp;rsquo;t only about &lt;a href="https://google.github.io/styleguide/">style
guides&lt;/a>. There&amp;rsquo;s no point in adopting
style guides if they aren&amp;rsquo;t
&lt;a href="https://abseil.io/resources/swe-book/html/ch03.html">enforced&lt;/a>.&lt;/p>
&lt;p>Consistency is about uniformity. Enforcing invariants. Keeping the codebase tidy
and organized. Whenever done right, even if only in disjoint subsets of the
codebase, it&amp;rsquo;s elegant. It&amp;rsquo;s beautiful. All hail to consistent codebases.&lt;/p>
&lt;p>But hey, no one said there&amp;rsquo;s only one way to achieve consistency&amp;hellip;&lt;/p>
&lt;figure>&lt;a href="https://xkcd.com/927/">&lt;img src="https://imgs.xkcd.com/comics/standards.png"
 alt="Fortunately, the charging one has been solved now that we&amp;#39;ve all standardized on mini-USB. Or is it micro-USB? Shit.">&lt;/a>&lt;figcaption>
 &lt;p>XKCD Courtesy of Randall Munroe&lt;/p>
 &lt;/figcaption>
&lt;/figure>
</description></item><item><title>pre-commit + vim integration</title><link>https://perrotta.dev/2025/01/pre-commit--vim-integration/</link><pubDate>Sun, 05 Jan 2025 01:46:06 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/pre-commit--vim-integration/</guid><description>&lt;p>Is it possible to transparently invoke &lt;code>pre-commit&lt;/code> in the background upon saving in &lt;code>vim&lt;/code> (&lt;code>:w&lt;/code>)?&lt;/p>
&lt;p>Initially I found this &lt;a href="https://stackoverflow.com/questions/70713450/pre-commit-results-in-vim">Stack
Overflow&lt;/a>
question, but it had no answer.&lt;/p>
&lt;p>Digging a bit deeper I realized that I could do it with an &lt;code>autocmd&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">autocmd&lt;/span> &lt;span style="color:#a6e22e">BufWritePost&lt;/span> * &lt;span style="color:#66d9ef">execute&lt;/span> &lt;span style="color:#e6db74">&amp;#39;! if [ -e $(git root)/.pre-commit-config.yaml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ]; then pre-commit run; fi&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>That trashes the screen upon completion. This can be resolved by invoking
&lt;code>:redraw!&lt;/code> afterwards:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">autocmd&lt;/span> &lt;span style="color:#a6e22e">BufWritePost&lt;/span> * &lt;span style="color:#66d9ef">execute&lt;/span> &lt;span style="color:#e6db74">&amp;#39;! if [ -e $(git root)/.pre-commit-config.yaml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ]; then pre-commit run; fi&amp;#39;&lt;/span> | &lt;span style="color:#a6e22e">redraw&lt;/span>!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can be less intrusive by prepending &lt;code>silent!&lt;/code> so that, even if the command
fails, it doesn&amp;rsquo;t get in the way:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">autocmd&lt;/span> &lt;span style="color:#a6e22e">BufWritePost&lt;/span> * &lt;span style="color:#a6e22e">silent&lt;/span>! &lt;span style="color:#66d9ef">execute&lt;/span> &lt;span style="color:#e6db74">&amp;#39;! if [ -e $(git root)/.pre-commit-config.yaml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ]; then pre-commit run; fi&amp;#39;&lt;/span> | &lt;span style="color:#a6e22e">redraw&lt;/span>!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And last but not least, ideally &lt;code>pre-commit&lt;/code> should run only on the file
associated with the current buffer. Pass &lt;code>--files&lt;/code> to pre-commit with the &lt;code>%&lt;/code>
argument:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-vim" data-lang="vim">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">autocmd&lt;/span> &lt;span style="color:#a6e22e">BufWritePost&lt;/span> * &lt;span style="color:#a6e22e">silent&lt;/span>! &lt;span style="color:#66d9ef">execute&lt;/span> &lt;span style="color:#e6db74">&amp;#39;! if [ -e $(git root)/.pre-commit-config.yaml &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 ]; then pre-commit run --files %; fi&amp;#39;&lt;/span> | &lt;span style="color:#a6e22e">redraw&lt;/span>!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This approach works as intended.
There&amp;rsquo;s a brief period in which you can see &lt;code>pre-commit&lt;/code> running in the
background. It&amp;rsquo;s arguable whether that&amp;rsquo;s a feature or a bug.&lt;/p>
&lt;p>Ah, and &lt;code>git root&lt;/code> is simply an alias in my &lt;code>~/.gitconfig&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>root = rev-parse --show-toplevel
&lt;/code>&lt;/pre>&lt;p>Whenever there are pre-commit violations (e.g. &lt;code>end-of-file-fixer&lt;/code>) they are
applied inplace. There&amp;rsquo;s no need to run &lt;code>:e!&lt;/code>.&lt;/p>
&lt;p>This is bare, but I am happy.&lt;/p>
&lt;p>Perhaps the only missing piece is to extend it in such a way it&amp;rsquo;s only executed
in the repositories I opt into.&lt;/p>
&lt;p>If this turns out to be too intrusive, I am thinking to switch to using a vim
keymap e.g. &lt;code>&amp;lt;leader&amp;gt;p&lt;/code> instead of an &lt;code>autocmd&lt;/code>.&lt;/p></description></item><item><title>Reply to: My approach to running a link blog</title><link>https://perrotta.dev/2025/01/reply-to-my-approach-to-running-a-link-blog/</link><pubDate>Sun, 05 Jan 2025 00:16:09 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/reply-to-my-approach-to-running-a-link-blog/</guid><description>&lt;p>&lt;a href="https://simonwillison.net/2024/Dec/22/link-blog/">Simon Willison&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>I always include the names of the people who created the content I am
linking to, if I can figure that out. Credit is really important, and it&amp;rsquo;s
also useful for myself because I can later search for someone&amp;rsquo;s name and
find other interesting things they have created that I linked to in the
past. If I&amp;rsquo;ve linked to someone&amp;rsquo;s work three or more times I also try to
notice and upgrade them to a dedicated tag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I always include the names of the people who created the content I am
linking to, if I can figure that out. Credit is really important, and it&amp;rsquo;s
also useful for myself because I can later search for someone&amp;rsquo;s name and
find other interesting things they have created that I linked to in the
past. If I&amp;rsquo;ve linked to someone&amp;rsquo;s work three or more times I also try to
notice and upgrade them to a dedicated tag.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A slightly self-involved concern I have is that I like to prove that I&amp;rsquo;ve
read it. This is more for me than for anyone else: I don&amp;rsquo;t like to recommend
something if I&amp;rsquo;ve not read that thing myself, and sticking in a detail that
shows I read past the first paragraph helps keep me honest about that.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I try to add something extra. My goal with any link blog post is that if you
read both my post and the source material you&amp;rsquo;ll have an enhanced experience
over if you read just the source material itself.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>&lt;a href="https://daringfireball.net/linked/2025/01/02/willisons-approach-to-running-a-link-blog">John Gruber&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Every step of the way, I found myself nodding my head, thinking to myself, I
do that too! — right down to creating tags for people after I&amp;rsquo;ve mentioned
their work or simply credited their bylines a few times. (The difference is
that Willison seemingly isn&amp;rsquo;t a procrastinator, and I am, so my decades of
tagging aren&amp;rsquo;t yet exposed to anyone but me.)&lt;/p>
&lt;/blockquote>
&lt;p>Such a great philosophy to foster the &lt;a href="https://indieweb.org/">IndieWeb&lt;/a> in a
positive way.&lt;/p>
&lt;p>Personally I think that running a link blog is exhausting: there are just soooo
many links, and they are a never-ending spiral.&lt;/p>
&lt;p>On the other hand, choosing to blog instead of, say, &lt;em>tweet&lt;/em>, adds a certain
degree of friction in such a way that you tend to implicitly cherry-pick the
links that are more relevant and/or important to you, given the opportunity
cost.&lt;/p>
&lt;p>I like that.&lt;/p></description></item><item><title>iOS lockdown mode</title><link>https://perrotta.dev/2025/01/ios-lockdown-mode/</link><pubDate>Sat, 04 Jan 2025 23:58:11 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/ios-lockdown-mode/</guid><description>&lt;p>&lt;a href="https://www.dedoimedo.com/computers/iphone-lockdown-mode.html">dedoimedo&lt;/a> makes
me realize that the iOS lockdown mode is actually quite usable, even for us
normies:&lt;/p>
&lt;blockquote>
&lt;p>For a while now, I&amp;rsquo;ve been hearing about this tool. Mostly in regard to
high-profile zero-day, zero-click, hands-free, security vulnerabilities in
iPhones and subsequent hacking of said devices by nation-state actors. Sounds
blockbustery, which piqued my interest. I am usually rather disdainful of
mainstream media reporting of tech affairs, but that does not mean there isn&amp;rsquo;t
something genuinely cool behind flashy, scary headlines. And so I decided to
test the Lockdown Mode.&lt;/p>
&lt;/blockquote>
&lt;p>What are its effects?&lt;/p>
&lt;blockquote>
&lt;p>Specifically, most attachments are blocked in Messages, websites that use
JavaScript engines that run Just-in-Time (JIT) compilers or use remote fonts
will not render their pages correctly, various app invitations and calls are
blocked from people you haven&amp;rsquo;t approved beforehand, location information for
shared photos is excluded, Wi-Fi connectivity to insecure networks is limited,
and so on.&lt;/p>
&lt;/blockquote>
&lt;p>Aren&amp;rsquo;t these all sensible defaults anyway?&lt;/p>
&lt;blockquote>
&lt;p>Pretty much everything in the list above makes absolute sense. None of the
&amp;ldquo;restricted&amp;rdquo; features are actually important or desired. Think about it. Calls
from people you don&amp;rsquo;t know? Check! Photo location blocking? Check! Web pages
with pointless remote fonts? Double check! Sounds like an Internet reset,
going back to 2010, when the computing world was nicer, saner, cleaner!&lt;/p>
&lt;/blockquote>
&lt;p>Enabling it is trivial, the prompts are perhaps a bit scarier than necessary
though:&lt;/p>
&lt;blockquote>
&lt;p>You get a whole bunch of explanations and warnings. Confirm. Reboot. The
iPhone will load without any visible signs that it&amp;rsquo;s actually running in a
&amp;ldquo;restricted&amp;rdquo; mode. Now. Launch Safari, and you will see a notification
displayed below the address bar. This is the first indication that the phone
is using the Lockdown Mode. But that does not mean you will be affected. Far
from it. I spent quite some time browsing, and I didn&amp;rsquo;t notice any website not
working correctly. Then again, the sites I go to are normal, sane sites, with
no sensory overload.&lt;/p>
&lt;/blockquote>
&lt;p>Initially Logseq and Obsidian would not properly work: they didn&amp;rsquo;t seem to be
able to read files from iCloud. I had to explicitly whitelist them in lockdown
mode settings. All other apps worked just fine.&lt;/p>
&lt;p>When web browsing with Safari I didn&amp;rsquo;t find any issue (so far) in the websites I
normally surf. The only noticeable UI difference is that, as web fonts are
blocked, the visual identity of websites are gone&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This is not necessarily a negative point: blocking web fonts has the positive
side effect of loading less remote data / reducing bandwidth.&lt;/p>
&lt;p>Furthermore, by making websites look more generic, perhaps that doubles-down as
a feature to make them less appealing / interesting, akin to using a
software filter to make your phone display everything in black-and-white; we&amp;rsquo;re
all spending a lot of screen time after all.&lt;/p>
&lt;p>I am curious how long it will take until I run into some limitation and/or
strong annoyance from using lockdown mode. If that doesn&amp;rsquo;t ever happen though,
perhaps it&amp;rsquo;s a good idea to stick to it.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Ironically, not mine, as I &lt;a href="https://perrotta.dev/2022/02/website-fonts-just-use-the-system-font-stack/">don&amp;rsquo;t&lt;/a> use any custom
fonts in this blog.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Unsplash: Wallpapers</title><link>https://perrotta.dev/2025/01/unsplash-wallpapers/</link><pubDate>Fri, 03 Jan 2025 20:06:08 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/unsplash-wallpapers/</guid><description>&lt;p>It&amp;rsquo;s a &lt;a href="https://getfullyear.com/">new year&lt;/a>. Time for a new wallpaper!&lt;/p>
&lt;p>I like &lt;a href="https://unsplash.com/t/wallpapers">Unsplash&lt;/a>.&lt;/p>
&lt;p>They also have an &lt;a href="https://unsplash.com/apps/ios">iOS app&lt;/a>.&lt;/p>
&lt;p>I used to keep my current wallpaper in cloud storage, symlinked from
&lt;code>~/.wallpaper&lt;/code> so to integrate well with my
&lt;a href="https://github.com/thiagowfx/.dotfiles">.dotfiles&lt;/a>, however I no longer do so.&lt;/p></description></item><item><title>Cookiecutter: document variables</title><link>https://perrotta.dev/2025/01/cookiecutter-document-variables/</link><pubDate>Fri, 03 Jan 2025 19:29:00 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/cookiecutter-document-variables/</guid><description>&lt;p>Follow-up of &lt;a href="https://perrotta.dev/2024/12/cookiecutter/">the previous post&lt;/a>.&lt;/p>
&lt;p>Ever since &lt;a href="https://github.com/cookiecutter/cookiecutter/pull/1881">July 2023&lt;/a>
it&amp;rsquo;s possible to document
&lt;a href="https://github.com/cookiecutter/cookiecutter">cookiecutter&lt;/a> parameters / variables.&lt;/p>
&lt;p>Add a &lt;code>__prompts__&lt;/code> key. Example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;#34;app_name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;app-name&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;#34;patch_disable_auto_sync&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#f92672">&amp;#34;__prompts__&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;#34;app_name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;The ArgoCD application name&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#f92672">&amp;#34;patch_disable_auto_sync&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Disable auto sync for the ArgoCD application?&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>git: update master to main</title><link>https://perrotta.dev/2025/01/git-update-master-to-main/</link><pubDate>Fri, 03 Jan 2025 12:16:44 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/git-update-master-to-main/</guid><description>&lt;p>In your Forge (most likely Github or Gitlab), update the default branch from
&lt;code>master&lt;/code> to &lt;code>main&lt;/code>. Normally this has the effect of renaming &lt;code>master&lt;/code> to &lt;code>main&lt;/code>
automatically.&lt;/p>
&lt;p>In your clients, run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>git branch -m master main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git fetch origin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git branch -u origin/main main
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git remote set-head origin -a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Done!&lt;/p>
&lt;p>How to refer to the default branch in scripts and aliases?&lt;/p>
&lt;p>Set the following &lt;code>git&lt;/code> alias:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cat ~/.gitconfig
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>alias&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	default &lt;span style="color:#f92672">=&lt;/span> !git symbolic-ref refs/remotes/origin/HEAD | sed &lt;span style="color:#e6db74">&amp;#39;s@^refs/remotes/origin/@@&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It outputs &lt;code>master&lt;/code> or &lt;code>main&lt;/code> – there&amp;rsquo;s no &lt;code>origin/&lt;/code> prefix.&lt;/p>
&lt;p>The &lt;code>default&lt;/code> alias only works if you have a &lt;code>origin&lt;/code> remote set up.
It will fail if the repository is fully local:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% cdtmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/tmp/thiago.perrotta-2025-01-03-pk0GPp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% git init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Initialized empty Git repository in /private/tmp/thiago.perrotta-2025-01-03-pk0GPp/.git/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% git default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>fatal: ref refs/remotes/origin/HEAD is not a symbolic ref
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>100 days to offload</title><link>https://perrotta.dev/2025/01/100-days-to-offload/</link><pubDate>Fri, 03 Jan 2025 00:25:28 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/100-days-to-offload/</guid><description>&lt;p>&lt;a href="https://simonwillison.net/2025/Jan/2/ending-a-year-long-posting-streak/">Post
streaks&lt;/a>
are a good way to keep oneself motivated to continuously blog for a certain
period of time.&lt;/p>
&lt;p>Many folks I follow in my RSS&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> reader participate in &lt;a href="https://100daystooffload.com/">100 days to
offload&lt;/a> every once in a while.&lt;/p>
&lt;p>I figured it&amp;rsquo;s finally time for me to follow suit.&lt;/p>
&lt;blockquote>
&lt;p>The whole point of #100DaysToOffload is to challenge you to publish 100 posts
on your personal blog in a year.&lt;/p>
&lt;p>Posts don&amp;rsquo;t need to be long-form, deep, meaningful, or even that well written.
If there are spelling and grammar mistakes, or even if there&amp;rsquo;s no real point
to the post, so what? What&amp;rsquo;s important is that you&amp;rsquo;re writing about the things
you want to write about.&lt;/p>
&lt;p>Your posts could be how-to guides, or links to another post you have found
interesting. They could include your own thoughts about that post, or a
response to it. It could be a simple update about what you have done that day.
Tell us about your dog, your cat, your fish tank, or whatever hobbies you
have. Someone will find it interesting.&lt;/p>
&lt;p>&lt;strong>Just. Write.&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;p>Challenge accepted.&lt;/p>
&lt;p>&lt;code>#100DaysToOffload&lt;/code>&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>RSS is still &lt;a href="https://schwarztech.net/articles/rss-and-email-might-save-some-of-us-from-social-media-rot">long
alive&lt;/a>!&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Corpspeak Bingo</title><link>https://perrotta.dev/2025/01/corpspeak-bingo/</link><pubDate>Thu, 02 Jan 2025 18:50:43 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/corpspeak-bingo/</guid><description>&lt;ul>
&lt;li>
&lt;p>This issue is of the utmost importance to us.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We take this subject matter very seriously.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s important to do this for the safety and security of our community.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Thank you for bringing this to our attention. We&amp;rsquo;ll resolve it as soon as possible!&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Before you delete your account, could you please tell us what we could have done better?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>I appreciate your concern. Our team is doing everything it can to improve the experience of our users.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We are committed to protecting our user&amp;rsquo;s privacy and data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This is the latest announcement of our coolest feature ever. We are very sure you&amp;rsquo;ll love it! Why the forum post is locked? Oh, that is just a glitch, it likely wasn&amp;rsquo;t intended.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>We take every user feedback into account. If you have any questions that are not addressed in our FAQ, reach out to our customer happiness-joy-excitement support team.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>That will be fixed in a future release. We are working on it. If we have an estimate for the release date? Let&amp;rsquo;s not get ahead of ourselves.&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Fiction</title><link>https://perrotta.dev/2025/01/fiction/</link><pubDate>Thu, 02 Jan 2025 18:35:22 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/fiction/</guid><description>&lt;p>&lt;strong>Immersion&lt;/strong>.&lt;/p>
&lt;p>You know you are reading a great book&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> when you feel immersed, constantly pausing
and deliberating, like having a daydream about its characters and overarching
plot.&lt;/p>
&lt;p>You know you are reading a great book when you constantly stop and identify
yourself with one of the characters, or perhaps with all of them,
understanding their unique personality traits, intimate thoughts, deep wishes
and ongoing struggles.&lt;/p>
&lt;p>You know you are reading a great book when you momentarily disappear – even
if only for a tiny bit – underneath your own thoughts and experiences.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Replace
&lt;em>boo&lt;a href="https://www.goodreads.com/book/show/58784475-tomorrow-and-tomorrow-and-tomorrow">k&lt;/a>&lt;/em>
with &lt;em>videogam&lt;a href="https://store.steampowered.com/app/383870/Firewatch/">e&lt;/a>&lt;/em>:
the impact is comparable, if not even more.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git: configure identities for work</title><link>https://perrotta.dev/2025/01/git-configure-identities-for-work/</link><pubDate>Wed, 01 Jan 2025 17:22:05 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/git-configure-identities-for-work/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given two sets of git configurations, one for personal
projects and one for work, how can you effectively separate them?&lt;/p>
&lt;h2 id="workflow">Workflow&lt;/h2>
&lt;p>I like the following workflow.&lt;/p>
&lt;p>First, create your usual &lt;code>~/.gitconfig&lt;/code>. It will be used for your personal
project:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-gitconfig" data-lang="gitconfig">[user]
 name = Thiago Perrotta
 email = {personal-email}

[...]

# Import corp configs if any.
[include]
 path = .gitconfig_corp
&lt;/code>&lt;/pre>&lt;p>This config should live in your personal laptop and in your work laptop.&lt;/p>
&lt;p>Normally I include it via my &lt;a href="https://github.com/thiagowfx/.dotfiles">.dotfiles&lt;/a>
(git repo) i.e. with a simple &lt;code>stow git&lt;/code> away.&lt;/p>
&lt;p>And we are done with our personal laptop.&lt;/p>
&lt;p>Now, for the work laptop, create &lt;code>~/.gitconfig_corp&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-gitconfig" data-lang="gitconfig">[includeIf &amp;#34;gitdir:~/Orgname/**&amp;#34;]
 path = .gitconfig_orgname

[includeIf &amp;#34;hasconfig:remote.*.url:git@github.com:orgname/**&amp;#34;]
 path = .gitconfig_orgname

# vim: ft=gitconfig
&lt;/code>&lt;/pre>&lt;p>The corp config is conditionally included / used in the following scenarios:&lt;/p>
&lt;ol>
&lt;li>whenever I am working on a git repository that lives within &lt;code>~/Orgname&lt;/code>&lt;/li>
&lt;li>whenever the git remote of the repository I am working on is a git repository
under the organization &lt;code>orgname&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>This config is usually included via my corp dotfiles (named &lt;code>.dotfiles_corp&lt;/code> in
&lt;code>git&lt;/code>), which is a separate git repository. There&amp;rsquo;s no fiddling with git
submodules: both git repositories are cloned and managed independently.&lt;/p>
&lt;p>And now, last but not least, is the actual git config for work:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-gitconfig" data-lang="gitconfig">% cat ~/.gitconfig_orgname
[user]
 name = Thiago Perrotta
 email = {work-email}

# vim: ft=gitconfig
&lt;/code>&lt;/pre>&lt;p>Inspired by &lt;a href="https://www.benji.dog/articles/git-config/">benji.dog&lt;/a>.&lt;/p></description></item><item><title>Scan for markdown broken links in your blog</title><link>https://perrotta.dev/2025/01/scan-for-markdown-broken-links-in-your-blog/</link><pubDate>Wed, 01 Jan 2025 16:35:00 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/01/scan-for-markdown-broken-links-in-your-blog/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Link_rot">Link rot&lt;/a> is a real problem in the web,
even though &lt;a href="https://www.w3.org/Provider/Style/URI">Cool URIs don&amp;rsquo;t (supposedly)
change&lt;/a>.&lt;/p>
&lt;p>I figured I could try to mitigate it from my site from time to time with some CI
integration.&lt;/p>
&lt;p>Then I found
&lt;a href="https://github.com/tcort/markdown-link-check">&lt;code>markdown-link-check&lt;/code>&lt;/a>.&lt;/p>
&lt;p>The best way to illustrate its usage is with an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% pre-commit try-repo https://github.com/tcort/markdown-link-check --all-files
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FILE: content/posts/2024-02-04-new-domain.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✓&lt;span style="color:#f92672">]&lt;/span> https://www.perrotta.dev/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✖&lt;span style="color:#f92672">]&lt;/span> https://blog.perrotta.dev/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✓&lt;span style="color:#f92672">]&lt;/span> https://perrotta.dev/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✓&lt;span style="color:#f92672">]&lt;/span> https://thiagowfx.github.io/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">4&lt;/span> links checked.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ERROR: &lt;span style="color:#ae81ff">1&lt;/span> dead links found!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✖&lt;span style="color:#f92672">]&lt;/span> https://blog.perrotta.dev/ → Status: &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>FILE: content/posts/2024-12-30-cookiecutter.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✓&lt;span style="color:#f92672">]&lt;/span> https://github.com/cookiecutter/cookiecutter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✖&lt;span style="color:#f92672">]&lt;/span> https://crates.io/crates/kickstart
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✓&lt;span style="color:#f92672">]&lt;/span> https://github.com/Keats/kickstart?tab&lt;span style="color:#f92672">=&lt;/span>readme-ov-file#050-2024-12-13
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ae81ff">3&lt;/span> links checked.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ERROR: &lt;span style="color:#ae81ff">1&lt;/span> dead links found!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">[&lt;/span>✖&lt;span style="color:#f92672">]&lt;/span> https://crates.io/crates/kickstart → Status: &lt;span style="color:#ae81ff">404&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>...&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It compiles an exhaustive list of all broken links in all markdown pages in my
git repository&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It&amp;rsquo;s not bullet-proof. For example, sites behind Cloudflare are reported as
broken, even though they may not be
(&lt;a href="https://www.secretflying.com/posts/category/cities-countries/germany/">example&lt;/a>).
Sites that blocks bots / crawlers may also be flagged as false positives.&lt;/p>
&lt;p>I added it to the list of pre-commit hooks for this site.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I ceased to use &lt;code>blog.perrotta.dev&lt;/code> in favour of &lt;code>perrotta.dev&lt;/code> in Q4
2024.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Sourcegraph</title><link>https://perrotta.dev/2024/12/sourcegraph/</link><pubDate>Tue, 31 Dec 2024 22:45:20 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/sourcegraph/</guid><description>&lt;p>&lt;a href="https://sourcegraph.com/">Sourcegraph&lt;/a> is a global search engine.
Think code.google.com back in the days, but more developer-friendly.
In fact, it&amp;rsquo;s quite comparable to &lt;a href="https://cs.chromium.org/">Google Code Search&lt;/a>.&lt;/p>
&lt;p>I like to assign it as a search engine in Chrome:&lt;/p>
&lt;ul>
&lt;li>Navigate to &lt;a href="chrome://settings/search">chrome://settings/search&lt;/a>&lt;/li>
&lt;li>Click &amp;lsquo;Manage search engines and site search&amp;rsquo;&lt;/li>
&lt;li>In the &amp;lsquo;Site search&amp;rsquo; section, click &amp;lsquo;Add&amp;rsquo;&lt;/li>
&lt;li>Populate it:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>Name: Sourcegraph
Shortcut: ss
URL: https://sourcegraph.com/search?q=context:global+%s
&lt;/code>&lt;/pre>&lt;p>Once it is saved, you can type in &lt;code>ss {query}&lt;/code> in the URL bar to search using
Sourcegraph.&lt;/p>
&lt;p>For example: &lt;code>ss f:.pre-commit.config\.yaml$ &amp;quot;language: golang&amp;quot;&lt;/code>.&lt;/p></description></item><item><title>macOS app shortcuts</title><link>https://perrotta.dev/2024/12/macos-app-shortcuts/</link><pubDate>Tue, 31 Dec 2024 22:26:00 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/macos-app-shortcuts/</guid><description>&lt;p>Let&amp;rsquo;s say you want to assign a keyboard shortcut within a given app to invoke a
menu item.&lt;/p>
&lt;p>To illustrate: Assume that you can to map &lt;code>Cmd + Shift + X&lt;/code> within Logseq.app to
&amp;ldquo;paste and match style&amp;rdquo;.&lt;/p>
&lt;p>&lt;a href="https://support.apple.com/en-ca/guide/mac-help/mchlp2271/mac">Apple Docs&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>On your Mac, choose Apple menu &amp;gt; System Settings, click Keyboard in the
sidebar (you may need to scroll down), then click Keyboard Shortcuts.&lt;/p>
&lt;p>Select App Shortcuts on the left, click the Add button, click the Application
pop-up menu, then choose a specific app or All Applications.&lt;/p>
&lt;/blockquote>
&lt;p>Choose &lt;code>Logseq.App&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>In the &amp;ldquo;Menu title&amp;rdquo; field, type the menu command for which you want to create
a shortcut, exactly as the command appears in the app, including the &amp;gt;
character (type -&amp;gt;), ellipses (type three periods without spaces), or other
punctuation.&lt;/p>
&lt;p>For example, to set a shortcut for the default ligature command in TextEdit
(Format &amp;gt; Font &amp;gt; Ligatures &amp;gt; Use Default), type Format-&amp;gt;Font-&amp;gt;Ligatures-&amp;gt;Use
Default in the &amp;ldquo;Menu title&amp;rdquo; field. To set a shortcut for the Export as PDF
command (File &amp;gt; Export as PDF…), type File-&amp;gt;Export as PDF… in the field.&lt;/p>
&lt;/blockquote>
&lt;p>Type in &lt;code>Edit-&amp;gt;Paste and Match Style&lt;/code>, case sensitive, no spaces around the &lt;code>-&amp;gt;&lt;/code>.&lt;/p>
&lt;blockquote>
&lt;p>Click in the &amp;ldquo;Keyboard shortcut&amp;rdquo; field, press the key combination that you
want to use as the keyboard shortcut, then click Done.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: This method doesn&amp;rsquo;t work if the keyboard shortcut is already mapped within the
app.&lt;/p>
&lt;p>Credits to &lt;a href="https://til.codeinthehole.com/posts/how-to-bind-custom-keyboard-shortcuts-to-nested-macos-menu-options/">David Winterbottom&lt;/a> for the idea.&lt;/p></description></item><item><title>git reset --keep</title><link>https://perrotta.dev/2024/12/git-reset--keep/</link><pubDate>Tue, 31 Dec 2024 18:54:59 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/git-reset--keep/</guid><description>&lt;p>In all these years of &lt;code>git&lt;/code>, I&amp;rsquo;ve only heard about it now: via &lt;a href="https://adamj.eu/tech/2024/09/02/git-avoid-reset-hard-use-keep/">Adam
Johnson&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Git: avoid reset &amp;ndash;hard, use reset &amp;ndash;keep instead&lt;/p>
&lt;p>But whilst researching for my book on Git, I discovered git reset &amp;ndash;keep in
the documentation. The description there is brief and oblique, but after
figuring it out, I realized that &amp;ndash;keep is way more preferable to &amp;ndash;hard!&lt;/p>
&lt;/blockquote>
&lt;p>I have a &lt;code>git uncommit&lt;/code> alias in my &lt;code>~/.gitconfig&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>uncommit = !git reset --soft HEAD^ &amp;amp;&amp;amp; git restore --staged .
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;which is akin to &amp;ldquo;undo&amp;rdquo;.&lt;/p>
&lt;p>And there&amp;rsquo;s the nuclear &lt;code>git reset --hard&lt;/code> + &lt;code>git clean -x -f -d&lt;/code> to &amp;ldquo;reset
everything&amp;rdquo;.&lt;/p>
&lt;p>&lt;code>git reset --keep&lt;/code> seems like a safer &lt;code>git reset --hard&lt;/code>. Adam did a good job
describing how it works, so go read it directly there.&lt;/p>
&lt;p>This has the same spirit as &lt;a href="https://perrotta.dev/2024/12/git-push--force-with-style/">&lt;code>git push --force-with-lease&lt;/code>&lt;/a>.&lt;/p></description></item><item><title>DevOps career progression</title><link>https://perrotta.dev/2024/12/devops-career-progression/</link><pubDate>Tue, 31 Dec 2024 16:05:23 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/devops-career-progression/</guid><description>&lt;p>A small collection of DevOps / SRE career resources.&lt;/p>
&lt;h2 id="titles">Titles&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://books.37signals.com/3/the-37signals-employee-handbook/20/titles-for-ops">Title for Ops&lt;/a> by Basecamp / 37signals&lt;/li>
&lt;li>&lt;a href="https://cloud.google.com/architecture/devops">DevOps capabilities&lt;/a> by Google
Cloud&lt;/li>
&lt;/ul>
&lt;h2 id="roadmaps">Roadmaps&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://roadmap.sh/devops">DevOps roadmap&lt;/a> (interactive)&lt;/li>
&lt;li>&lt;a href="https://trilha.info/">Trilha DevOps&lt;/a> (same, in Portuguese)&lt;/li>
&lt;/ul>
&lt;h1 id="resources">Resources&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://dora.dev/">DORA&lt;/a> by Google&lt;/li>
&lt;/ul>
&lt;h1 id="books">Books&lt;/h1>
&lt;ul>
&lt;li>&lt;a href="https://sre.google/books/">SRE Books&lt;/a> by Google&lt;/li>
&lt;/ul>
&lt;h2 id="employee-handbooks">Employee handbooks&lt;/h2>
&lt;p>While we&amp;rsquo;re here, some handy employee handbooks:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://books.37signals.com/3/the-37signals-employee-handbook">37signals / Basecamp&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.map.cv/blog/redbook">Meta / Facebook&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Independence</title><link>https://perrotta.dev/2024/12/independence/</link><pubDate>Tue, 31 Dec 2024 15:26:46 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/independence/</guid><description>&lt;p>&lt;a href="https://sive.rs/htl01">Here&amp;rsquo;s how to live: Be independent&lt;/a> by Derek Sivers.&lt;/p>
&lt;blockquote>
&lt;p>All misery comes from dependency. If you weren&amp;rsquo;t dependent on income, people,
or technology, you would be truly free. The only way to be deeply happy is to
break all dependencies.&lt;/p>
&lt;/blockquote>
&lt;p>Here&amp;rsquo;s to a 2025 with more &lt;a href="https://sive.rs/ti">Tech Independence&lt;/a>.&lt;/p></description></item><item><title>Reply to: CoPilot having a normal one</title><link>https://perrotta.dev/2024/12/reply-to-copilot-having-a-normal-one/</link><pubDate>Mon, 30 Dec 2024 17:49:59 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/reply-to-copilot-having-a-normal-one/</guid><description>&lt;p>(&lt;a href="https://davidkrider.com/copilot-having-a-normal-one/">via David Krider&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>That&amp;rsquo;s the thing I find about CoPilot and ChatGPT so far: They have quick
answers and suggestions for every line as I&amp;rsquo;m typing, and half of everything
that looks right at first glance turns out to be wrong. I actually started to
argue with CoPilot after fruitlessly trying to use it to track down a bug for
a half hour. What I am doing with my life?&lt;/p>
&lt;/blockquote>
&lt;p>Welcome to the club :D&lt;/p>
&lt;p>Silencing CoPilot sometimes helps. Update &lt;code>vscode/settings.json&lt;/code> (&lt;code>Cmd + ,&lt;/code> on
macOS) according to your needs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;github.copilot.editor.enableAutoCompletions&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#34;github.copilot.enable&amp;#34;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">:&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;*&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;plaintext&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;markdown&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The common wisdom of the crowds so far is to treat LLMs like &amp;ldquo;eager interns&amp;rdquo;,
and/or &amp;ldquo;helpful boilerplate / scaffolding tools&amp;rdquo;. Always double-check.&lt;/p></description></item><item><title>Trains in Europe</title><link>https://perrotta.dev/2024/12/trains-in-europe/</link><pubDate>Mon, 30 Dec 2024 02:25:06 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/trains-in-europe/</guid><description>&lt;p>A (small) index on how to travel by train in Europe.&lt;/p>
&lt;h2 id="search-">Search 🔎&lt;/h2>
&lt;p>How to search for train routes?&lt;/p>
&lt;h3 id="country--provider-agnostic">Country &amp;amp; Provider agnostic&lt;/h3>
&lt;ul>
&lt;li>&lt;a href="https://www.thetrainline.com/">Trainline&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.omio.com/">Omio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.rome2rio.com/">Rome2Rio&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.fahrplan.guru/">Fahrplan Guru&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://int.bahn.de/">Deutsche Bahn (DB) International search&lt;/a> (YMMV)&lt;/li>
&lt;li>&lt;a href="https://www.raileurope.com/">Rail Europe&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>These providers also include bus routes (e.g. via &lt;a href="https://www.flixbus.com/">Flixbus&lt;/a>).&lt;/p>
&lt;p>Some of them also include ridesharing (e.g. via &lt;a href="https://www.blablacar.com/">BlaBlaCar&lt;/a>).&lt;/p>
&lt;p>There&amp;rsquo;s no point in searching in all of them: pick one or two and call it a day.&lt;/p>
&lt;p>&lt;a href="https://flights.google.com/">Google Flights&lt;/a> occasionally displays train routes but it&amp;rsquo;s imperfect, as it&amp;rsquo;s focused on flights.&lt;/p>
&lt;h3 id="country-specific">Country-specific&lt;/h3>
&lt;p>This list is intentionally non-exhaustive.&lt;/p>
&lt;!-- keep-sorted start -->
&lt;ul>
&lt;li>&lt;a href="https://int.bahn.de/en/">Deutsche Bahn (DB)&lt;/a> for Germany 🇩🇪&lt;/li>
&lt;li>&lt;a href="https://www.ns.nl/en">NS&lt;/a> for the Netherlands 🇳🇱&lt;/li>
&lt;li>&lt;a href="https://www.sbb.ch/en">SBB&lt;/a> for Switzerland 🇨🇭&lt;/li>
&lt;li>&lt;a href="https://www.sncf-connect.com/en-en/">SNCF&lt;/a> for France 🇫🇷&lt;/li>
&lt;li>&lt;a href="https://www.oebb.at/en/">ÖBB&lt;/a> for Austria 🇦🇹&lt;/li>
&lt;li>&lt;a href="https://www.cd.cz/en/">ČD.cz&lt;/a> for Czech Republic 🇨🇿&lt;/li>
&lt;/ul>
&lt;!-- keep-sorted end -->
&lt;p>Sometimes a given train route is cheaper in a different provider.
For example, the &lt;em>München – Praha&lt;/em> route is generally cheaper on ČD than on DB.&lt;/p>
&lt;h2 id="savings-opportunities">Savings opportunities&lt;/h2>
&lt;p>In Germany 🇩🇪, consider the &lt;a href="https://int.bahn.de/en/offers/regional/deutschland-ticket">Deutschland Ticket&lt;/a> (DL-Ticket).
A single monthly ticket allows you to travel by train throughout the entire country, so long as you don&amp;rsquo;t use express (ICE / EC) trains (i.e. only regional trains).
It also allows you to use unlimited local transit (e.g. U-Bahn = subway / metro, S-Bahn = surface trains, Trams = Straßenbahnen = Street Cars, Buses) a.k.a. ÖPNV.&lt;/p>
&lt;p>In Europe, &lt;a href="https://www.interrail.eu/en">Interrail&lt;/a> / &lt;a href="https://www.eurail.com/en">Eurail&lt;/a> provides passes for multi-day journeys at a discount.
There are several kinds of passes, some of them for travel within a single country, others for multiple countries. &lt;a href="https://www.thetrainline.com/passes?source=hweb&amp;amp;countryOfResidence=DE&amp;amp;countryToVisit=interrail-one-country-pass-italy">Trainline&lt;/a> also sells them.&lt;/p>
&lt;h2 id="timetables-and-live-maps">Timetables and Live Maps&lt;/h2>
&lt;p>Germany 🇩🇪:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://s-bahn-muenchen-live.de/">S-Bahn München Live&lt;/a>: only for S-Bahns in
Munich&lt;/li>
&lt;li>&lt;a href="https://reiseauskunft.bahn.de/bin/bhftafel.exe/en?ld=96252&amp;amp;country=DEU&amp;amp;rt=1&amp;amp;newrequest=yes&amp;amp;&amp;amp;country=GBR">Deutsche Bahn (DB)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://bahnapp.com/">&lt;strong>Bahn App&lt;/strong>&lt;/a>: minimalist, with a superb design, better (easier to use and more reliable) than DB&lt;/li>
&lt;/ul>
&lt;h2 id="in-depth-resources">In-depth resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.seat61.com/index.html">The Man in Seat61&lt;/a>
&lt;ul>
&lt;li>&lt;a href="https://www.seat61.com/international-trains/trains-from-Munich.htm">The Man in Seat61: trains from Munich&lt;/a>&lt;/li>
&lt;li>Night / sleeper trains: &lt;a href="https://www.seat61.com/trains-and-routes/nightjet.htm">A guide to travel by Nightjet&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Shipping with Deutsche Bahn (DB) in Germany: &lt;a href="https://www.gepaeckservice-bahn.de/buchung.xhtml">Gepäckservice für Reisegepäck&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&amp;ldquo;Where can you go by train in 8h&amp;rdquo;? &lt;a href="https://www.chronotrains.com/">ChronoTrains&lt;/a> could convince you to ride a train instead of flying:&lt;/p>
&lt;blockquote>
&lt;p>This map shows you how far you can travel from each station in Europe in less than 8 hours.&lt;/p>
&lt;/blockquote></description></item><item><title>TIL: Today I Learned</title><link>https://perrotta.dev/2024/12/til-today-i-learned/</link><pubDate>Mon, 30 Dec 2024 01:13:57 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/til-today-i-learned/</guid><description>&lt;p>I am a big fan of &amp;ldquo;TIL&amp;rdquo; (Today I Learned) blogs.
So much that my own blog is kinda becoming one.&lt;/p>
&lt;p>A few people that inspired me, in order, at the time of this publication:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://til.simonwillison.net/">Simon Willison&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://jvns.ca/til/">Julia Evans&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://til.codeinthehole.com/posts/">David Winterbottom&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://browniebroke.com/">Bruno Alla&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/jbranchaud/til/tree/master">Josh Branchaud&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>If you are a software developer, consider starting a TIL blog as well.&lt;/p>
&lt;p>(And message me with the URL to your RSS feed!)&lt;/p></description></item><item><title>Cookiecutter</title><link>https://perrotta.dev/2024/12/cookiecutter/</link><pubDate>Mon, 30 Dec 2024 00:45:20 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/cookiecutter/</guid><description>&lt;p>Recently I found out about &lt;a href="https://github.com/cookiecutter/cookiecutter">&lt;code>cookiecutter&lt;/code>&lt;/a>.&lt;/p>
&lt;p>It&amp;rsquo;s basically a &lt;strong>scaffolding (code generation) tool&lt;/strong>.&lt;/p>
&lt;p>Previously I was using &lt;a href="https://crates.io/crates/kickstart">&lt;code>kickstart&lt;/code>&lt;/a>.
I got annoyed that &lt;code>kickstart&lt;/code> made &lt;a href="https://github.com/Keats/kickstart?tab=readme-ov-file#050-2024-12-13">a new release&lt;/a> that was backwards-incompatible:&lt;/p>
&lt;blockquote>
&lt;p>Force output-dir to be selected in the CLI to avoid surprises&lt;/p>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s how I found out about &lt;code>cookiecutter&lt;/code>.&lt;/p>
&lt;p>It turns out it&amp;rsquo;s much more established and quite popular in the Python ecosystem.&lt;/p>
&lt;p>Example usage:&lt;/p>
&lt;pre tabindex="0">&lt;code>% tree
.
├── Makefile
├── README.md
└── cookiecutter
 ├── base
 │ ├── cookiecutter.json
 │ ├── hooks
 │ │ └── post_gen_project.py
 │ └── {{ cookiecutter.app_name }}
 │ ├── kustomization.yaml
 │ └── {{ cookiecutter.app_name }}.yaml
&lt;/code>&lt;/pre>&lt;p>The &lt;code>Makefile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-makefile" data-lang="makefile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># The directory wherein the Makefile resides.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>ROOT_DIR &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">$(&lt;/span>patsubst %/,%,&lt;span style="color:#66d9ef">$(&lt;/span>dir &lt;span style="color:#66d9ef">$(&lt;/span>realpath &lt;span style="color:#66d9ef">$(&lt;/span>lastword &lt;span style="color:#66d9ef">$(&lt;/span>MAKEFILE_LIST&lt;span style="color:#66d9ef">)))))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GIT_DIR &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#66d9ef">$(&lt;/span>shell git rev-parse --show-toplevel&lt;span style="color:#66d9ef">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">base&lt;/span>&lt;span style="color:#f92672">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> @&lt;span style="color:#f92672">(&lt;/span>cd &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>GIT_DIR&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> cookiecutter &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>ROOT_DIR&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">/cookiecutter/base&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">.PHONY&lt;/span>&lt;span style="color:#f92672">:&lt;/span> base
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>Makefile&lt;/code> is just for ergonomics. Invocation is like: &lt;code>make base&lt;/code>.
Use &lt;code>-C&lt;/code> when running it from another directory.&lt;/p>
&lt;p>The secret sauce, &lt;code>cookiecutter.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;app_name&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;app-name&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;version&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;~1.0.0&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;#34;namespace&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;argocd&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;monitoring&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;tools&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This file defines 3 parameters. They are all strings.
The first two have defaults, the third has a pre-defined list for user choice.&lt;/p>
&lt;p>These parameters are instantiated / rendered in the templates whenever cookiecutter finds &lt;code>{{ cookiecutter.app_name }}&lt;/code> (and so on) in code, and also in filenames.&lt;/p>
&lt;p>For example, &lt;code>kustomization.yaml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># yaml-language-server: $schema=https://json.schemastore.org/kustomization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kustomize.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Kustomization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - {{ &lt;span style="color:#ae81ff">cookiecutter.app_name }}.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Would be replaced with (assuming the default choice):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># yaml-language-server: $schema=https://json.schemastore.org/kustomization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">kustomize.config.k8s.io/v1beta1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Kustomization&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">resources&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">app-name.yaml&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It&amp;rsquo;s possible to move the files to another directory with the use of a post-gen hook, e.g. &lt;code>hooks/post_gen_project.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> shutil
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> pathlib &lt;span style="color:#f92672">import&lt;/span> Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>app_name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;{{ cookiecutter.app_name }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>source_dir &lt;span style="color:#f92672">=&lt;/span> Path&lt;span style="color:#f92672">.&lt;/span>cwd()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>target_dir &lt;span style="color:#f92672">=&lt;/span> source_dir&lt;span style="color:#f92672">.&lt;/span>parent &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#e6db74">&amp;#34;apps&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&lt;/span> &lt;span style="color:#e6db74">&amp;#34;base&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shutil&lt;span style="color:#f92672">.&lt;/span>move(source_dir, target_dir)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;moves the top-level directory to &lt;code>apps/base&lt;/code>. Here, it is assumed that the &lt;code>cookiecutter&lt;/code> project lives in a &lt;code>scaffolding/&lt;/code> directory.&lt;/p>
&lt;p>It&amp;rsquo;s also possible to invoke &lt;code>cookiecutter&lt;/code> with an URL.
Think &lt;code>cookiecutter https://github/com/thiagowfx/my-cool-django-template --directory lite&lt;/code>.&lt;/p>
&lt;p>I intend to adopt it in more of my projects.&lt;/p></description></item><item><title>bkt: cache command outputs</title><link>https://perrotta.dev/2024/12/bkt-cache-command-outputs/</link><pubDate>Sun, 29 Dec 2024 19:27:21 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/bkt-cache-command-outputs/</guid><description>&lt;p>My esteemed friend &lt;a href="https://github.com/dimo414">Michael Diamond&lt;/a> wrote &lt;a href="https://www.bkt.rs/">&lt;code>bkt&lt;/code>&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;p>bkt (pronounced &amp;ldquo;bucket&amp;rdquo;) is a subprocess caching utility written in Rust.&lt;/p>
&lt;/blockquote>
&lt;p>I mentioned it &lt;a href="https://perrotta.dev/2022/01/arch-linux-new-pkgbuild-workflow/">previously&lt;/a> as an example on how to create a &lt;code>PKGBUILD&lt;/code> for Arch Linux.&lt;/p>
&lt;p>Here is the main use case for me:&lt;/p>
&lt;p>Assume you have a command that is expensive to run.
The command is intended to display information / output about some resources.
Even though it&amp;rsquo;s expensive, its output rarely changes.
So that&amp;hellip;caching it would be quite beneficial.&lt;/p>
&lt;p>For example, a command to list all your cluster nodes alongside some of their properties.
Perhaps you need to run that command multiple times a day&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Enter &lt;code>bkt&lt;/code>!&lt;/p>
&lt;p>By creating an alias or a wrapper function in your shell (e.g. by adding it to your shell rc file) that uses &lt;code>bkt&lt;/code>, you can make subsequent command runs complete faster, by leveraging its cache.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>active_gardens_pp &lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> bkt --ttl 7d -- &lt;span style="color:#f92672">{&lt;/span>list clusters command&lt;span style="color:#f92672">}&lt;/span> -o json | jq &lt;span style="color:#e6db74">&amp;#39;.[] | select(.active == true and .partition != &amp;#34;private-cloud&amp;#34; and .partition != &amp;#34;gov-cloud&amp;#34;)&amp;#39;&lt;/span> | mlr --ijson --opprint --barred cat
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The first time I run &lt;code>active_gardens_pp&lt;/code>&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, it takes several seconds to complete.
The second time, it completes almost instantaneously.&lt;/p>
&lt;p>The cache duration can be defined with the &lt;code>--ttl&lt;/code> flag. One day or one week or a couple of hours can be sensible defaults, depending on how often you expect the output to change.&lt;/p>
&lt;p>And then I should talk about &lt;a href="https://github.com/johnkerl/miller">&lt;code>mlr&lt;/code>&lt;/a> (Miller) another day&amp;hellip;&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>In Rust™. And with a &lt;a href="https://en.wikipedia.org/wiki/Domain_hack">domain hack&lt;/a>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Especially if, like me, you like to often close your tabs to tidy up (whether browser or terminal ones).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>&lt;code>pp&lt;/code> stands for pretty-print.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Cooking</title><link>https://perrotta.dev/2024/12/cooking/</link><pubDate>Sun, 29 Dec 2024 18:56:07 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/cooking/</guid><description>&lt;p>This &lt;a href="https://rwblickhan.org/essays/rbog-cooking/">essay&lt;/a> by Russel Blickhan is
a very high-quality resource for the kitchen.&lt;/p>
&lt;p>Having read &lt;a href="https://www.goodreads.com/book/show/30753841-salt-fat-acid-heat?ac=1&amp;amp;from_search=true&amp;amp;qid=9e6iEWuIHj&amp;amp;rank=1">Salt, Fat, Acid, Heat: Mastering the Elements of Good Cooking&lt;/a> recently, it&amp;rsquo;s a great companion resource.&lt;/p>
&lt;h2 id="recipe-ideas">Recipe ideas&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.makegoodfood.ca/">Goodfood&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.lidl-kochen.de/">LIDL Kochen&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>AI usage</title><link>https://perrotta.dev/2024/12/ai-usage/</link><pubDate>Sun, 29 Dec 2024 11:11:57 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/ai-usage/</guid><description>&lt;p>(&lt;a href="https://sive.rs/ai">via Derek Sivers&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>I have never ever used AI to generate text in place of my &amp;ldquo;voice&amp;rdquo;. No emails.
No sentences in my articles or books or even comments. Nothing pretending to
be me.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>But again, the real point of this page is to let you know that nothing
claiming to be written by me is written by an AI.&lt;/p>
&lt;/blockquote>
&lt;p>Likewise.&lt;/p></description></item><item><title>Pin all github actions</title><link>https://perrotta.dev/2024/12/pin-all-github-actions/</link><pubDate>Sat, 28 Dec 2024 20:49:27 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/pin-all-github-actions/</guid><description>&lt;p>&lt;a href="https://cedwards.xyz/github-actions-are-an-impending-security-disaster/">via Connor Edwards&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Since git tags can be moved arbitrarily by the author, there&amp;rsquo;s nothing stopping them going rogue and changing the Action to be malicious at any time. The author could change the code to exfiltrate the repository itself, the GITHUB_TOKEN (which in many cases can have more power than it should), or other CI/CD secrets.&lt;/p>
&lt;/blockquote>
&lt;p>Hence, bad:&lt;/p>
&lt;pre tabindex="0">&lt;code>uses: actions/checkout@v4
&lt;/code>&lt;/pre>&lt;p>Good:&lt;/p>
&lt;pre tabindex="0">&lt;code>uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
&lt;/code>&lt;/pre>&lt;p>I find an effective way to address and enforce this practice is via &lt;a href="https://pre-commit.com/">pre-commit&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">https://github.com/lalten/check-gha-pinning&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rev&lt;/span>: &lt;span style="color:#ae81ff">v1.2.0&lt;/span> &lt;span style="color:#75715e"># or whatever is the latest version&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">id&lt;/span>: &lt;span style="color:#ae81ff">check-gha-pinning&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Try this to check whether there are any existing violations in your repositories:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% pre-commit try-repo https://github.com/lalten/check-gha-pinning --all-files
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I had some in my blog:&lt;/p>
&lt;pre tabindex="0">&lt;code>GitHub Actions Pinning...................................................Failed
- hook id: check-gha-pinning
- exit code: 1

.github/workflows/gh-pages.yml:22: peaceiris/actions-hugo@v3 is not pinned to commit (should be e3b661c523413d13d642651a5ba5fc0d2b344c0d # v3)
.github/workflows/gh-pages.yml:27: extractions/setup-just@v2 is not pinned to commit (should be dd310ad5a97d8e7b41793f8ef055398d51ad4de6 # v2.0.0)
.github/workflows/gh-pages.yml:33: peaceiris/actions-gh-pages@v4 is not pinned to commit (should be e9c66a37f080288a11235e32cbe2dc5fb3a679cc # v4)
&lt;/code>&lt;/pre>&lt;p>They are now fixed.&lt;/p></description></item><item><title>Amazon guardrails</title><link>https://perrotta.dev/2024/12/amazon-guardrails/</link><pubDate>Sat, 28 Dec 2024 19:03:06 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/amazon-guardrails/</guid><description>&lt;p>Whenever buying stuff from Amazon it&amp;rsquo;s always handy to double-check whether it&amp;rsquo;s a good idea, and whether it&amp;rsquo;s a good time to do so.&lt;/p>
&lt;ul>
&lt;li>Is it a good idea? Cross-reference your items with &lt;a href="https://onlinesafety.substack.com/p/everyone-should-be-using-fakespot">Fakespot&lt;/a> by Mozilla.&lt;/li>
&lt;li>Is it a good time? Check price history at &lt;a href="https://camelcamelcamel.ca/">CamelCamelCamel&lt;/a>.&lt;/li>
&lt;/ul></description></item><item><title>Miniflux: global blocklist</title><link>https://perrotta.dev/2024/12/miniflux-global-blocklist/</link><pubDate>Sat, 28 Dec 2024 18:04:19 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/miniflux-global-blocklist/</guid><description>&lt;p>One of the best features of &lt;a href="https://miniflux.app/">miniflux&lt;/a> rolled out &lt;a href="https://github.com/miniflux/v2/blob/main/ChangeLog">this year&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
was the ability to globally block feed items that match certain patterns.&lt;/p>
&lt;p>Previously it was possible to do so only in an individual feed basis.&lt;/p>
&lt;p>The documentation lives &lt;a href="https://miniflux.app/docs/rules.html#global-filtering-rules">here&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Global filters are defined on the Settings page and are automatically applied to all articles from all feeds.&lt;/p>
&lt;/blockquote>
&lt;p>My usage is like this:&lt;/p>
&lt;pre tabindex="0">&lt;code>EntryTitle=(?i)(Apple TV|\bCrypto\b|iPad)
&lt;/code>&lt;/pre>&lt;p>To add new terms, I add more regular expressions with an or (&lt;code>|&lt;/code>).
Whenever the term is a common substring, I add word boundaries with &lt;code>\b&lt;/code>.
The &lt;code>(?i)&lt;/code> is to make the matching case insensitive.&lt;/p>
&lt;p>This approach helps me fight against information overload.&lt;/p>
&lt;p>There are some people I like to follow via Miniflux, but I am simply not interested in some of their kinds of posts.&lt;/p>
&lt;p>For example, there are excellent bloggers like &lt;a href="https://daringfireball.net/">John Gruber&lt;/a> and &lt;a href="https://pxlnv.com/">Nick Heer&lt;/a>,
but they post way too much about Apple. There are some classes of Apple products I am simply not interested in, because
I do not own any of them, nor plan to e.g. Apple TV or iPad or Vision Pro.
A global block list is a much more effective way to address mass filtering out of posts than per-feed ones.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Since &lt;code>miniflux&lt;/code> version 2.1.4 (July 9, 2024).&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Ghostty</title><link>https://perrotta.dev/2024/12/ghostty/</link><pubDate>Sat, 28 Dec 2024 17:50:31 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/ghostty/</guid><description>&lt;p>From the series: yet another terminal emulator in &lt;del>Rust&lt;/del> Zig™:&lt;/p>
&lt;figure>&lt;a href="https://xkcd.com/927/">&lt;img src="https://imgs.xkcd.com/comics/standards.png"
 alt="Fortunately, the charging one has been solved now that we&amp;#39;ve all standardized on mini-USB. Or is it micro-USB? Shit.">&lt;/a>&lt;figcaption>
 &lt;p>XKCD Courtesy of Randall Munroe&lt;/p>
 &lt;/figcaption>
&lt;/figure>

&lt;blockquote>
&lt;p>&lt;a href="https://ghostty.org/">https://ghostty.org/&lt;/a>&lt;/p>
&lt;p>Ghostty is a fast, feature-rich, and cross-platform terminal emulator that uses platform-native UI and GPU acceleration.&lt;/p>
&lt;/blockquote>
&lt;p>So you just recreated Alacritty / Kitty?&lt;/p>
&lt;p>Popularity on &lt;a href="https://news.ycombinator.com/item?id=42517447">Hacker News&lt;/a> exploded, with over 2k stars.
For some reason, anything written in &lt;del>Rust&lt;/del> Zig automatically becomes popular.&lt;/p>
&lt;p>Snark aside, I tested it yesterday on macOS and it turns out it&amp;rsquo;s quite amazing.&lt;/p>
&lt;p>In particular, I like:&lt;/p>
&lt;ul>
&lt;li>it&amp;rsquo;s fast&lt;/li>
&lt;li>it&amp;rsquo;s minimalist, and yet it&amp;rsquo;s feature-rich in an unobtrusive way&lt;/li>
&lt;li>it&amp;rsquo;s native (no Electron and friends, amen)&lt;/li>
&lt;li>it has sensible configuration defaults&lt;/li>
&lt;/ul>
&lt;p>It resembles my experience of using &lt;a href="https://alacritty.org/">Alacritty&lt;/a> on Linux&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>I just have three gripes&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> with it until I am able to fully adopt it:&lt;/p>
&lt;h2 id="1-ssh-does-not-work-out-of-the-box-due-to-xterm-shenanigans">1. &lt;code>ssh&lt;/code> does not work out-of-the-box due to &lt;code>xterm&lt;/code> shenanigans&lt;/h2>
&lt;p>&lt;a href="https://github.com/ghostty-org/ghostty/discussions/3161">https://github.com/ghostty-org/ghostty/discussions/3161&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Error opening terminal: xterm-ghostty.&lt;/p>
&lt;/blockquote>
&lt;p>They do provide a &lt;a href="https://ghostty.org/docs/help/terminfo#configure-ssh-to-fall-back-to-a-known-terminfo-entry">workaround&lt;/a>,
by the means of making a change to &lt;code>~/.ssh/config&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code># .ssh/config
Host *
 SetEnv TERM=xterm-256color
&lt;/code>&lt;/pre>&lt;p>The workaround suffices.&lt;/p>
&lt;h2 id="2-blinking-cursor">2. Blinking cursor&lt;/h2>
&lt;p>When using &lt;code>zsh&lt;/code>, it&amp;rsquo;s impossible to make the cursor stop blinking.&lt;/p>
&lt;p>There&amp;rsquo;s &lt;a href="https://github.com/ghostty-org/ghostty/discussions/2812#discussioncomment-11686920">an issue&lt;/a> about it:&lt;/p>
&lt;blockquote>
&lt;p>Setting &lt;code>cursor-style-blink&lt;/code> to &lt;code>false&lt;/code> has virtually no effect because shell integration will automatically turn on blinking.&lt;/p>
&lt;/blockquote>
&lt;p>I also jumped on the bandwagon with a &lt;a href="https://github.com/ghostty-org/ghostty/discussions/2812#discussioncomment-11680349">comment&lt;/a> there:&lt;/p>
&lt;blockquote>
&lt;p>I use &lt;a href="https://grml.org/zsh">grml-zsh-config&lt;/a>. When opening Ghostty, it starts with a bar+blinking cursor(1).&lt;/p>
&lt;p>When spawning a new &lt;code>zsh&lt;/code> shell within &lt;code>zsh&lt;/code>, it changes to a block+non-blocking cursor(2).&lt;/p>
&lt;p>(2) is the desired behavior – iTerm2 and Terminal.app both do it out-of-the-box. I am not sure why Ghostty sets a bar+blinking cursor, whilst the other terminal emulators do not.&lt;/p>
&lt;p>This discussion / issue seems to track down the root cause. I would suggest converting it back to an Issue. Happy to provide logs and/or more info if it helps!&lt;/p>
&lt;/blockquote>
&lt;p>There&amp;rsquo;s no elegant workaround for 2). Should they ever fix that issue, I am ready to switch from iTerm2.&lt;/p>
&lt;p>&lt;strong>Edit(2024-12-29)&lt;/strong>: The following config works to achieve (2):&lt;/p>
&lt;pre tabindex="0">&lt;code>cursor-style-blink = false
shell-integration-features = no-cursor
&lt;/code>&lt;/pre>&lt;h2 id="3-no-scrollback-search">3. No scrollback search&lt;/h2>
&lt;p>&lt;strong>Edit(2024-12-29)&lt;/strong>: This section was added afterwards. The initial post only
had two gripes.&lt;/p>
&lt;p>&lt;a href="https://github.com/ghostty-org/ghostty/issues/189">There is no &lt;code>Cmd + f&lt;/code> to
search&lt;/a>. This is a big deal.
It&amp;rsquo;s just a matter of time: the FR has lots of upvotes.&lt;/p>
&lt;p>iTerm2 is great, but it has way too many features, and I barely use any.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On macOS, Alacritty isn&amp;rsquo;t really great.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>&lt;a href="https://perrotta.dev/2022/03/macos-terminal-app-gripes/">Seems familiar&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Optimize images</title><link>https://perrotta.dev/2024/12/optimize-images/</link><pubDate>Sat, 28 Dec 2024 16:14:19 -0300</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2024/12/optimize-images/</guid><description>&lt;p>I like to use &lt;a href="https://github.com/shssoichiro/oxipng">oxipng&lt;/a> to optimize PNG (and other) images.&lt;/p>
&lt;p>There&amp;rsquo;s a &lt;a href="https://github.com/shssoichiro/oxipng/blob/master/.pre-commit-hooks.yaml">pre-commit hook&lt;/a> available, therefore enforcing it is a breeze:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">repo&lt;/span>: &lt;span style="color:#ae81ff">https://github.com/shssoichiro/oxipng&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rev&lt;/span>: &lt;span style="color:#ae81ff">v9.1.3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">id&lt;/span>: &lt;span style="color:#ae81ff">oxipng&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Surely you could run it in github actions as well, if you don&amp;rsquo;t use pre-commit.com.&lt;/p>
&lt;p>If I need to use it as an one-off, I can either run the &lt;code>oxipng&lt;/code> binary directly,
or use a web version such as &lt;a href="https://squoosh.app/">Squoosh&lt;/a> (&lt;a href="https://github.com/simonw/til/blob/main/github-actions/oxipng.md">via Simon Willison&lt;/a>).&lt;/p></description></item></channel></rss>