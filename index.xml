<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>¬ just serendipity 🍀</title><link>https://perrotta.dev/</link><description>Recent content on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Thu, 24 Apr 2025 03:14:32 +0200</lastBuildDate><atom:link href="https://perrotta.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>The LLM journey</title><link>https://perrotta.dev/2025/04/the-llm-journey/</link><pubDate>Thu, 24 Apr 2025 03:14:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-llm-journey/</guid><description>&lt;p>&lt;em>Narrator&amp;rsquo;s voice&lt;/em>: &lt;a href="https://harper.blog/2025/04/17/an-llm-codegen-heros-journey/">An LLM Codegen Hero&amp;rsquo;s Journey
&lt;/a> by Harper Reed.&lt;/p>
&lt;p>I don&amp;rsquo;t have anything to add, go read Harper&amp;rsquo;s post.&lt;/p></description></item><item><title>HashiCorp Vault from helm values</title><link>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</link><pubDate>Wed, 23 Apr 2025 16:56:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Populate HashiCorp Vault with select keys from &lt;code>helm get values&lt;/code> for a given chart release.&lt;/p>
&lt;p>The following script works:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e"># Usage: Tweak entries as needed and then run the script.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># It&amp;#39;s an associative array: a dictionary, a hash map&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Key: the entry to be populated in vault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Value: a `jq` JSON selector from the output of `helm get values -o json`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">declare&lt;/span> -A &lt;span style="color:#e06c75">entries&lt;/span>&lt;span style="color:#56b6c2">=(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.accessKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.accessKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.secretKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.secretKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiPassword&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiPassword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiUser&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiUser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.adminpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.adminpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.password&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.ropass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.ropass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.rwpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.rwpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.token&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.verificationToken&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.verificationToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main&lt;span style="color:#56b6c2">()&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> entry in &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>!entries[@]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$entry&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">entries&lt;/span>[&lt;span style="color:#e06c75">$entry&lt;/span>]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">content&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>helm get values -n tools mychart -o json | jq -r &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$value&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Populating vault &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379"> from helm value &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">: &lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$FIRST&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#98c379">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv put -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv patch -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv get -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm ~/.vault-token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>FIRST&lt;/code>: In the first time we need to create an entry (&lt;code>vault kv put&lt;/code>), in the
second time we need to patch it (&lt;code>vault kv patch&lt;/code>).&lt;/p></description></item><item><title>Github PRs: do not submit</title><link>https://perrotta.dev/2025/04/github-prs-do-not-submit/</link><pubDate>Wed, 23 Apr 2025 12:47:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-prs-do-not-submit/</guid><description>&lt;p>Sometimes you want to send a pull request for review to your teammates and want
to ensure they do not accidentally prematurely merge it.&lt;/p>
&lt;p>One way to do so is to note in the commit message / PR description that it
should not be merged. Nonetheless, humans don&amp;rsquo;t always read instructions, our
attention span is quite limited.&lt;/p>
&lt;p>It would be more robust to employ a mechanism to prevent the PR from being
submitted, even if someone attempts to do so.&lt;/p>
&lt;p>You could leave the PR as a draft. However, this could have the side effect that
not all CI checks may run. You don&amp;rsquo;t want surprising failures later on, that
could slow you down.&lt;/p>
&lt;p>I like the following approach, which is partly inspired by an internal presubmit
check at Google: write &amp;ldquo;DO NOT SUBMIT&amp;rdquo; in the PR title, and have a CI check
(github action&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>) fail in this situation. Mark the action as
&lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks">required&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>If status checks are required for a repository, the required status checks
must pass before you can merge your branch into the protected branch. For more
information, see About protected branches.&lt;/p>
&lt;/blockquote>
&lt;p>Use the following github action (&lt;code>.github/workflows/pr-checks.yml&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">name&lt;/span>: PR Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">permissions&lt;/span>: read-all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pull_request&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">types&lt;/span>: [opened, edited, synchronize]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">concurrency&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">group&lt;/span>: ${{ github.workflow }}-${{ github.ref }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cancel-in-progress&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pr-checks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">runs-on&lt;/span>: ubuntu-latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">&amp;#39;&amp;#34;DO NOT SUBMIT&amp;#34; check&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">PR_TITLE&lt;/span>: ${{ github.event.pull_request.title }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">run&lt;/span>: |&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;Title: $PR_TITLE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> if [[ &amp;#34;${PR_TITLE,,}&amp;#34; =~ &amp;#34;do not submit&amp;#34; ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;::error::PR title &amp;#39;$PR_TITLE&amp;#39; must not contain &amp;#39;DO NOT SUBMIT&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> fi&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>${PR_TITLE,,}&lt;/code> converts the PR title to lowercase so that the comparison is
case insensitive.&lt;/p>
&lt;p>&lt;code>=~ &amp;quot;do not submit&amp;quot;&lt;/code> is a regular expression to check if the title includes the
&amp;ldquo;DO NOT SUBMIT&amp;rdquo; string.&lt;/p>
&lt;p>With the action in place, I can just update my PR title by prepending &lt;code>DO NOT SUBMIT:&lt;/code> to it. The prefix doubles down as a documentation of my intent.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I don&amp;rsquo;t think I&amp;rsquo;ll ever remember the difference between a github action
and a github workflow. One is reusable, the other one is not. I always
forget which one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Bracket City</title><link>https://perrotta.dev/2025/04/bracket-city/</link><pubDate>Mon, 21 Apr 2025 13:51:39 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/bracket-city/</guid><description>&lt;p>&lt;a href="https://www.theatlantic.com/games/bracket-city/">Bracket City&lt;/a> by The Atlantic
via &lt;a href="https://news.ycombinator.com/item?id=43622719">Hacker News&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Hi hn - I co-own a diner where I co-host a puzzle night that is kind of like a
diner-themed escape room. At the last one, I made a puzzle that was
crossword-like clues nested in brackets. People at the diner seemed to like
it, so I resolved to make it a real game and Bracket City was born:
&lt;a href="https://bracket.city/">https://bracket.city&lt;/a>.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>I posted Bracket City to HN on February 24th and the game went live yesterday
on The Atlantic (!)&lt;/p>
&lt;p>The game will stay free to play (and not require logging in). Also, I&amp;rsquo;m still
making all the puzzles!&lt;/p>
&lt;/blockquote>
&lt;p>Very cool!&lt;/p>
&lt;p>Daily-puzzle-acquired-by-major-newspaper reminds me of
&lt;a href="https://www.nytimes.com/games/wordle/index.html">Wordle&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Acquired by The New York Times.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Finding the table manual</title><link>https://perrotta.dev/2025/04/finding-the-table-manual/</link><pubDate>Sun, 20 Apr 2025 18:26:55 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/finding-the-table-manual/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: I bought an used table, it&amp;rsquo;s not from IKEA, now I need to
find its PDF manual to figure out how to properly assemble it. The previous
owner did not have a copy available.&lt;/p>
&lt;p>First step: Figure out what the make (manufacturer) is. Easy, there&amp;rsquo;s a label
attached to the table, it&amp;rsquo;s Finori. The label, unfortunately, does not include
the model name.&lt;/p>
&lt;p>Second step: Try to find the table model in the Finori website. No success.&lt;/p>
&lt;p>I go to &lt;a href="https://www.idealo.de/">idealo&lt;/a> and search for &amp;ldquo;Finori
Ausziehtisch&amp;rdquo;. I couldn&amp;rsquo;t find the exact model, but I got a similar one.&lt;/p>
&lt;p>Somehow I ended up in Otto and found the right model&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. There&amp;rsquo;s no PDF manual
though.&lt;/p>
&lt;p>Then I go to &lt;a href="https://chatgpt.com/">SearchGPT&lt;/a> and prompt, with both search and
thinking enabled:&lt;/p>
&lt;blockquote>
&lt;p>Can you help me find the manual of this table? {link to the otto.de listing}&lt;/p>
&lt;/blockquote>
&lt;p>It got me some similar models, but not the exact one.&lt;/p>
&lt;p>At some point I got linked to an IKEA extendable table assembly video on
YouTube. The video was enough to figure out the remaining steps.&lt;/p>
&lt;p>The conclusion is: IKEA is like the
&lt;a href="https://wiki.archlinux.org/title/Main_page">ArchWiki&lt;/a> of assembling furniture.
Even when assembling models from other manufacturers, it will surely help you!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>No need to link to it from here though.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Alpine Linux: the maintainer workflow</title><link>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</link><pubDate>Sun, 20 Apr 2025 15:12:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</guid><description>&lt;p>I maintain &lt;a href="https://pkgs.alpinelinux.org/packages?name=&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=Thiago+Perrotta">a couple of
packages&lt;/a>
on Alpine Linux.&lt;/p>
&lt;p>Every now and then, a new software version is released, and it&amp;rsquo;s my duty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> as an
active package maintainer to update my packages.&lt;/p>
&lt;p>The typical workflow looks like the following.&lt;/p>
&lt;p>First I get an email notification from &amp;ldquo;Alpine Package DB&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Dear Thiago Perrotta&lt;/p>
&lt;p>This is an automatic message send from pkgs.alpinelinux.org
One or more of your aports have been flagged out of date based on
Anitya monitoring system &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/p>
&lt;p>argocd current: 2.14.2-r1 new: 2.14.9&lt;/p>
&lt;p>To update the package you can use our helper script:&lt;/p>
&lt;p>abump aport-version&lt;/p>
&lt;p>If the provided information is incorrect, please let us know on IRC
or &lt;a href="mailto:alpine-infra@alpinelinux.org">alpine-infra@alpinelinux.org&lt;/a>. Thanks!&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s important not to &lt;a href="https://opensource.com/business/15/12/avoid-burnout-live-happy">burn oneself
out&lt;/a>.&lt;/p>
&lt;p>I treat these notifications as an FYI. They &lt;em>are not&lt;/em> prompts to make me
immediately go and update the packages&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. For packages with frequent updates,
like &lt;code>argocd&lt;/code>, I&amp;rsquo;ll let a few patch versions accumulate before I take action.
Other times it is handy to batch package upgrades together so to do them all at
once. I use my personal judgment here. At the very least, this email will
trigger a TODO in my task list, so that it will not be forgotten. &lt;em>At some
point&lt;/em> it will be taken care of.&lt;/p>
&lt;p>Once I am ready to update the package, I &lt;code>ssh&lt;/code> to my Alpine Linux server. There
is absolutely no requirement to update alpine linux packages from alpine linux,
but it&amp;rsquo;s the most convenient to do, and I already have an alpine linux system
anyway.&lt;/p>
&lt;p>Then &lt;code>cd aports/&lt;/code>. This is a local git clone of the &lt;a href="https://gitlab.alpinelinux.org/alpine/aports">aports
tree&lt;/a>
(&lt;a href="https://wiki.alpinelinux.org/wiki/Aports_tree">wiki&lt;/a>).&lt;/p>
&lt;p>&lt;code>git pull&lt;/code>. I tend to clean up after myself, so the last branch is likely
already &lt;code>master&lt;/code>. But, if not, then &lt;code>git reset --hard &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git pull&lt;/code>. Amen.&lt;/p>
&lt;p>Now the real fun starts. And it&amp;rsquo;s surprisingly quick and simple, it feels like
cheating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% abump argocd-2.14.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will update the version and checksums in the corresponding &lt;code>APKBUILD&lt;/code> and
trigger a package build.&lt;/p>
&lt;p>It&amp;rsquo;s sensible to check the package release notes or changelog to find potential
incompatibilities and/or updates to the build process. It&amp;rsquo;s also sensible to
look at the package diffs to inspect for potential malware, which is becoming
increasingly more common these days in open source packages. &amp;ldquo;Secure your supply
chain&amp;rdquo;, as they say it.&lt;/p>
&lt;p>If the build completes successfully, create a new branch (&lt;code>git nb argocd&lt;/code>),
commit, push it (&lt;code>git pushm&lt;/code>), then create a merge request (MR) on
&lt;a href="https://gitlab.alpinelinux.org/">GitLab&lt;/a>. I normally use the Web UI to do so,
but it&amp;rsquo;s also possible to do it with the CLI. A link to create the MR is printed
to stdout upon pushing the branch, which makes the process even easier.&lt;/p>
&lt;p>It could happen that the MR fails CI for some architectures (even if it works
locally on my machine™). These errors need to be dealt with.&lt;/p>
&lt;p>The commit message must follow a certain style. I have a pre-commit script set
up that does it for me. It is typically in this form:&lt;/p>
&lt;pre tabindex="0">&lt;code>testing/argocd: upgrade to 2.14.9
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a rule: only one package per merge request.&lt;/p>
&lt;p>If there are more packages to upgrade, I run &lt;code>git bd&lt;/code> (&amp;ldquo;branch delete&amp;rdquo;) and then
restart this process. It&amp;rsquo;s quite manageable, as I don&amp;rsquo;t maintain a lot of
packages. Perhaps it could be further automated if there were more packages
and/or if the package upgrades were more frequent.&lt;/p>
&lt;p>The final MR looks like the following:
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/83026">!83026&lt;/a>.&lt;/p>
&lt;p>Now I sit tight and wait for approval.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On a &lt;a href="https://xkcd.com/2347/">&lt;em>best-effort&lt;/em>&lt;/a> basis.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Unless it&amp;rsquo;s a security risk or incident (e.g. whenever there&amp;rsquo;s a CVE
associated with it).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The Smalltalk Question</title><link>https://perrotta.dev/2025/04/the-smalltalk-question/</link><pubDate>Sun, 20 Apr 2025 15:04:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-smalltalk-question/</guid><description>&lt;p>&lt;a href="http://www.aaronsw.com/weblog/smalltalkq">The Smalltalk Question&lt;/a> by Aaron
Swartz, via
&lt;a href="https://www.goodreads.com/book/show/24091886-raw-thought-raw-nerve">Raw Thought, Raw Nerve: Inside the Mind of Aaron Swartz&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>One of the minor puzzles of American life is what question to ask people at
parties and suchly to get to know them.&lt;/p>
&lt;p>&amp;ldquo;How ya doin&amp;rsquo;?&amp;rdquo; is of course mere formality, only the most troubled would
answer honestly for anything but the positive.&lt;/p>
&lt;p>&amp;ldquo;What do you do?&amp;rdquo; is somewhat offensive. First, it really means &amp;ldquo;what
occupation do you hold?&amp;rdquo; and thus implies you do little outside your
occupation. Second, it implies that one&amp;rsquo;s occupation is the most salient fact
about them. Third, it rarely leads to further useful inquiry. For only a
handful of occupations, you will be able to say something somewhat relevant,
but even this will no doubt be slightly annoying or offensive. (&amp;ldquo;Oh yeah, I
always thought about studying history.&amp;rdquo;)&lt;/p>
&lt;p>&amp;ldquo;Where are you from?&amp;rdquo; is even less fruitful.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>I propose instead that one ask &lt;strong>&amp;ldquo;What have you been thinking about lately?&amp;rdquo;&lt;/strong>
First, the question is extremely open-ended. The answer could be a book, a
movie, a relationship, a class, a job, a hobby, etc. Even better, it will be
whichever of these is most interesting at the moment. Second, it sends the
message that thinking, and thinking about thinking, is a fundamental human
activity, and thus encourages it. Third, it&amp;rsquo;s easiest to answer, since by its
nature its asking about what&amp;rsquo;s already on the person&amp;rsquo;s mind. Fourth, it&amp;rsquo;s
likely to lead to productive dialog, as you can discuss the topic together and
hopefully make progress. Fifth, the answer is quite likely to be novel. Unlike
books and occupations, people&amp;rsquo;s thoughts seem to be endlessly varied. Sixth,
it helps capture a person&amp;rsquo;s essence. A job can be forced by circumstance and
parentage, but our thoughts are all our own. I can think of little better way
to quickly gauge what a person is really like.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>(emphasis mine)&lt;/em>&lt;/p>
&lt;p>So, what have you been thinking about lately?&lt;/p></description></item><item><title>Overnight Oats</title><link>https://perrotta.dev/2025/04/overnight-oats/</link><pubDate>Sun, 20 Apr 2025 13:09:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/overnight-oats/</guid><description>&lt;p>This post premieres a &lt;a href="https://perrotta.dev/tags/recipe">&lt;code>#recipe&lt;/code>&lt;/a> tag in this blog.&lt;/p>
&lt;p>What I like about this recipe is that it is quite freestyle, one can mix and
match whichever ingredients are available at hand. In my place most
ingredients are almost always available, only fresh fruits have high churn.&lt;/p>
&lt;p>And it&amp;rsquo;s easy to make it fun by adding / removing ingredients at the last
minute, tweaking the overall result each time. The sky is the limit.&lt;/p>
&lt;p>I recommend to have it for &lt;strong>breakfast&lt;/strong> (it&amp;rsquo;s enough!) or as an &lt;strong>afternoon snack&lt;/strong>
(for example, bring a Tupperware to work).&lt;/p>
&lt;h2 id="ingredients">Ingredients&lt;/h2>
&lt;p>The most important ingredients are &lt;strong>in bold&lt;/strong>.&lt;/p>
&lt;p>The coolest™ ingredients are &lt;em>in italics&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>base (pick at least one)
&lt;ul>
&lt;li>&lt;strong>milk&lt;/strong> (animal or not; prefer low-fat)&lt;/li>
&lt;li>plain yogurt (greek, vanilla also OK)&lt;/li>
&lt;li>high-protein yogurt&lt;/li>
&lt;li>&lt;em>semolina pudding&lt;/em>&lt;/li>
&lt;li>avoid: water&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>grains (pick at least two)
&lt;ul>
&lt;li>&lt;strong>oats&lt;/strong> (steel-cut or rolled -&amp;gt; auf Deutsch: Haferflocken)&lt;/li>
&lt;li>&lt;strong>chia seeds&lt;/strong>&lt;/li>
&lt;li>flax seeds&lt;/li>
&lt;li>hemp seeds&lt;/li>
&lt;li>avoid&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>: quick oats&lt;/li>
&lt;li>avoid: porridge&lt;/li>
&lt;li>avoid: cereal (Müsli)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>sweet(ener) (pick at least one)
&lt;ul>
&lt;li>&lt;strong>peanut butter&lt;/strong>&lt;/li>
&lt;li>almond butter&lt;/li>
&lt;li>&lt;em>maple syrup&lt;/em>&lt;/li>
&lt;li>&lt;em>acacia honey&lt;/em>&lt;/li>
&lt;li>&lt;em>raw honey&lt;/em>&lt;/li>
&lt;li>wild honey&lt;/li>
&lt;li>date syrup&lt;/li>
&lt;li>&lt;strong>cinnamon&lt;/strong>&lt;/li>
&lt;li>vanilla extract&lt;/li>
&lt;li>avoid: sugar / brown sugar&lt;/li>
&lt;li>avoid: hazelnut butter / Nutella™&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>fruits (pick at least one)
&lt;ul>
&lt;li>bananas&lt;/li>
&lt;li>strawberries&lt;/li>
&lt;li>raspberries&lt;/li>
&lt;li>blueberries&lt;/li>
&lt;li>cherries&lt;/li>
&lt;li>figs&lt;/li>
&lt;li>avoid: dry figs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="preparation">Preparation&lt;/h2>
&lt;h3 id="the-first-day">The first day&lt;/h3>
&lt;p>These are overnight oats, therefore they should ideally be prepared one day
before you intend to consume them. The intent is to leave them simmering in the
fridge while you&amp;rsquo;re sleeping. Needless to say, it will be served &lt;strong>cold&lt;/strong>.
There&amp;rsquo;s a variant of this recipe that is served hot, but it&amp;rsquo;s out of scope of
this post.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Grab a dish to mix the ingredients within. Ideally, &lt;strong>a container with a lid&lt;/strong>
so that it can be stored in the fridge right away once we&amp;rsquo;re done.
Alternatively, a bowl will also do. Don&amp;rsquo;t get a plate. Some people like to do it
in cups (preferably a big cup if you want to eat enough!).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start by adding the base. Normally I will do milk (always available) + some
plain yogurt if available. Cold milk, do not add hot milk! Room temperature is
also OK.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your grains. Oats are essential. Chia and flex seeds are nice to have.
Anything else is a bonus.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your sweet(ener)s. Unless you&amp;rsquo;re on a diet. But frankly, even if you are,
do add some, just be moderate. Peanut or almond butter are perfect. I also
love to add maple syrup, but I typically defer it for later, right before
eating the oats. The same applies to honey.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mix everything. Preferably with a spoon.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put the container in the fridge. Good night!&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="the-second-day">The second day&lt;/h3>
&lt;p>The fruits should be cut in small pieces. Add them to the container.&lt;/p>
&lt;p>Add other sweeteneers (as previously mentioned: maple syrup, honey, etc).&lt;/p>
&lt;p>It&amp;rsquo;s done. Enjoy!&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: When in a rush, you can prepare and eat the oats within the same day.
Just leave them in the fridge for &lt;em>at least&lt;/em> one hour.&lt;/p>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This post was written without AI, and without any web searches, it&amp;rsquo;s purely from
my memory and experience. Consume (pun intended!) this information at your own
risk.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>What triggers &lt;em>&amp;ldquo;avoid&amp;rdquo;&lt;/em> is one of: (i) experience, (ii) moral, or (iii)
diet.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Serendipity vs Gatekeeping</title><link>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</link><pubDate>Sun, 13 Apr 2025 01:35:29 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</guid><description>&lt;p>Serendipity, via
&lt;a href="https://duckduckgo.com/?q=serendipity+definition&amp;amp;ia=web&amp;amp;iax=definition">DuckDuckGo&lt;/a> dictionary:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>1.&lt;/strong> The faculty of making fortunate discoveries by accident.&lt;/p>
&lt;p>&lt;strong>6.&lt;/strong> Good luck in making unexpected and fortunate discoveries.&lt;/p>
&lt;/blockquote>
&lt;p>Gatekeeping, via
&lt;a href="https://dictionary.cambridge.org/dictionary/english/gatekeeping">Cambridge&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;p>The activity of trying to control who gets particular resources, power, or
opportunities, and who does not.&lt;/p>
&lt;/blockquote>
&lt;p>Serendipity spreader, via &lt;a href="https://perrotta.dev/">yours truly&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>One who facilitates (spreads) serendipity amongst its acquaintances and
peers.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Gatekeeper, via &lt;a href="https://duckduckgo.com/?q=gatekeeper+define&amp;amp;ia=web">DuckDuckGo&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;ol start="3">
&lt;li>One who controls access to something, such as information or services.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Definitions set, here comes the fun part:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Lemma #1&lt;/strong>: Gatekeepers are, by definition, the opposite of serendipity
spreaders. You can visualize them in a 2D scale, from left to right, somewhat
akin to how people attempt to project politics onto a line.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #2&lt;/strong>: Open Source Software (OSS) is a gift™ driven primarily by
serendipity spreaders.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #3&lt;/strong>: In terms of friendships, the optimal point of joy and
satisfaction lies within seeking and maintaining serendipity spreaders whilst
avoiding gatekeepers at all costs. It yields a rewarding continuous feedback
loop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #4&lt;/strong>: Gatekeepers drag serendipity spreaders down. They are like
leeches (parasites).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #5&lt;/strong>: Serendipity spreaders thrive together.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #6&lt;/strong>: In a set full of serendipity spreaders, one gatekeeper is enough
to &lt;a href="https://en.wikipedia.org/wiki/Paradox_of_tolerance">disrupt&lt;/a> the entire
group, thereby leading to the conversion of new gatekeepers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #7&lt;/strong>: In a set full of gatekeepers, one serendipity spreader is enough
to spread serendipity; however, the bar to convert to more serendipity
spreaders is extremely high, and it&amp;rsquo;s very taxing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Several conclusions can be drawn from these lemmas; nonetheless, this is not a
blog about philosophy or morals, therefore the exercise is left to the reader.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I coined this term myself, inspired by hearing about
&lt;a href="https://en.wikipedia.org/wiki/Superspreading_event">superspreaders&lt;/a> during
the COVID-19 pandemic. The definition was written without AI. This is a
badge of honour these days, isn&amp;rsquo;t it? I&amp;rsquo;ll take it.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub: vacation mode</title><link>https://perrotta.dev/2025/04/github-vacation-mode/</link><pubDate>Sun, 13 Apr 2025 01:02:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-vacation-mode/</guid><description>&lt;p>&lt;a href="https://github.blog/changelog/2019-01-08-set-your-status/">Since 2019&lt;/a> GitHub
allows setting a status on your profile page:&lt;/p>
&lt;blockquote>
&lt;p>You can now set your status on GitHub! Use your status to share specific
information with only your organization, or share a status with all of GitHub!
Optionally, you can indicate that you&amp;rsquo;re busy so your collaborators can
determine whether to mention someone else for a quicker response.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/personalizing-your-profile#setting-a-status">Documentation&lt;/a>.
&lt;strong>TL;DR&lt;/strong>: The most practical use case is to set your profile to &amp;ldquo;Busy&amp;rdquo; whenever
you take time off (whether it&amp;rsquo;s vacation or sick leave).&lt;/p>
&lt;p>It&amp;rsquo;s possible to limit the status visibility to a single organization, so that
it is not publicly visible.&lt;/p>
&lt;p>It&amp;rsquo;s also possible to automatically clear the status after a given period (e.g.
one week).&lt;/p>
&lt;p>Why is this useful?&lt;/p>
&lt;ul>
&lt;li>signal to your teammates that you&amp;rsquo;re OOO, without leaving then wondering why
you&amp;rsquo;re taking forever to review their PRs&lt;/li>
&lt;li>prevent team assignments in PR reviews to automatically select you when you&amp;rsquo;re
OOO:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>If you select the &amp;ldquo;Busy&amp;rdquo; option, when people @mention your username, assign
you an issue or pull request, or request a pull request review from you, a
note next to your username will show that you&amp;rsquo;re busy. You will also be
excluded from automatic review assignment for pull requests assigned to any
teams you belong to. For more information, see Managing code review settings
for your team.&lt;/p>
&lt;/blockquote></description></item><item><title>Pipe to Claude</title><link>https://perrotta.dev/2025/04/pipe-to-claude/</link><pubDate>Wed, 09 Apr 2025 17:56:05 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/pipe-to-claude/</guid><description>&lt;p>One of the most effective ways to resolve random software development problems
in 2025:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#e5c07b">command&lt;/span> that emits warnings or errors&lt;span style="color:#56b6c2">}&lt;/span> | claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>claude&lt;/code> is Anthropic&amp;rsquo;s &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
CLI LLM agent tool:&lt;/p>
&lt;blockquote>
&lt;p>Learn about Claude Code, an agentic coding tool made by Anthropic. Currently
in beta as a research preview.&lt;/p>
&lt;/blockquote>
&lt;p>There is a series of little / simple tasks I&amp;rsquo;ve been procrastinating (e.g.
linter issues) that can be quickly resolved with the assistance of a LLM tool.&lt;/p>
&lt;p>There&amp;rsquo;s no silver bullet here: all changes need to be properly reviewed and
tested. Nonetheless, even if the tool is wrong 50% of the time, it&amp;rsquo;s still
faster for me to use the LLM tool as an initial suggestion than having to
do the research myself from scratch.&lt;/p></description></item><item><title>Github Actions: ubuntu-latest tools</title><link>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</link><pubDate>Wed, 09 Apr 2025 01:00:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</guid><description>&lt;p>Which tools are installed in the Github Actions environment for &lt;code>ubuntu-latest&lt;/code>?&lt;/p>
&lt;p>&lt;a href="https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md">This
repository&lt;/a>
has the answer.&lt;/p></description></item><item><title>Against names</title><link>https://perrotta.dev/2025/04/against-names/</link><pubDate>Sun, 06 Apr 2025 12:54:04 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/against-names/</guid><description>&lt;p>&lt;a href="https://steveklabnik.com/writing/against-names/">Against Names&lt;/a> by Steve
Klabnik:&lt;/p>
&lt;blockquote>
&lt;p>Specifically, if naming things is so hard… why do we insist on doing it all
the time?&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been meaning to convert to &lt;a href="https://github.com/jj-vcs/jj">&lt;code>jj&lt;/code>&lt;/a>. The post
has an extra argument to do so.&lt;/p></description></item><item><title>Sentimental versioning</title><link>https://perrotta.dev/2025/04/sentimental-versioning/</link><pubDate>Thu, 03 Apr 2025 11:31:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/sentimental-versioning/</guid><description>&lt;p>&lt;a href="https://github.com/dominictarr/sentimental-versioning">Sentimental Versioning&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;h2 id="tex-and-metafont">TeX and Metafont&lt;/h2>
&lt;h3 id="by-donald-knuth">by Donald Knuth&lt;/h3>
&lt;p>In his seminal text layout system, TeX, and his equally
brilliant typeface design system, METAFONT, Donald uses a versioning number
system that asymptotically approaches perfection. The version numbers of TeX
approach π (the current version is &lt;code>3.14159265&lt;/code>) and the version numbers of
METAFONT approach &lt;code>e&lt;/code>. It has been prophesied that the last change not be made
until after the day Donald ascends to heaven on a shining cloud. At that point,
Donald will make one last ssh connection down from heaven to his server at
Stanford University and set the version number unto π &lt;em>exactly&lt;/em>. At that point
all remaining bugs will be declared features, and the output from TeX will
remain the same for all eternity.&lt;/p>
&lt;/blockquote></description></item><item><title>First Alpine Linux package in Community</title><link>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</link><pubDate>Tue, 01 Apr 2025 14:27:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</guid><description>&lt;p>How wholesome: someone sent a MR (Merge Request)
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/82047">!82047&lt;/a> in
&lt;code>alpine/aports&lt;/code> with the &lt;a href="https://github.com/google/yamlfmt">&lt;code>yamlfmt&lt;/code>&lt;/a> package
I maintain, moving it from &lt;code>testing/&lt;/code> to &lt;code>community/&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This means the package will be included in the next release of Alpine (3.22) as
part of its official repositories (unlike &amp;ldquo;testing&amp;rdquo;, which is only included in
&amp;ldquo;edge&amp;rdquo;).&lt;/p>
&lt;p>&lt;strong>In other words&lt;/strong>: This is the first time a package I maintain will make it to the
official repositories of a Linux distro I like!&lt;/p>
&lt;p>&lt;strong>Next milestone&lt;/strong>: Follow suit with a project I maintain.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I did not initiate this: it has just happened organically / spontaneously.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>DEFCON radio</title><link>https://perrotta.dev/2025/04/defcon-radio/</link><pubDate>Tue, 01 Apr 2025 13:52:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/defcon-radio/</guid><description>&lt;p>Back in my Windows days, in my first desktop computer, I would happily launch
&lt;a href="https://bsplayer.com/">BSPlayer&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Somewhat later, in my desktop Linux, I would happily launch
&lt;a href="https://www.clementine-player.org/">Clementine&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Now, in macOS, I mostly browse Spotify. But there isn&amp;rsquo;t a lot of serendipity
there: I just find myself browsing the same songs over and over again. Spotify
used to be social, if you connected it to Facebook, you could find what your
friends were listening to. Many of my favorite artists were discovered this way.
These days, however, my generation no longer uses Facebook, and Spotify is
barely social anymore.&lt;/p>
&lt;p>&lt;a href="https://somafm.com/defcon/">DEFCON Radio&lt;/a> can bring some of that nostalgia
back. Well, the entire &lt;a href="http://somafm.com/">soma fm&lt;/a> network is quite decent,
for that matter:&lt;/p>
&lt;blockquote>
&lt;p>Over 30 unique channels of listener-supported, commercial-free,
underground/alternative radio broadcasting to the world. All music hand-picked
by SomaFM&amp;rsquo;s award-winning DJs and music directors.&lt;/p>
&lt;/blockquote></description></item><item><title>AppleScript discoverability: more Amphetamine</title><link>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</link><pubDate>Tue, 01 Apr 2025 13:32:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</guid><description>&lt;p>Previously: &lt;a href="https://perrotta.dev/2025/03/amphetamine-keep-awake/">Amphetamine: Keep awake&lt;/a>.&lt;/p>
&lt;p>The previous setup would turn my external monitor off upon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span> &lt;span style="color:#c678dd">to&lt;/span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I needed to modify it to issue that command only when the session is not yet
active.&lt;/p>
&lt;p>Via &lt;a href="https://apple.stackexchange.com/questions/46521/how-do-i-find-out-the-applescript-commands-available-for-a-particular-app">Apple Stack
Exchange&lt;/a>
I noticed I could open the &lt;code>Script Editor.app&lt;/code>, then &lt;code>File &amp;gt; Open Dictionary...&lt;/code>, then select &lt;code>Amphetamine.app&lt;/code>.&lt;/p>
&lt;p>This would open a new window with a list of all available AppleScript commands
to my disposal.&lt;/p>
&lt;p>I quickly spotted one called &lt;code>session is active&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Returns boolean - true or false - indicating whether there is an active session&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;that&amp;rsquo;s exactly what I needed!&lt;/p>
&lt;p>Now I just needed to combine &lt;code>if&lt;/code> + &lt;code>session is active&lt;/code> + &lt;code>start a new session&lt;/code>.&lt;/p>
&lt;p>I don&amp;rsquo;t know AppleScript, and I didn&amp;rsquo;t intend to specialize on it now. In the
old days, I would have used a search engine and/or consulted a Stack Exchange
website to figure out what is the &lt;code>if&lt;/code> syntax. Or maybe even have introspected
the AppleScript documentation / manual.&lt;/p>
&lt;p>But we&amp;rsquo;re in 2025.&lt;/p>
&lt;p>I write &lt;code>llm applescript if &amp;quot;session is active&amp;quot; tell application to start new session&lt;/code> in Chrome. &lt;code>llm&lt;/code> is aliased to
&lt;code>https://chatgpt.com/?hints=search&amp;amp;ref=ext&amp;amp;q=%s&lt;/code>. ChatGPT Search happily tells
me what the correct syntax is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">not&lt;/span> (&lt;span style="color:#e06c75">session&lt;/span> &lt;span style="color:#56b6c2">is&lt;/span> &lt;span style="color:#e06c75">active&lt;/span>) &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">if&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">tell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I follow up with &lt;code>inline in osascript&lt;/code>, which results in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exactly what I was looking for.&lt;/p>
&lt;p>Moments later there&amp;rsquo;s a new commit in my corp dotfiles:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git show b306e31597b63007bb8c3aadb56340cdb6f52703
commit b306e31597b63007bb8c3aadb56340cdb6f52703
Author: Thiago Perrotta &amp;lt;tbperrotta@gmail.com&amp;gt;
Date: Tue Apr 1 13:31:33 2025 +0200

 better amphetamine

diff --git profile/.profile.d/functions_corp.sh profile/.profile.d/functions_corp.sh
index e58333a..365c176 100644
--- profile/.profile.d/functions_corp.sh
+++ profile/.profile.d/functions_corp.sh
@@ -19,7 +19,7 @@ redacted_login() {
 # Run at the start of the work day
 prodaccess() {
 echo &amp;#34;--&amp;gt; Amphetamine&amp;#34;
- osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;
+ osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>Experts</title><link>https://perrotta.dev/2025/03/experts/</link><pubDate>Sat, 29 Mar 2025 18:08:37 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/experts/</guid><description>&lt;p>Suddenly it feels like everyone is an expert on &amp;ldquo;AI&amp;rdquo;.&lt;/p>
&lt;p>For example, MCP (Model Context Protocol) got released quite recently and some
folks are already writing extensive articles about it, as if they had been
working with the technology for ages&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It resembles people giving advice about COVID-19 a few years ago, or about
finance and/or taxes and/or parenting in general.&lt;/p>
&lt;p>I am guessing that surfing the {insert current hype wave} is the way to go,
assuming you follow internet advice™.&lt;/p>
&lt;p>Nonetheless the challenge is, as everything else in life, to develop the ability
to tell apart &lt;a href="https://simonwillison.net/">the&lt;/a>
&lt;a href="https://danielmiessler.com/">good&lt;/a> from the bad ones&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Which makes me wonder how much of these articles were written with or
assisted by Gen AI itself.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I won&amp;rsquo;t link to bad ones as a matter of principle, and also because they
don&amp;rsquo;t deserve more attention.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>llm: remove stored key</title><link>https://perrotta.dev/2025/03/llm-remove-stored-key/</link><pubDate>Fri, 28 Mar 2025 14:09:41 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/llm-remove-stored-key/</guid><description>&lt;p>I was just trying &lt;a href="https://simonwillison.net/">Simon Willison&lt;/a>&amp;rsquo;s excellent CLI
&lt;a href="https://llm.datasette.io/en/stable/index.html">llm&lt;/a> tool:&lt;/p>
&lt;blockquote>
&lt;p>A CLI utility and Python library for interacting with Large Language Models,
both via remote APIs and models that can be installed and run on your own
machine.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s straightforward to set API Keys with it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wanted to set one for &lt;a href="https://www.anthropic.com/claude">Anthropic Claude&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But it turns out the correct name is &lt;code>anthropic&lt;/code>, not &lt;code>claude&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> anthropic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I wanted to clean up the &lt;code>claude&lt;/code> entry.&lt;/p>
&lt;p>Surprisingly, there&amp;rsquo;s no &lt;code>llm key remove&lt;/code> or &lt;code>llm key delete&lt;/code> command!
&lt;a href="https://llm.datasette.io/en/stable/help.html#llm-keys-help">Docs&lt;/a>.&lt;/p>
&lt;p>The workaround: edit the &lt;code>keys.json&lt;/code> file directly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output above is from macOS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e06c75">$EDITOR&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>llm keys path&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>keys.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;claude&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove &lt;code>claude&lt;/code> from it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And it&amp;rsquo;s done! Verify with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anthropic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Badminton</title><link>https://perrotta.dev/2025/03/badminton/</link><pubDate>Fri, 28 Mar 2025 00:38:18 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/badminton/</guid><description>&lt;p>One of the coolest sports in the world I&amp;rsquo;ve become acquainted with is
&lt;a href="https://en.wikipedia.org/wiki/Badminton">Badminton&lt;/a>. In the beginning it is
quite odd to understand its finesse, but after a while it gets easily
internalized and becomes quite natural.&lt;/p>
&lt;p>You can play it in singles or in doubles. Arguably most of the fun happens when
playing in doubles. You&amp;rsquo;re supposed to develop synergy with your court partner
and understand their play style, and then adapt accordingly. The style need not
be immutable: it&amp;rsquo;s perfectly fine (and common, even) to change tactics as the
game progresses.&lt;/p>
&lt;p>I love how I can express myself freely in the court, whilst have little regard
to formal expectations. I can comfortably (and on-demand) change hands, jump,
squat, put either foot forward, serve the shuttle short or long, position myself
close to the center or close to the edge of the court, go left and right or
backwards and forward. The sky is the limit for freedom and creativity of
movements. It&amp;rsquo;s like a dance wherein you get fully immersed, borderline poetic.&lt;/p>
&lt;p>Few sports give you this much freedom to express yourself as you see fit.&lt;/p></description></item><item><title>Amphetamine: Keep awake</title><link>https://perrotta.dev/2025/03/amphetamine-keep-awake/</link><pubDate>Fri, 28 Mar 2025 00:14:32 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/amphetamine-keep-awake/</guid><description>&lt;p>&lt;a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The most awesome keep-awake app ever created for macOS. Amphetamine can keep
your Mac, and optionally its display(s), awake through a super simple on/off
switch, or automatically through easy-to-configure Triggers. Amphetamine is
extremely powerful and includes advanced features for those who need them, yet
remains intuitive and easy-to-use for those who don&amp;rsquo;t need all of the bells
and whistles.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s like &lt;a href="https://www.caffeine-app.net/">Caffeine&lt;/a> (or one of its dozen
clones), but better.&lt;/p>
&lt;p>Here&amp;rsquo;s how I use it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>on my personal laptop, whenever I am streaming a movie or a TV show (e.g. via
&lt;a href="https://jellyfin.org/">jellyfin&lt;/a>, so that it doesn&amp;rsquo;t cut off the streaming in
the middle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on my work computer, as soon as I start the work day, so that the VPN stays
connected for the whole day, as well as my SSH sessions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Upon launching it a system tray icon appears. A left-click opens up its
contextual menu, exposing lots of knobs and details. A right-click toggles it on
/ off.&lt;/p>
&lt;p>I configure the toggle so that it stays awake for a default of 4 hours for my
personal laptop, and 8-10 hours for my work computer (=the duration of an usual
work day).&lt;/p>
&lt;p>If you don&amp;rsquo;t specify a limit then it stays awake indefinitely, which is
counterproductive: (i) spending more energy and battery than necessary and (ii)
from an operational security perspective, it &lt;em>should&lt;/em> ideally self-lock at some
point, in case you forget to do so.&lt;/p>
&lt;p>I just care about keeping internet and sessions connectivity alive, but it&amp;rsquo;s
also possible to configure it to keep the display on.&lt;/p>
&lt;p>For bonus productivity, configure it to always launch at login, so that
activating it is just one (right) click away.&lt;/p>
&lt;p>Apparently I activated it more than 180 times in my personal laptop, effectively
keeping it awake for more than 24 days. At work, more than 250 sessions for more
than 8 days&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>When writing this post, I just learned that I can activate it via
&lt;a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can augment my &lt;a href="https://perrotta.dev/2024/10/prodaccess/">&lt;code>prodaccess&lt;/code>&lt;/a> script
with that.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>There is definitely something odd with these numbers.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Unemployment is not the problem</title><link>https://perrotta.dev/2025/03/unemployment-is-not-the-problem/</link><pubDate>Fri, 28 Mar 2025 00:09:38 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/unemployment-is-not-the-problem/</guid><description>&lt;p>&lt;a href="https://whynothugo.nl/journal/2025/03/27/unemployment-is-not-the-problem/">Unemployment is not the problem&lt;/a> by Hugo Barrera:&lt;/p>
&lt;blockquote>
&lt;p>Modern society faces a paradox: the more efficient we become, the fewer
workers we need to sustain ourselves. Yet we still demand that people work
long hours just to earn survival. If 50 people working full-time can produce
enough for 100, why do we deny the other 50 access to those goods—instead of
letting all 100 work half the hours and share the benefits?&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>But if we already produce enough, why must we keep labouring like we don&amp;rsquo;t?
The real disincentive is forcing unemployment on some while overworking others
in a system that, by its own efficiency, has made so many jobs unnecessary.&lt;/p>
&lt;p>The solution isn&amp;rsquo;t to invent useless busywork or cling to outdated 40-hour
weeks—it&amp;rsquo;s to distribute necessary labor fairly. A shorter work week wouldn&amp;rsquo;t
mean less gets done; it would mean what must get done is made by the work of
all, freeing time for life beyond work. The obstacle isn&amp;rsquo;t economics, but our
insistence that survival must be earned through toil, even when toil is no
longer needed.&lt;/p>
&lt;/blockquote>
&lt;p>We humans are little complicated beings.&lt;/p>
&lt;p>AI uprising or not, first we need to figure out ourselves.&lt;/p></description></item><item><title>pre-commit: make a hook opt-in</title><link>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</link><pubDate>Thu, 27 Mar 2025 13:22:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</guid><description>&lt;p>Recently we added the following hook to our &lt;a href="https://pre-commit.com">pre-commit&lt;/a>
setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be triggered with &lt;code>pre-commit run --all-files helm-lock&lt;/code>.&lt;/p>
&lt;p>It turned out to be an issue because not every developer has read-only access
to our helm repositories.&lt;/p>
&lt;p>The workaround was to make this hook opt-in.&lt;/p>
&lt;p>We can do so by adding it to the &lt;a href="https://pre-commit.com/#confining-hooks-to-run-at-certain-stages">manual stage&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - manual
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be then invoked like this: &lt;code>pre-commit run --all-files helm-lock --hook-stage manual&lt;/code>.&lt;/p>
&lt;p>An alternative could have been to instruct people to set
&lt;a href="https://pre-commit.com/#temporarily-disabling-hooks">&lt;code>SKIP=helm-lock&lt;/code>&lt;/a>, however
&lt;a href="https://world.hey.com/jason/software-defaults-15955a8e">defaults&lt;/a> are powerful.&lt;/p></description></item><item><title>1password CLI + direnv integration</title><link>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</link><pubDate>Wed, 26 Mar 2025 14:15:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</guid><description>&lt;p>Let&amp;rsquo;s stay you&amp;rsquo;re working on a terraform module that has a sensitive variable
named &lt;code>api_key&lt;/code> in &lt;code>variables.tf&lt;/code>.&lt;/p>
&lt;p>When running &lt;code>terraform apply&lt;/code>, you&amp;rsquo;ll need to supply its value. Every. Single.
Time.&lt;/p>
&lt;p>We can make it persistent by setting &lt;code>export TF_VAR_api_key={my value}&lt;/code>.
However this is only persistent within the current shell.&lt;/p>
&lt;p>To make it persistent across multiple sessions, create a &lt;code>.envrc&lt;/code> file at the
root module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">={&lt;/span>my value&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then source it: &lt;code>source ~/.envrc&lt;/code>. Now you have to source it every single time
you open a new shell.&lt;/p>
&lt;p>We can use &lt;a href="http://direnv.net/">&lt;code>direnv&lt;/code>&lt;/a> to do so automatically. It has been
&lt;a href="https://perrotta.dev/2022/01/direnv-automate-your-environment-variables/">previously covered&lt;/a>. But&amp;hellip;now we have
a secret stored as plain text in our filesystem.&lt;/p>
&lt;p>We could store it in a more secure place, like a password manager, and then have
a mechanism automatically fetch its value.&lt;/p>
&lt;h2 id="first-approach">First approach&lt;/h2>
&lt;p>When using 1Password, the &lt;a href="https://developer.1password.com/docs/cli/">1Password
CLI&lt;/a> is such a mechanism.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>op run --no-masking -- op &lt;span style="color:#e5c07b">read&lt;/span> &lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can fetch the secret reference path from 1Password:
&lt;a href="https://developer.1password.com/docs/cli/secret-references/">docs&lt;/a>. Click &amp;ldquo;Copy
Secret Reference&amp;rdquo; in the corresponding entry item.&lt;/p>
&lt;h2 id="second-approach">Second approach&lt;/h2>
&lt;p>The above is one possibility, and it works flawlessly, but there&amp;rsquo;s a second
approach that uses &lt;code>op run&lt;/code> alone with a secret reference that is dynamically
replaced.&lt;/p>
&lt;p>Create an &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the &lt;code>.envrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>terraform apply&lt;/code> via &lt;code>op run&lt;/code>, as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>op run --env-file&lt;span style="color:#56b6c2">=&lt;/span>.env -- terraform apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/">https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nshipster.com/1password-cli/">https://nshipster.com/1password-cli/&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Disclosing AI in pull requests</title><link>https://perrotta.dev/2025/03/disclosing-ai-in-pull-requests/</link><pubDate>Wed, 26 Mar 2025 13:07:52 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/disclosing-ai-in-pull-requests/</guid><description>&lt;p>As we start to draft more PRs with the help of AI, I am thinking to adopt a
subtle approach to signal that all (or most) of a given PR was created with the
help of AI.&lt;/p>
&lt;p>Perhaps by adding a &lt;code>:robot:&lt;/code> 🤖 emoji in the commit message.&lt;/p>
&lt;p>&lt;a href="https://api.github.com/emojis">GitHub Markdown&lt;/a> will happily render &lt;code>:robot:&lt;/code>.&lt;/p>
&lt;p>I could also add an &lt;a href="https://perrotta.dev/2025/03/create-a-git-commit-with-multiple-contributors/">attribution footer&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;#34;Co-authored-by: Claude &amp;lt;noreply@anthropic.com&amp;gt;&amp;#34;
&lt;/code>&lt;/pre>&lt;p>It&amp;rsquo;s just a bit more verbose.&lt;/p>
&lt;p>Have you thought about this?&lt;/p></description></item><item><title>Festering</title><link>https://perrotta.dev/2025/03/festering/</link><pubDate>Tue, 25 Mar 2025 16:53:10 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/festering/</guid><description>&lt;p>&lt;a href="https://joshuawold.com/lingering-emails/">Festering&lt;/a> by Joshua Wold (via &lt;a href="https://email-is-good.com/2025/03/24/festering/">Chris
Coyier&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>For at least the last fifteen years I&amp;rsquo;ve kept an inbox close to zero.
Currently I&amp;rsquo;m sitting at the supposedly magical number.&lt;/p>
&lt;p>I like it that way.&lt;/p>
&lt;p>But sometimes a few emails also start to linger. I like to think of them as
festering.&lt;/p>
&lt;p>I&amp;rsquo;m not clear on what action to take, not clear on the steps required, and
tend to stare at the emails dozens of times until I come to some resolution.&lt;/p>
&lt;/blockquote>
&lt;p>What does &amp;ldquo;festering&amp;rdquo; even mean?&lt;/p>
&lt;blockquote>
&lt;p>A fluid product of inflammation.&lt;/p>
&lt;/blockquote>
&lt;p>(via Wiktionary)&lt;/p>
&lt;p>The struggle never ends to those of us who practice Inbox Zero™. Nonetheless, it
feels oddly satisfying.&lt;/p></description></item><item><title>Slack emojis / Slackmojis</title><link>https://perrotta.dev/2025/03/slack-emojis-/-slackmojis/</link><pubDate>Tue, 25 Mar 2025 13:45:53 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/slack-emojis-/-slackmojis/</guid><description>&lt;p>&lt;a href="https://slackmojis.com/">Slackmojis&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>an unofficial* directory of the best custom Slack emojis&lt;/p>
&lt;/blockquote>
&lt;p>Of course this site must exist :partyparrot:&lt;/p></description></item><item><title>maccy: pin items</title><link>https://perrotta.dev/2025/03/maccy-pin-items/</link><pubDate>Mon, 24 Mar 2025 13:21:46 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/maccy-pin-items/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2023/12/maccy-macos-clipboard-manager/">Previously&lt;/a>.&lt;/p>
&lt;p>Sometimes it&amp;rsquo;s useful to have certain code snippets be easily accessible from
the clipboard manager.&lt;/p>
&lt;p>As I use &lt;a href="https://github.com/p0deje/Maccy">Maccy&lt;/a>, I figured I should leverage
its built-in pinning feature to do so.&lt;/p>
&lt;p>It&amp;rsquo;s not intuitive &lt;a href="https://github.com/p0deje/Maccy?tab=readme-ov-file#usage">how to do
it&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>first, focus an existing clipboard entry&lt;/li>
&lt;li>then press &lt;code>OPTION (⌥) + P&lt;/code> (&amp;ldquo;p&amp;rdquo; for &amp;ldquo;pinning&amp;rdquo;)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>The item will be moved to the top with a random but permanent keyboard
shortcut. To unpin it, press &lt;code>OPTION (⌥) + P&lt;/code> again.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Pros&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>no need to keep a text editor (or notes app) opened with temporary clipboard
contents to keep copying from (=less overhead)&lt;/li>
&lt;li>no need to keep digging the clipboard manager history to find the same entry
over and over again&lt;/li>
&lt;/ul>
&lt;p>This workflow is decent for temporary entries.
For semi-permanent ones, I should
look into &lt;a href="https://espanso.org/">Espanso&lt;/a> at some point. For now, &lt;a href="https://perrotta.dev/2025/01/raycast-snippets/">Raycast
Snippets&lt;/a> fills in this role.&lt;/p></description></item><item><title>It is as if you were on your phone</title><link>https://perrotta.dev/2025/03/it-is-as-if-you-were-on-your-phone/</link><pubDate>Fri, 21 Mar 2025 16:43:46 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/it-is-as-if-you-were-on-your-phone/</guid><description>&lt;p>&lt;a href="https://pippinbarr.com/it-is-as-if-you-were-on-your-phone/info/">It is as if you were on your phone&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Look at you! On your phone! But you&amp;rsquo;ve got a secret! And you won&amp;rsquo;t tell!
You&amp;rsquo;re not on your phone! It is only as if you were on your phone! You&amp;rsquo;re just
pretending to be on your phone! On your phone!&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>It is as if you were on your phone is an almost speculative game about an
incredibly near future in which &lt;strong>we&amp;rsquo;re all simultaneously under significant
pressure to be on our phones all the time, but also to not be on our phones
all the time&lt;/strong>. Our fingers want to touch the screen, our eyes want to watch the
surface, our brains want to be occupied efficiently and always. But it&amp;rsquo;s also
exhausting liking photos, swiping profiles, watching short-form video, and
everything else we&amp;rsquo;re always doing. It is as if you were on your phone
presents an alternative: pretend to be on your phone so that you pass as
human, but actually do essentially nothing instead. Follow the prompts and be
free.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>(emphasis mine)&lt;/em>&lt;/p>
&lt;p>Oh, man.&lt;/p></description></item><item><title>Hot sauce</title><link>https://perrotta.dev/2025/03/hot-sauce/</link><pubDate>Fri, 21 Mar 2025 16:40:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/hot-sauce/</guid><description>&lt;p>&lt;em>By far&lt;/em> the best &lt;em>hot sauce&lt;/em> I have tried is &lt;a href="https://www.amazon.de/-/en/Yucateco-Red-Habanero-Hot-Sauce/dp/B01NAY9XE3/ref=sr_1_28?crid=22TRFO98INDUY&amp;amp;qid=1741603677&amp;amp;sprefix=hot+sauce+mexi%2Caps%2C224&amp;amp;sr=8-28">El Yucateco Red
Habanero&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It&amp;rsquo;s a relatively unexpensive Mexican marvel.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>No affiliates.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>pre-commit: no-commit-to-branch hook</title><link>https://perrotta.dev/2025/03/pre-commit-no-commit-to-branch-hook/</link><pubDate>Fri, 21 Mar 2025 16:33:04 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-no-commit-to-branch-hook/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: prevent developers from committing directly to master (or
main) in git.&lt;/p>
&lt;p>You can do so server-side e.g. on GitHub via &lt;a href="https://stackoverflow.com/questions/46146491/prevent-pushing-to-master-on-github">branch protection
rules&lt;/a>.&lt;/p>
&lt;p>How to address it client-side though?&lt;/p>
&lt;p>Countless times have I accidentally committed to master locally without creating
a branch first, only to have &lt;code>git push&lt;/code> fail.&lt;/p>
&lt;p>I wanted &lt;code>git commit&lt;/code> to fail early – this is better than having &lt;code>git push&lt;/code> fail
later.&lt;/p>
&lt;p>&lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a> provides an out-of-the-box hook called
&lt;a href="https://github.com/pre-commit/pre-commit-hooks">&lt;code>no-commit-to-branch&lt;/code>&lt;/a>, which
addresses exactly this use case.&lt;/p>
&lt;p>I adopted it in our &lt;code>.pre-commit-config.yaml&lt;/code>. It worked as intended locally.&lt;/p>
&lt;p>There was a problem though: the pre-commit CI pipeline / workflow in main /
master would fail, because&amp;hellip;errrr, there&amp;rsquo;s a commit there. When you think of
it, it&amp;rsquo;s working as intended, even though it comes across as unexpected.&lt;/p>
&lt;p>The &lt;a href="https://github.com/antonbabenko/pre-commit-terraform/pull/748/">solution&lt;/a>:
skip the hook in CI. Which is also the &lt;a href="https://github.com/pre-commit/pre-commit-hooks/issues/954#issuecomment-1893632616">official
recommendation&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">SKIP&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>no-commit-to-branch pre-commit run
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wish this would be done out-of-the-box.&lt;/p></description></item><item><title>pre-commit: pin dependencies with --freeze</title><link>https://perrotta.dev/2025/03/pre-commit-pin-dependencies-with--freeze/</link><pubDate>Thu, 20 Mar 2025 18:12:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-pin-dependencies-with--freeze/</guid><description>&lt;p>&lt;strong>Today I learned&lt;/strong>: &lt;a href="https://pre-commit.com/#updating-hooks-automatically">&lt;code>pre-commit autoupdate&lt;/code>&lt;/a> has a
&lt;code>--freeze&lt;/code> option that replaces git tags with SHAs (hashes) on upstream hooks
(dependencies).&lt;/p>
&lt;p>Here&amp;rsquo;s how to adopt them, using this blog as an example:&lt;/p>
&lt;pre tabindex="0">&lt;code>% pre-commit autoupdate --jobs $(nproc) --freeze
[https://github.com/lalten/check-gha-pinning] updating v1.3.0 -&amp;gt; v1.3.0 (frozen)
[https://github.com/google/keep-sorted] updating v0.6.0 -&amp;gt; v0.6.0 (frozen)
[https://github.com/sirosen/texthooks] updating 0.6.8 -&amp;gt; 0.6.8 (frozen)
[https://github.com/google/yamlfmt] updating v0.16.0 -&amp;gt; v0.16.0 (frozen)
[https://github.com/pre-commit/pre-commit-hooks] updating v5.0.0 -&amp;gt; v5.0.0 (frozen)
[https://github.com/shssoichiro/oxipng] updating v9.1.3 -&amp;gt; v9.1.4 (frozen)
[https://github.com/codespell-project/codespell] updating v2.4.1 -&amp;gt; v2.4.1 (frozen)
[https://github.com/gitleaks/gitleaks] updating v8.23.3 -&amp;gt; v8.24.0 (frozen)
&lt;/code>&lt;/pre>&lt;p>The resulting diff (redacted one of the hooks for brevity):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>diff --git .pre-commit-config.yaml .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index 30aac4a2..841eac9b 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ .pre-commit-config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -23,7 +23,7 @@ repos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-hooks-apply
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-useless-excludes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/pre-commit/pre-commit-hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v5.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: cef0300fd0fc4d2a87a85fa2093c6b283ea36f4b # frozen: v5.0.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-executables-have-shebangs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>@@ -41,27 +41,27 @@ repos:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -D .codespell-dictionary.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - -I .codespell-ignore-words.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/gitleaks/gitleaks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v8.23.3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: f565e4e10c6c8081e374235bb4e4bcb8c0c2fa63 # frozen: v8.24.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: gitleaks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/google/keep-sorted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v0.6.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: df93c2722b6126556183749880f16a9beb664bb4 # frozen: v0.6.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: keep-sorted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/google/yamlfmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v0.16.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: ac76bb931851dda64a55ef746ca9b8bb41634b98 # frozen: v0.16.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: yamlfmt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/lalten/check-gha-pinning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v1.3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: 225deee5dff16fae532978007ce6e37045e14c68 # frozen: v1.3.0
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: check-gha-pinning
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/shssoichiro/oxipng
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: v9.1.3
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: bc8c36456858fe4678460bdea520a4ec0bc50dc4 # frozen: v9.1.4
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: oxipng
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - repo: https://github.com/sirosen/texthooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- rev: 0.6.8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ rev: 13a42592dd28b6b688bb1c23fa769234984d4ca7 # frozen: 0.6.8
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> hooks:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: fix-ligatures
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - id: fix-smartquotes
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is useful to mitigate supply-chain attacks such as the recent
&lt;a href="https://www.wiz.io/blog/github-action-tj-actions-changed-files-supply-chain-attack-cve-2025-30066">&lt;code>tj-actions/changed-files&lt;/code>&lt;/a>
one.&lt;/p></description></item><item><title>git: prefer switch over checkout</title><link>https://perrotta.dev/2025/03/git-prefer-switch-over-checkout/</link><pubDate>Thu, 20 Mar 2025 13:29:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/git-prefer-switch-over-checkout/</guid><description>&lt;p>&lt;a href="https://stackoverflow.com/questions/57265785/whats-the-difference-between-git-switch-and-git-checkout-branch#57266005">Preliminaries&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>What&amp;rsquo;s the difference between &amp;lsquo;git switch&amp;rsquo; and &amp;lsquo;git checkout&amp;rsquo; &lt;branch>?&lt;/p>
&lt;p>Git 2.23 introduces a new command &lt;code>git switch&lt;/code>. After reading the
documentation, it seems pretty much the same as &lt;code>git checkout &amp;lt;branchname&amp;gt;&lt;/code>.
What is the difference or use case?&lt;/p>
&lt;p>&lt;code>git switch&lt;/code> can now be used to change branches, as git checkout &lt;branchname>
does&lt;/p>
&lt;p>People are confused by these different ways to use git checkout, as you can
see from the many questions regarding git checkout here on Stack Overflow. Git
developers seem to have taken this into account.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://git-scm.com/docs/git-switch/2.23.0">&lt;code>git switch&lt;/code>&lt;/a> is the idiomatic way
to switch branches these days. &lt;code>git checkout&lt;/code> can be ambiguous; not only it
switches branches, it can also revert/reset files and directories.&lt;/p>
&lt;p>I unexpectedly hit this ambiguity today.&lt;/p>
&lt;p>I have this &lt;code>git bd&lt;/code> alias:&lt;/p>
&lt;pre tabindex="0">&lt;code>% grep -E &amp;#39;(bd|default\b)&amp;#39; ~/.gitconfig
 bd = !branch=&amp;#34;$(git branch --show-current)&amp;#34; &amp;amp;&amp;amp; git default &amp;amp;&amp;amp; git branch -D &amp;#34;${branch:-$1}&amp;#34;
 default = !git checkout main &amp;amp;&amp;gt;/dev/null || git checkout master
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;which is short for &amp;ldquo;branch delete&amp;rdquo;.&lt;/p>
&lt;p>&lt;strong>Example&lt;/strong>: I am working on branch &lt;code>thiagowfx/my-branch&lt;/code>, then the commit/PR is
eventually merged. My next action is &lt;code>git bd&lt;/code>, which a) switches to the default
branch (main or master these days) and b) deletes the previous branch.&lt;/p>
&lt;p>This works well most of the time.&lt;/p>
&lt;p>Today, when
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/81638">bumping&lt;/a>
the &lt;code>yamlfmt&lt;/code>
&lt;a href="https://pkgs.alpinelinux.org/package/edge/testing/x86_64/yamlfmt">package&lt;/a> for
Alpine Linux, I was in the &lt;code>yamlfmt&lt;/code> branch and then ran &lt;code>git bd&lt;/code>.&lt;/p>
&lt;p>That didn&amp;rsquo;t do anything. Here&amp;rsquo;s the problem:&lt;/p>
&lt;pre tabindex="0">&lt;code>% tree -L 1
.
├── CODINGSTYLE.md
├── COMMITSTYLE.md
├── README.md
├── community
├── main
├── scripts
└── testing
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;there&amp;rsquo;s a &lt;code>main/&lt;/code> directory in the repository root.&lt;/p>
&lt;p>Thus &lt;code>git default&lt;/code>, which calls &lt;code>git checkout main&lt;/code>, treats &lt;code>main&lt;/code> as a
directory in this context, instead of a branch.&lt;/p>
&lt;p>One solution is to call &lt;code>git checkout main --&lt;/code> instead, which explicitly denotes
&lt;code>main&lt;/code> as a branch&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. However, that&amp;rsquo;s hard to remember and it&amp;rsquo;s also
confusing. It&amp;rsquo;s easier to simply do &lt;code>git switch main&lt;/code>.&lt;/p>
&lt;p>So here&amp;rsquo;s my updated alias, which works as originally intended:&lt;/p>
&lt;pre tabindex="0">&lt;code>% grep -E &amp;#39;(bd|default\b)&amp;#39; ~/.gitconfig
 bd = !branch=&amp;#34;$(git branch --show-current)&amp;#34; &amp;amp;&amp;amp; git default &amp;amp;&amp;amp; git branch -D &amp;#34;${branch:-$1}&amp;#34;
 default = !git switch main &amp;amp;&amp;gt;/dev/null || git switch master
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>To explicitly denote it as a directory / file, call &lt;code>git checkout -- main&lt;/code>
instead. I use this variant often to revert file modifications back to the
original state.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>My packaging policy</title><link>https://perrotta.dev/2025/03/my-packaging-policy/</link><pubDate>Thu, 20 Mar 2025 13:10:52 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/my-packaging-policy/</guid><description>&lt;p>&lt;a href="https://whynothugo.nl/journal/2022/08/13/my-packaging-policy/">My packaging policy&lt;/a> by Hugo Osvaldo Barrera:&lt;/p>
&lt;blockquote>
&lt;p>The open source sphere has continuously had a lot of discussion regarding
packaging, and there&amp;rsquo;s often an expectation that upstream developers should
distribution packages. I want to make it clear where I stand on this, what
users of my projects can expect, and what how packagers can contribute.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Honestly, it&amp;rsquo;s usually too much work for me (an most upstream developers) to
provide these packages. I don&amp;rsquo;t use Debian and Fedora. I&amp;rsquo;m not familiar with
all the quirks of rpm and deb. Even if I take the time to build these, I&amp;rsquo;ll be
shipping a packages for platforms that I don&amp;rsquo;t use. There would be zero
quality control. And that additional work is not something for which I want to
sign up. I want to focus on maintaining upstream.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>That said, I&amp;rsquo;ve nothing against others packaging my tools for different
platforms. In fact, I encourage it! If someone with the right expertise wants
to build a Debian package for caffeine-ng, darkman, vdirsyncer or any other
project, I welcome the effort. My focus is on shipping releases ready to be
packaged, and let packagers do their jobs.&lt;/p>
&lt;p>Additionally, if any packager finds obstacles, or needs to apply patches for
code to build on a given platform, please open an issue (or send a patch). I
don&amp;rsquo;t mind giving guidance. But don&amp;rsquo;t expect me to know all the quirks of
every distribution.&lt;/p>
&lt;/blockquote>
&lt;p>As a packager myself, from my perspective, Hugo&amp;rsquo;s stance on the topic is the
most desirable possible.&lt;/p>
&lt;p>Working with upstream can sometimes drain your energy and motivation to
contribute. Having developers be open and friendly is one of the best ways to
ensure the gears of open source keep working smoothly.&lt;/p>
&lt;p>I wish we had less fragmentation. When you go to
&lt;a href="https://repology.org/">Repology&lt;/a> or &lt;a href="https://distrowatch.com/">DistroWatch&lt;/a>, it
feels so tiresome to see so many projects, distributions and package managers in
the wild. Diversity and choice are positive, but they come with a non-trivial
cost of reinventing the wheel and (re)doing everything over and over again. Life
is already short, and yet so much of it is spent repackaging the same software a
dozen times for a myriad of &lt;code>.deb&lt;/code> or &lt;code>.rpm&lt;/code> flavours, let alone all the indie /
independent ones. Politics yields a feedback loop that weakens open source and
unity.&lt;/p></description></item><item><title>npm: install before test</title><link>https://perrotta.dev/2025/03/npm-install-before-test/</link><pubDate>Wed, 19 Mar 2025 15:22:50 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/npm-install-before-test/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: &lt;code>npm test&lt;/code> does not automatically run &lt;code>npm install&lt;/code>.&lt;/p>
&lt;pre tabindex="0">&lt;code>% npm test
&amp;gt; dns-changer@1.0.0 test
&amp;gt; node --no-warnings --experimental-vm-modules node_modules/.bin/jest

node:internal/modules/cjs/loader:1408
 throw err;
 ^

Error: Cannot find module &amp;#39;er/aws/lambda/node_modules/.bin/jest&amp;#39;
 at Function._resolveFilename (node:internal/modules/cjs/loader:1405:15)
 at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)
 at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)
 at Function._load (node:internal/modules/cjs/loader:1215:37)
 at TracingChannel.traceSync (node:diagnostics_channel:322:14)
 at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)
 at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:151:5)
 at node:internal/main/run_main_module:33:47 {
 code: &amp;#39;MODULE_NOT_FOUND&amp;#39;,
 requireStack: []
}

Node.js v23.10.0
&lt;/code>&lt;/pre>&lt;p>We could address this with &lt;code>npm install &amp;amp;&amp;amp; npm test&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, but these are &lt;strong>two&lt;/strong>
commands. We &lt;a href="https://datatracker.ietf.org/doc/html/rfc2119">&lt;em>should&lt;/em>&lt;/a> be able
to do so with one shot.&lt;/p>
&lt;p>Apparently there&amp;rsquo;s &lt;a href="https://docs.npmjs.com/cli/v7/commands/npm-install-test">&lt;code>npm install-test&lt;/code>&lt;/a>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. It does
exactly what you would expect. &lt;strong>This is the preferred solution&lt;/strong>.&lt;/p>
&lt;p>Alternatively (and this was going to be my final solution):&lt;/p>
&lt;pre tabindex="0">&lt;code>% cat package.json
{
 &amp;#34;scripts&amp;#34;: {
 &amp;#34;pretest&amp;#34;: &amp;#34;npm install&amp;#34;,
 &amp;#34;test&amp;#34;: &amp;#34;[...]&amp;#34;
 }
}
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;then &lt;code>npm test&lt;/code> would invoke &lt;code>npm install&lt;/code> in advance.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Or, even better, &lt;code>npm ci &amp;amp;&amp;amp; npm test&lt;/code>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>There&amp;rsquo;s no &lt;code>npm ci-test&lt;/code>. Sorry to disappoint you.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>git freeze, git thaw</title><link>https://perrotta.dev/2025/03/git-freeze-git-thaw/</link><pubDate>Wed, 19 Mar 2025 13:27:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/git-freeze-git-thaw/</guid><description>&lt;p>Now I am becoming one of the snobs™ with the first sentence in the following
paragraph. Here we go.&lt;/p>
&lt;p>I had &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
write me a pair of &lt;code>git&lt;/code> utilities: &lt;code>git freeze&lt;/code> and &lt;code>git thaw&lt;/code>.&lt;/p>
&lt;p>First of all: &amp;ldquo;to thaw&amp;rdquo; means &amp;ldquo;to defrost&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>To change from a frozen solid to a liquid by gradual warming.&lt;/p>
&lt;/blockquote>
&lt;p>Perhaps &lt;code>git unfreeze&lt;/code> would have been more intuitive, let&amp;rsquo;s leave the
bikeshedding to another day though.&lt;/p>
&lt;p>What should these utilities do? They are inspired by the ones with the same name
in Chromium
&lt;a href="https://www.chromium.org/developers/how-tos/install-depot-tools/">depot_tools&lt;/a>.
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up">Direct
link&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-freeze.html">&lt;code>git-freeze(1)&lt;/code>&lt;/a>
allows you to put the current branch in &amp;lsquo;suspended animation&amp;rsquo; by committing
your changes to a specially-named commit on the top of your current branch.
When you come back to your branch later, you can just run
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/git-thaw.html">&lt;code>git-thaw(1)&lt;/code>&lt;/a>
to get your work-in-progress changes back to what they were.&lt;/p>
&lt;/blockquote>
&lt;p>Installing
&lt;a href="https://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools.html">&lt;code>depot_tools(7)&lt;/code>&lt;/a>
just to get these two utilities is too bloated though. The security software at
work flagged it as malware&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. And they didn&amp;rsquo;t even bother to package it for
Linux distributions in the first place.&lt;/p>
&lt;h2 id="git-freezehttpsgithubcomthiagowfxdotfilesblobmastergitbingit-freeze">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-freeze">&lt;code>git-freeze&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-freeze - Stage all files and create a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Stage all changes (tracked and untracked)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git add -A
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Create a commit with the freeze message&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>git commit -m &lt;span style="color:#98c379">&amp;#34;git-freeze&amp;#34;&lt;/span> -n
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze created successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git-thawhttpsgithubcomthiagowfxdotfilesblobmastergitbingit-thaw">&lt;a href="https://github.com/thiagowfx/.dotfiles/blob/master/git/.bin/git-thaw">&lt;code>git-thaw&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># git-thaw - Undo a git-freeze operation&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if we&amp;#39;re inside a git repository&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>git rev-parse --is-inside-work-tree 2&amp;gt;/dev/null&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> !&lt;span style="color:#56b6c2">=&lt;/span> &lt;span style="color:#98c379">&amp;#34;true&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Not in a git repository&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if there&amp;#39;s at least one commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git rev-parse --verify HEAD &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: No commits yet&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Check if the last commit is a git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> ! git log -n &lt;span style="color:#d19a66">1&lt;/span> --pretty&lt;span style="color:#56b6c2">=&lt;/span>%B | grep -q &lt;span style="color:#98c379">&amp;#34;^git-freeze&lt;/span>$&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Error: Last commit is not a git-freeze commit&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">exit&lt;/span> &lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Undo the git-freeze commit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">if&lt;/span> git rev-parse --verify HEAD^ &amp;gt;/dev/null 2&amp;gt;&amp;amp;1; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If there&amp;#39;s a parent commit, reset to it&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git reset &lt;span style="color:#98c379">&amp;#34;HEAD^&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># If it&amp;#39;s the initial commit, delete the reference and unstage everything&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git update-ref -d HEAD
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git restore --staged .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Git freeze thawed successfully&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="post-ai-cleanup">Post-AI cleanup&lt;/h2>
&lt;p>The only change I had to make was to add &lt;code>-n&lt;/code> to &lt;code>git commit&lt;/code> in &lt;code>git-freeze&lt;/code> so
that pre-commit hooks would be skipped upon freeze.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>Within an existing &lt;code>git&lt;/code> repository, do some work in a custom branch.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Decide that something else more important and/or urgent needs your attention.
Let go of &lt;a href="https://git-scm.com/docs/git-worktree">git worktrees&lt;/a> in this
instance.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git freeze&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Switch to a new branch. Do whatever. Done.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git checkout &amp;lt;your previous branch&amp;gt;&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>git thaw&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Resume your previous work. Profit.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Edit(2025-03-20)&lt;/strong>: A friend asked that is the difference between &lt;code>git freeze&lt;/code>
and &lt;code>git stash&lt;/code>. The main difference is that &lt;code>git stash&lt;/code> does not handle files
not yet tracked by &lt;code>git&lt;/code>, whereas &lt;code>git freeze&lt;/code> does. I think of &lt;code>freeze&lt;/code> as the
equivalent of completely clearing up my physical desk of all objects so that I
can focus on something else.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>&lt;em>An agentic coding tool made by Anthropic. Currently in beta as a research
preview.&lt;/em>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>In hindsight that&amp;rsquo;s not even surprising.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Terraform: rename resources</title><link>https://perrotta.dev/2025/03/terraform-rename-resources/</link><pubDate>Wed, 19 Mar 2025 11:40:43 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-rename-resources/</guid><description>&lt;p>Sometimes I need to make a simple refactoring rename change to a terraform
resource that has already been applied. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_api_gateway_request_validator&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;delete&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Validate body, query string parameters, and headers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rest_api_id&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_rest_api&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_body&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_parameters&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>to&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_api_gateway_request_validator&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Validate body, query string parameters, and headers&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rest_api_id&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_rest_api&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_body&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">validate_request_parameters&lt;/span> = &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The simplest way to do so is to &lt;code>terraform apply&lt;/code>. However, that incurs
destruction + re-creation of the resource, which would incur downtime in case
it&amp;rsquo;s already deployed in prod.&lt;/p>
&lt;p>The best way is &lt;code>% terraform state mv aws_api_gateway_request_validator.{delete,this}&lt;/code>. In-place move, simple and
easy.&lt;/p>
&lt;p>When doing it at scale, running multiple &lt;code>terraform state mv&lt;/code> commands could be
cumbersome.&lt;/p>
&lt;p>There&amp;rsquo;s a second way, using the
&lt;a href="https://developer.hashicorp.com/terraform/language/moved">&lt;code>moved&lt;/code>&lt;/a> block in HCL:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">moved&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">from&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_request_validator&lt;/span>.&lt;span style="color:#e06c75">delete&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">to&lt;/span> = &lt;span style="color:#e06c75">aws_api_gateway_request_validator&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Note&lt;/strong>: &lt;code>terraform&lt;/code> docs call this operation &amp;ldquo;move&amp;rdquo;, instead of &amp;ldquo;rename&amp;rdquo;.&lt;/p></description></item><item><title>Goodreads</title><link>https://perrotta.dev/2025/03/goodreads/</link><pubDate>Tue, 18 Mar 2025 17:53:54 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/goodreads/</guid><description>&lt;p>One of the most joyful aspects of using the internet is to &lt;del>stalk&lt;/del> keep track
of what my friends are reading online.&lt;/p>
&lt;p>Most of my bookworm friends have a &lt;a href="https://goodreads.com/">Goodreads&lt;/a> account,
including &lt;a href="https://www.goodreads.com/user/show/7873832-thiago">myself&lt;/a>.
I often find new book recommendations this way.&lt;/p></description></item><item><title>Friction</title><link>https://perrotta.dev/2025/03/friction/</link><pubDate>Tue, 18 Mar 2025 00:20:03 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/friction/</guid><description>&lt;p>&lt;a href="https://cassidoo.co/post/introduce-friction/">Cassidy Williams&lt;/a> – Introduce
Friction:&lt;/p>
&lt;blockquote>
&lt;p>Right now we live lives of incredible convenience. Everything that comes out
is designed to introduce more and more instant gratification. And that&amp;rsquo;s a
really nice thing… to a point.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>I see so many stories of people, daily, talking about how people (especially
students) today have worse and worse attention spans and patience than ever
before, and I think that&amp;rsquo;s the result of our world working as designed. We&amp;rsquo;ve
made people addicted to instantly getting the object they want, the food they
want, the information they want, the answers they want, to the point of them
not being willing to do their own research or wait just a bit longer for…
anything. We&amp;rsquo;re lazy about seeking answers and unhappy with having to wait for
results. We can&amp;rsquo;t be bored.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Anyway. I think we could all benefit from a bit more friction in our lives,
whether it&amp;rsquo;s via boycotting something, adding limits to something, cutting
something out entirely, or just stepping back before letting ourselves succumb
to the addictive feeds of the world. There&amp;rsquo;s strength in numbers, so if you
don&amp;rsquo;t mind the call to action: Let&amp;rsquo;s work on that, together!&lt;/p>
&lt;/blockquote>
&lt;p>There&amp;rsquo;s somewhat of a meta application here as well: blogging comes with its own
friction. It&amp;rsquo;s certainly harder than tweeting or posting a story or a status
update.&lt;/p></description></item><item><title>Micromarriages</title><link>https://perrotta.dev/2025/03/micromarriages/</link><pubDate>Mon, 17 Mar 2025 21:13:09 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/micromarriages/</guid><description>&lt;p>&lt;a href="https://rwblickhan.org/newsletters/micromarriages/">Russel Blickhan&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>In risk analysis, a one-in-a-million chance of death is called a micromort. A
skydiving jump, for instance, gives you 8 micromorts; you have about an
8-in-a-million chance of dying each time. The more jumps you do, the more
micromorts you accrue. If you&amp;rsquo;re going to be skydiving every week, then maybe
you shouldn&amp;rsquo;t also scale Everest, which is apparently 37,932 micromorts per
ascent.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Micromarriages are the same concept, applied to dating. Any given event gives
you some chance in a million of meeting a life partner. So, if you&amp;rsquo;re looking
for a life partner, you should optimize for micromarriages. Maybe swiping on a
dating app gets you one micromarriage per swipe. Maybe going to a party where
you don&amp;rsquo;t know anyone except the host gets you a few dozens micromarriages.
Actually going on a date has to be at least few hundred micromarriages.&lt;/p>
&lt;/blockquote>
&lt;p>That&amp;rsquo;s serendipity, in its simplest and purest form.&lt;/p>
&lt;p>Perhaps I should coin the term &lt;em>microserendipity&lt;/em> to denote &amp;ldquo;bits of
serendipity&amp;rdquo; according to a given event.&lt;/p>
&lt;blockquote>
&lt;p>You can intentionally increase your exposure to micromarriages. You should go
to that party where you don&amp;rsquo;t know anyone except the host, even if you don&amp;rsquo;t
really feel like it. You should try a new hobby where you&amp;rsquo;ll meet new people,
like improv or a run club. You should cultivate relationships with at least a
few socialites that will invite you to large events.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Most people overrate the number of micromarriages from dating apps and
underrate the number of micromarriages from in-person events. People you meet
in person already share some context — they&amp;rsquo;re at the same event, after all.
Starting a conversation in person pre-filters for whether you get along. This
doesn&amp;rsquo;t have to involve matchmaking by your friends; simply going to more
things in person will increase your micromarriages.&lt;/p>
&lt;/blockquote>
&lt;p>Some food for thought.&lt;/p>
&lt;p>Meanwhile, a friend recently introduced me to the concept of &lt;a href="https://en.wikipedia.org/wiki/Meet_cute">meet
cute&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A meet cute is a scene in media, in which two people meet for the first time,
typically under unusual, humorous, or cute circumstances, and go on to form a
future romantic couple.&lt;/p>
&lt;/blockquote></description></item><item><title>Terraform: create zip files</title><link>https://perrotta.dev/2025/03/terraform-create-zip-files/</link><pubDate>Mon, 17 Mar 2025 21:06:28 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-create-zip-files/</guid><description>&lt;p>When creating &lt;code>.zip&lt;/code> files with terraform, for example, with the purpose of
uploading them to an &lt;a href="https://aws.amazon.com/lambda/">AWS Lambda&lt;/a>, at least two
approaches exist to do so.&lt;/p>
&lt;p>In the examples below, assume a NodeJS source file named &lt;code>index.mjs&lt;/code>. It should
be packaged into a &lt;code>lambda.zip&lt;/code> archive.&lt;/p>
&lt;h2 id="1-use-null_resourcehttpsregistryterraformioprovidershashicorpnulllatestdocsresourcesresource">1) Use &lt;a href="https://registry.terraform.io/providers/hashicorp/null/latest/docs/resources/resource">&lt;code>null_resource&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;null_resource&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;build_lambda&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">triggers&lt;/span> = {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">filebase64sha256&lt;/span>(&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/index.mjs&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd"> provisioner&lt;/span> &lt;span style="color:#98c379">&amp;#34;local-exec&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">command&lt;/span> = &lt;span style="color:#56b6c2">&amp;lt;&amp;lt;EOF&lt;/span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> cd ${path.module}/lambda
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> zip -r lambda.zip index.mjs
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> &lt;/span>&lt;span style="color:#56b6c2">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_lambda_function&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">function_name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;dns-changer-delete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">role&lt;/span> = &lt;span style="color:#e06c75">aws_iam_role&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">arn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">filename&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">filebase64sha256&lt;/span>(&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">handler&lt;/span> = &lt;span style="color:#e5c07b">&amp;#34;index&lt;/span>.&lt;span style="color:#e06c75">handler&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> runtime = &amp;#34;&lt;/span>&lt;span style="color:#e06c75">nodejs22&lt;/span>.&lt;span style="color:#e06c75">x&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> depends_on = [null_resource.build_lambda]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="2-use-archive_filehttpsregistryterraformioprovidershashicorparchivelatestdocsresourcesfile">2) Use &lt;a href="https://registry.terraform.io/providers/hashicorp/archive/latest/docs/resources/file">&lt;code>archive_file&lt;/code>&lt;/a>&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-terraform" data-lang="terraform">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">data&lt;/span> &lt;span style="color:#98c379">&amp;#34;archive_file&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;lambda_zip&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span> = &lt;span style="color:#98c379">&amp;#34;zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_file&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/index.mjs&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">output_path&lt;/span> = &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">path&lt;/span>.&lt;span style="color:#e5c07b">module&lt;/span>&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">/lambda/lambda.zip&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">resource&lt;/span> &lt;span style="color:#98c379">&amp;#34;aws_lambda_function&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;this&amp;#34;&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">function_name&lt;/span> = &lt;span style="color:#98c379">&amp;#34;dns-changer-delete&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">description&lt;/span> = &lt;span style="color:#98c379">&amp;#34;Delete DNS record sets for DNS Changer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">role&lt;/span> = &lt;span style="color:#e06c75">aws_iam_role&lt;/span>.&lt;span style="color:#e06c75">this&lt;/span>.&lt;span style="color:#e06c75">arn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">filename&lt;/span> = &lt;span style="color:#e5c07b">data&lt;/span>.&lt;span style="color:#e06c75">archive_file&lt;/span>.&lt;span style="color:#e06c75">lambda_zip&lt;/span>.&lt;span style="color:#e06c75">output_path&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">source_code_hash&lt;/span> = &lt;span style="color:#e5c07b">data&lt;/span>.&lt;span style="color:#e06c75">archive_file&lt;/span>.&lt;span style="color:#e06c75">lambda_zip&lt;/span>.&lt;span style="color:#e06c75">output_base64sha256&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">handler&lt;/span> = &lt;span style="color:#e5c07b">&amp;#34;index&lt;/span>.&lt;span style="color:#e06c75">handler&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> runtime = &amp;#34;&lt;/span>&lt;span style="color:#e06c75">nodejs22&lt;/span>.&lt;span style="color:#e06c75">x&lt;/span>&lt;span style="color:#98c379">&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> depends_on = [data.archive_file.lambda_zip]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I prefer the second approach.&lt;/p>
&lt;p>Furthermore, it only requires one &lt;code>terraform apply&lt;/code> per file update, whereas
the first one requires two.&lt;/p></description></item><item><title>Terraform: generate diagrams</title><link>https://perrotta.dev/2025/03/terraform-generate-diagrams/</link><pubDate>Mon, 17 Mar 2025 13:42:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/terraform-generate-diagrams/</guid><description>&lt;p>There are a few options to visualize a &lt;code>terraform&lt;/code> module in the form of a graph
or diagram.&lt;/p>
&lt;h2 id="terraform-graph-dot--graphviz">&lt;code>terraform graph&lt;/code>: dot / graphviz&lt;/h2>
&lt;p>&lt;a href="https://developer.hashicorp.com/terraform/cli/commands/graph">&lt;code>terraform graph&lt;/code>&lt;/a> outputs a
&lt;a href="https://graphviz.org/doc/info/lang.html">DOT&lt;/a> graph, which can be manipulated /
visualized with &lt;code>graphviz&lt;/code>:&lt;/p>
&lt;pre tabindex="0">&lt;code>terraform graph | dot -Tpng &amp;gt; graph.png
&lt;/code>&lt;/pre>&lt;p>The graph can then be embedded into a markdown file:&lt;/p>
&lt;pre tabindex="0">&lt;code>% cat README.md
![graph](graph.png)
&lt;/code>&lt;/pre>&lt;h2 id="terramaid-mermaid">&lt;code>terramaid&lt;/code>: mermaid&lt;/h2>
&lt;p>The &lt;a href="https://github.com/RoseSecurity/Terramaid">&lt;code>terramaid&lt;/code>&lt;/a> project generates
&lt;a href="https://mermaid.js.org/">Mermaid&lt;/a> diagrams from Terraform configurations:&lt;/p>
&lt;pre tabindex="0">&lt;code>% brew install terramaid
% terramaid run --output README.md
Mermaid diagram successfully written to README.md
&lt;/code>&lt;/pre>&lt;p>The default filename is &lt;code>Terramaid.md&lt;/code>.&lt;/p>
&lt;p>Why use Mermaid? It was previously covered &lt;a href="https://perrotta.dev/2024/10/mermaid-rich-diagrams-in-markdown/">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>TL;DR&lt;/strong>: Mermaid has native integration with
&lt;a href="https://github.blog/developer-skills/github/include-diagrams-markdown-files-mermaid/">GitHub&lt;/a>
and &lt;a href="https://docs.gitlab.com/ee/user/markdown.html#mermaid">GitLab&lt;/a>, and that&amp;rsquo;s
hard to beat. Graphviz, sadly, &lt;a href="https://forum.graphviz.org/t/github-adding-support-for-mermaid-diagrams/998">does
not&lt;/a>.&lt;/p></description></item><item><title>Filling in the gaps of the internet</title><link>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</link><pubDate>Fri, 14 Mar 2025 16:12:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/filling-in-the-gaps-of-the-internet/</guid><description>&lt;p>&lt;a href="https://evanhahn.com/filling-in-the-gaps-of-the-internet/">Filling in the gaps of the internet&lt;/a> by Evan Hahn:&lt;/p>
&lt;blockquote>
&lt;p>Here&amp;rsquo;s a small philosophy I have about the internet:&lt;/p>
&lt;p>I believe that it&amp;rsquo;s my duty to publish the answer to previously-unanswered
questions. That way, the next person who comes along has an easier time.&lt;/p>
&lt;/blockquote>
&lt;p>Hell yes!&lt;/p>
&lt;blockquote>
&lt;p>For example, I was once trying to figure out how to skip the first line of a
CSV file in Python. When I did a web search for &amp;ldquo;python skip first line of
CSV&amp;rdquo;, I couldn&amp;rsquo;t find the answer.&lt;/p>
&lt;p>After a few minutes, I figured it out myself. Then, I wrote a &lt;a href="https://evanhahn.com/python-skip-header-csv-reader/">quick blog
post&lt;/a> explaining my
solution…and now it&amp;rsquo;s one of the most popular posts on my site! Even though
the post only took a few minutes to write, it&amp;rsquo;s been one of my most viewed
over the last decade, (presumably) because so many people are trying to do the
exact same thing.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://perrotta.dev/2025/02/crawling-/-indexing-is-wild/">Hell yes!&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Of course, this is a guideline, not a rule. Sometimes I don&amp;rsquo;t feel very
confident in my answer and don&amp;rsquo;t want to publish bogus information. Sometimes
I&amp;rsquo;m busy and don&amp;rsquo;t have time for a writeup, especially for more complex stuff.
And sometimes, nobody cares—how to compute a CRC32 checksum in Crystal has not
been a big hit; I might have wasted my time with that one.&lt;/p>
&lt;/blockquote>
&lt;p>And fair enough.&lt;/p>
&lt;p>Time is limited, after all.&lt;/p></description></item><item><title>YOLO: debug only after push</title><link>https://perrotta.dev/2025/03/yolo-debug-only-after-push/</link><pubDate>Fri, 14 Mar 2025 15:16:57 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/yolo-debug-only-after-push/</guid><description>&lt;p>Whenever writing new posts in this blog I rarely preview them in advance,
especially when they are short and simple&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>My rushed workflow is roughly:&lt;/p>
&lt;ul>
&lt;li>open a new terminal tab / window&lt;/li>
&lt;li>&lt;code>cd ~blog&lt;/code>&lt;/li>
&lt;li>&lt;code>just new &amp;quot;hello world&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>vim content/posts&lt;/code>, hit &amp;lsquo;G&amp;rsquo;, hit &amp;lsquo;k&amp;rsquo;, hit &amp;lsquo;ENTER&amp;rsquo;&lt;/li>
&lt;li>draft the post&lt;/li>
&lt;li>&lt;code>:Gwq&lt;/code> (&lt;a href="https://github.com/tpope/vim-fugitive">vim-fugitive&lt;/a>, &lt;code>git&lt;/code>
integration)&lt;/li>
&lt;li>&lt;code>git commit -m &amp;quot;new post: hello world&amp;quot;&lt;/code>&lt;/li>
&lt;li>&lt;code>git push&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;em>ONLY then&lt;/em>, &lt;code>just&lt;/code>, open web browser, see if it looks OK.&lt;/p>
&lt;p>Does it &lt;em>NOT&lt;/em> look OK (grammar errors, markdown issues, typos)? Make a quick
edit, &lt;code>:Gwq&lt;/code> again, &lt;code>git amend &amp;amp;&amp;amp; git push -f&lt;/code>.&lt;/p>
&lt;p>Normally this process happens faster than the CI pipeline takes to build and
subsequently publish the site.&lt;/p>
&lt;p>No AI involved™, not even a spellchecker&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Which is what I strive for most of the time anyways.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Not completely true:
&lt;a href="https://github.com/codespell-project/codespell">&lt;code>codespell&lt;/code>&lt;/a> is integrated
via &lt;a href="https://pre-commit.com/">pre-commit&lt;/a>. &lt;code>vim&lt;/code> has &lt;code>:set spell&lt;/code>. That&amp;rsquo;s
all though. There&amp;rsquo;s no &amp;ldquo;make this sound better&amp;rdquo; or &amp;ldquo;rewrite this more
professionally&amp;rdquo;. What you read is what comes straight off my brain.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>yaml: wrong new line character: expected \n</title><link>https://perrotta.dev/2025/03/yaml-wrong-new-line-character-expected-%5Cn/</link><pubDate>Fri, 14 Mar 2025 15:09:47 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/yaml-wrong-new-line-character-expected-%5Cn/</guid><description>&lt;p>Example upstream issue: &lt;a href="https://github.com/sbaudoin/sonar-yaml/issues/24">https://github.com/sbaudoin/sonar-yaml/issues/24&lt;/a>&lt;/p>
&lt;p>How to reproduce:&lt;/p>
&lt;ul>
&lt;li>start with a helm chart in a git repository: &lt;code>helm create foo&lt;/code>&lt;/li>
&lt;li>delete &lt;code>values.yaml&lt;/code>&lt;/li>
&lt;li>commit it, create a github PR&lt;/li>
&lt;li>realize that later on you need to create an empty &lt;code>values.yaml&lt;/code> file: &lt;code>touch values.yaml&lt;/code>&lt;/li>
&lt;li>commit it, push it&lt;/li>
&lt;li>realize that you need to add a comment to the YAML file&lt;/li>
&lt;li>use the github web UI to add a comment. Click edit, and add this comment:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Purposely empty for `ct lint`.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>commit it&lt;/li>
&lt;li>wait for CI checks to run&lt;/li>
&lt;li>&lt;a href="https://github.com/adrienverge/yamllint">&lt;code>yamllint&lt;/code>&lt;/a> will fail:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yaml: wrong new line character: expected \n
&lt;/code>&lt;/pre>&lt;p>This error can also be observed in &lt;code>vim&lt;/code> (with certain plug-ins).&lt;/p>
&lt;p>&lt;strong>What&amp;rsquo;s the issue?&lt;/strong> It&amp;rsquo;s a line ending problem: CR LF et al being different in
Windows vs Linux / macOS.&lt;/p>
&lt;p>&lt;strong>How to fix it?&lt;/strong> Run &lt;code>dos2unix values.yaml&lt;/code>, commit, profit.&lt;/p>
&lt;p>You can get &lt;code>dos2unix&lt;/code> e.g. via &lt;a href="https://brew.sh/">homebrew&lt;/a>.&lt;/p>
&lt;p>&lt;strong>What&amp;rsquo;s the lesson?&lt;/strong> Avoid the github web UI to edit files, even when in a
rush. ■&lt;/p></description></item><item><title>AWS IAM resources</title><link>https://perrotta.dev/2025/03/aws-iam-resources/</link><pubDate>Thu, 13 Mar 2025 15:30:10 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/aws-iam-resources/</guid><description>&lt;p>When working on Amazon Web Services (AWS), at some point you&amp;rsquo;ll need to fiddle
with &lt;a href="https://en.wikipedia.org/wiki/Identity_and_access_management">IAM&lt;/a>
(Identity and access management).&lt;/p>
&lt;p>It can be daunting to navigate the massive &lt;a href="https://docs.aws.amazon.com/iam/">AWS
Documentation&lt;/a>.&lt;/p>
&lt;p>I am collecting a couple of useful resources in this post.&lt;/p>
&lt;h2 id="permissions">Permissions&lt;/h2>
&lt;p>&lt;a href="https://aws.permissions.cloud/usage">https://aws.permissions.cloud/usage&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The aws.permissions.cloud website uses a variety of information gathered
within the &lt;a href="https://github.com/iann0036/iam-dataset">IAM Dataset&lt;/a> and exposes
that information in a clean, easy-to-read format.&lt;/p>
&lt;p>aws.permissions.cloud was built in order to provide an alternate,
community-driven source of truth for AWS identity.&lt;/p>
&lt;p>The website can be navigated using the left sidebar or by quickly looking up a
specific managed policy, IAM permission or API method in the top search bar.&lt;/p>
&lt;/blockquote>
&lt;p>For example, search for &amp;ldquo;route53&amp;rdquo; or for &amp;ldquo;s3&amp;rdquo;.&lt;/p>
&lt;p>The main goal of figuring out &lt;strong>permissions&lt;/strong> is to add them to a &lt;strong>policy&lt;/strong>.&lt;/p>
&lt;h2 id="policies">Policies&lt;/h2>
&lt;p>&lt;a href="https://aws.permissions.cloud/policyevaluator">https://aws.permissions.cloud/policyevaluator&lt;/a>:&lt;/p>
&lt;p>Use the Policy Evaluator to validate your &lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_resource.html">policy
JSON&lt;/a>.&lt;/p>
&lt;p>A policy associates permissions (actions) with resources (ARNs).&lt;/p>
&lt;blockquote>
&lt;p>Enter your IAM policy in the box below.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Statement&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Action&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;route53:ChangeResourceRecordSets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;Resource&amp;#34;&lt;/span>: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;arn:aws:route53:::hostedzone/01234567890123&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;arn:aws:route53:::hostedzone/01234567890124&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Each resource above represents a distinct &lt;a href="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/hosted-zones-working-with.html">hosted zone&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>A hosted zone is a container for records, and records contain information
about how you want to route traffic for a specific domain, such as
example.com, and its subdomains (acme.example.com, zenith.example.com). A
hosted zone and the corresponding domain have the same name. There are two
types of hosted zones: public and private.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Note&lt;/strong>: &lt;code>&amp;quot;Resource&amp;quot;&lt;/code> is singular but it accepts an array of ARNs as well.&lt;/p>
&lt;p>&lt;strong>Tip&lt;/strong>: Wildcards (&lt;code>'*'&lt;/code>) are accepted e.g. &lt;code>&amp;quot;arn:aws:route53:::hostedzone/*&amp;quot;&lt;/code>.&lt;/p>
&lt;h3 id="testing">Testing&lt;/h3>
&lt;p>Test out policies and permissions with the &lt;a href="https://policysim.aws.amazon.com/">IAM Policy
Simulator&lt;/a>. This service is provided by AWS
itself.
&lt;a href="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html">Docs&lt;/a>.&lt;/p>
&lt;h2 id="terraform">Terraform&lt;/h2>
&lt;p>Terraform Registry: &lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs">AWS Provider Docs&lt;/a>.&lt;/p></description></item><item><title>keep-sorted, with quotes</title><link>https://perrotta.dev/2025/03/keep-sorted-with-quotes/</link><pubDate>Thu, 13 Mar 2025 13:00:06 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/keep-sorted-with-quotes/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/keep-sorted/">keep-sorted&lt;/a> has been previously covered.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: how to automatically sort the following YAML list?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I would naturally add &lt;code>keep-sorted&lt;/code> to it, but the result is not what I expected:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Quotes are coming first!&lt;/p>
&lt;p>Which does indeed make sense. They are ASCII characters
(&lt;a href="https://man.archlinux.org/man/ascii.7">&lt;code>ascii(7)&lt;/code>&lt;/a>), value 34, which comes
before &lt;code>a-z&lt;/code>. Oh well.&lt;/p>
&lt;p>I tried &lt;code>ignore_prefixes=&amp;quot;&lt;/code> to no avail. I also tried &lt;code>by_regex=[\w-]+&lt;/code> to no
avail.&lt;/p>
&lt;p>Only the following form worked:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start by_regex=[&amp;#39;\w+[\w ]*&amp;#39;]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;but it&amp;rsquo;s a mouthful. I filed an upstream bug:
&lt;a href="https://github.com/google/keep-sorted/issues/76">https://github.com/google/keep-sorted/issues/76&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Edit(2025-01-04)&lt;/strong>: Thanks Ho Man for the following suggestion:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted start by_regex=\w+&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- azure-workload-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- clustermon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- flatfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- kube2iam
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- mongo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- node-local-dns
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;pgbouncer*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;rabbitmq*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#98c379">&amp;#34;redis*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- traefik
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- vault
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>commit, pre-commit, commit</title><link>https://perrotta.dev/2025/03/commit-pre-commit-commit/</link><pubDate>Wed, 12 Mar 2025 16:41:53 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/commit-pre-commit-commit/</guid><description>&lt;p>&lt;a href="https://en.wikipedia.org/wiki/Program_optimization">Premature optimization is the root of all
evil&lt;/a> but I run into this
almost every single day, it&amp;rsquo;s time to finally address it.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: When using &lt;a href="https://pre-commit.com/">pre-commit&lt;/a> with a
hook that will automatically fix an issue, the commit will fail the first time
it runs. This means I need to issue two &lt;code>git commit -a&lt;/code> commands in order to
effectively create a commit: the first one will trigger &lt;code>pre-commit run&lt;/code>, the
second one will add the changes / fixes done by it. The question is: how can I
merge these two steps into a single command?&lt;/p>
&lt;p>There are several ways to tackle this issue:&lt;/p>
&lt;ul>
&lt;li>create a custom shell script that does a double commit invocation&lt;/li>
&lt;li>create a &lt;code>git&lt;/code> alias that does a double commit invocation&lt;/li>
&lt;li>use a native shell solution&lt;/li>
&lt;/ul>
&lt;p>I am hesitant to pollute my dotfiles with more scripts, hence I&amp;rsquo;d rather find a
native shell solution.&lt;/p>
&lt;p>I came up with this very simple idea: since I use &lt;code>zsh&lt;/code>, leverage the &lt;a href="https://zsh.sourceforge.io/Doc/Release/Shell-Grammar.html">&lt;code>repeat&lt;/code>
built-in&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>repeat word do list done&lt;/p>
&lt;p>word is expanded and treated as an arithmetic expression, which must evaluate to a number n. list is then executed n times.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% repeat &lt;span style="color:#d19a66">2&lt;/span> git commit -a -m &lt;span style="color:#98c379">&amp;#34;feat: bootstrap time travel&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This only works iff I &lt;em>really&lt;/em> want to commit everything that is in the staging
area (the git index).&lt;/p></description></item><item><title>SAML Chrome Panel</title><link>https://perrotta.dev/2025/03/saml-chrome-panel/</link><pubDate>Wed, 12 Mar 2025 00:51:05 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/saml-chrome-panel/</guid><description>&lt;p>&lt;a href="https://chromewebstore.google.com/detail/saml-chrome-panel/paijfdbeoenhembfhkhllainmocckace">SAML Chrome Panel&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Extends the (Chrome) Developer Tools, adding support for SAML Requests and
Responses to be displayed in the Developer Tools window&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>This is an Open Source SAML debugger for Chrome. It operates as another panel
in the Chrome Developer Tools section, which monitors the traffic in the
current active tab. This panel is trying to replicate what the Firefox version
of SAML Tracer does as there wasn&amp;rsquo;t a good enough one (or any) for Chrome at
the time of writing this.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>It is designed to display all network traffic, along with the request and
response data. If there is a SAML request or response, then it will grab the
message, format it nicely and show it to you in another tab.&lt;/p>
&lt;/blockquote>
&lt;p>Upstream: &lt;a href="https://github.com/milton-lai/saml-chrome-panel">https://github.com/milton-lai/saml-chrome-panel&lt;/a>&lt;/p>
&lt;p>This Chrome extension has proven useful to me at least twice.&lt;/p>
&lt;p>Recently I was integrating &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD&lt;/a>
and &lt;a href="https://www.mongodb.com/atlas">MongoDB Atlas&lt;/a> with
&lt;a href="https://www.okta.com/">Okta&lt;/a>. You can do it via SAML or via OIDC.&lt;/p>
&lt;p>There&amp;rsquo;s always a chance of having one tiny configuration mistake, perhaps a
typo or a missing field. I found:&lt;/p>
&lt;ul>
&lt;li>ArgoCD: a typo in the callback URL (&lt;code>foo-foo&lt;/code> instead of &lt;code>foo&lt;/code>)&lt;/li>
&lt;li>MongoDB Atlas: an &lt;code>acsError&lt;/code> in the response
(&lt;a href="https://www.mongodb.com/community/forums/t/mongodb-atlas-okta-integration-login-error/230897">example&lt;/a>,
&lt;a href="https://www.mongodb.com/community/forums/t/sso-issue-with-idp-azure-entraid-okta-mongodb-saml/278500">example&lt;/a>):
&lt;a href="https://cloud.mongodb.com/okta/hooks/acsError">https://cloud.mongodb.com/okta/hooks/acsError&lt;/a>: it was a certificate error.
Instead of copying and pasting the certificate content (&lt;code>------ BEGIN CERTIFICATE ------&lt;/code>), upload the file directly. The
&lt;a href="https://www.mongodb.com/docs/cloud-manager/security/federated-auth-okta/">documentation&lt;/a>
(item &lt;code>1.h.&lt;/code>) notes so. Convert it to &lt;code>.pem&lt;/code> prior to uploading it.&lt;/li>
&lt;/ul></description></item><item><title>Have I Been Pwned?</title><link>https://perrotta.dev/2025/03/have-i-been-pwned/</link><pubDate>Tue, 11 Mar 2025 16:29:34 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/have-i-been-pwned/</guid><description>&lt;p>&lt;a href="https://haveibeenpwned.com/">Have I Been Pwned?&lt;/a> by the great &lt;a href="https://www.troyhunt.com/">Troy Hunt&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Check if your email address is in a data breach&lt;/p>
&lt;/blockquote>
&lt;h2 id="individual-sign-up">Individual sign-up&lt;/h2>
&lt;p>Sign up and then verify your email:&lt;/p>
&lt;blockquote>
&lt;p>You&amp;rsquo;ve just been sent a verification email, all you need to do now is confirm
your address by clicking on the link when it hits your mailbox and you&amp;rsquo;ll be
automatically notified of future pwnage. In case it doesn&amp;rsquo;t show up, check
your junk mail and if you still can&amp;rsquo;t find it, you can always repeat this
process.&lt;/p>
&lt;/blockquote>
&lt;p>The email:&lt;/p>
&lt;blockquote>
&lt;p>You (or possibly someone else), just subscribed &lt;code>{email}&lt;/code> to the
notification service that will automatically let you know if your address is
caught up in a future data breach. It&amp;rsquo;s a free service and you can unsubscribe
at any time if you don&amp;rsquo;t want the notifications.&lt;/p>
&lt;p>Just to confirm that you&amp;rsquo;re a real person behind a real email address, click
on the link below then you&amp;rsquo;ll be automatically subscribed to new breach
notifications where this email address has been pwned.&lt;/p>
&lt;/blockquote>
&lt;p>Then:&lt;/p>
&lt;blockquote>
&lt;p>Verification complete&lt;/p>
&lt;p>All done, you&amp;rsquo;ll be sent an email if this address gets pwned in future, below
is your existing exposure&lt;/p>
&lt;/blockquote>
&lt;p>There&amp;rsquo;s a lot of lore in the &lt;a href="https://www.goodreads.com/book/show/74960566-pwned---the-collected-blog-posts">PWNED - The Collected Blog
Posts&lt;/a>
book by Troy Hunt &amp;amp; Rob Conery, which I would recommend.&lt;/p>
&lt;h2 id="domain-sign-up">Domain sign-up&lt;/h2>
&lt;p>Furthermore, there&amp;rsquo;s also a domain search service:&lt;/p>
&lt;blockquote>
&lt;p>Search for pwned accounts across an entire domain and receive future
notifications.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Domain search allows you to find all breached email addresses on a domain you
control via a dedicated domain search dashboard. Once verified, you will also
receive notifications via email if they appear in future breaches. Before you
can perform a domain search, you need to verify your email address and that
you control the domains you&amp;rsquo;re searching. If you cannot verify that you
control a domain, you will not be able to search for breached email addresses
on it.&lt;/p>
&lt;/blockquote>
&lt;p>Upon signing up:&lt;/p>
&lt;blockquote>
&lt;p>Welcome to the Have I Been Pwned domain search&lt;/p>
&lt;p>You (or possibly someone else), just began the process to access the domain
search dashboard using the email address &lt;code>{email}&lt;/code>. Just to confirm
that you&amp;rsquo;re a real person behind a real email address, click on the link below
which will take you to the dashboard (the link will remain valid for 60
minutes).&lt;/p>
&lt;/blockquote>
&lt;p>Then you can choose a way to verify your domain:&lt;/p>
&lt;ul>
&lt;li>with a pre-defined address like &lt;code>security@&lt;/code> or &lt;code>webmaster@&lt;/code> or &lt;code>postmaster@&lt;/code>
or &lt;code>hostmaster@&lt;/code>&lt;/li>
&lt;li>with a DNS TXT record&lt;/li>
&lt;/ul>
&lt;p>When following the first route:&lt;/p>
&lt;blockquote>
&lt;p>An email containing a verification token has been sent off to the address you
chose, just copy and paste it into the text box below and you&amp;rsquo;ll be able to
perform the domain search right after that.&lt;/p>
&lt;/blockquote>
&lt;p>I was already familiar with the individual service, but only now discovered the
domain service, at work, by happenstance.&lt;/p></description></item></channel></rss>