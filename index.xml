<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>not just serendipity</title><link>https://perrotta.dev/</link><description>Recent content on not just serendipity</description><generator>Hugo</generator><language>en-us</language><copyright>Copyright © 2021 - 2025 [Thiago Perrotta](mailto:tbperrotta@gmail.com) · [RSS](/index.xml) · a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Sun, 22 Dec 2024 22:57:26 -0300</lastBuildDate><atom:link href="https://perrotta.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Stylometry</title><link>https://perrotta.dev/2024/12/stylometry/</link><pubDate>Sun, 22 Dec 2024 22:57:26 -0300</pubDate><guid>https://perrotta.dev/2024/12/stylometry/</guid><description>&lt;p>Jeff Kaufman&amp;rsquo;s &lt;a href="https://www.jefftk.com/p/good-reasons-for-alts">&amp;ldquo;Good Reasons for
Alts&amp;rdquo;&lt;/a> is a very insightful
read.&lt;/p>
&lt;p>Alt in this context stands for &amp;ldquo;alternate account&amp;rdquo;.&lt;/p>
&lt;p>Apparently there&amp;rsquo;s a whole ordeal dedicated to studying linguistic styles from
people in order to uniquely cluster / identify them, this is what
&lt;a href="https://en.wikipedia.org/wiki/Stylometry">stylometry&lt;/a> is.&lt;/p>
&lt;p>Like &lt;a href="https://www.jefftk.com/p/linking-alt-accounts">Jeff&lt;/a>, I agree that:&lt;/p>
&lt;blockquote>
&lt;p>(If you do want somewhat more protection now, however, I think best practice
is running your alt comments through an LLM to change the style.)&lt;/p></description></item><item><title>Digital mending circle</title><link>https://perrotta.dev/2024/12/digital-mending-circle/</link><pubDate>Sun, 22 Dec 2024 22:50:50 -0300</pubDate><guid>https://perrotta.dev/2024/12/digital-mending-circle/</guid><description>&lt;blockquote>
&lt;p>TIL what a digital mending circle is.&lt;/p>
&lt;/blockquote>
&lt;p>(&lt;a href="https://cdevroe.com/2024/12/17/8285/">via&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>What, you ask, is a digital mending circle? A virtual co-working session for
the kinds of oft-neglected maintenance tasks that accrue around our digital
lives. Instead of darning socks and patching jeans, we update personal
websites, delete unused accounts, work on side projects, or even just catch up
on email.&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been doing this ever since forever. December is always a great month to do
so, as it&amp;rsquo;s quiet and uneventful&amp;hellip;&lt;/p></description></item><item><title>New post workflow</title><link>https://perrotta.dev/2024/12/new-post-workflow/</link><pubDate>Sun, 22 Dec 2024 22:26:46 -0300</pubDate><guid>https://perrotta.dev/2024/12/new-post-workflow/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% just new &lt;span style="color:#e6db74">&amp;#34;post title&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>% vim content/posts/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Hit &amp;lsquo;G&amp;rsquo;, open up the post, it looks like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>title: &amp;#34;New post workflow&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>date: 2024-12-22T22:26:46-03:00
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tags:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> bestof★
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> dev
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> linux
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> macos
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> meta
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> portuguese
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> privacy
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> selfhosted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">-&lt;/span> serenity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>---
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Delete tags that are not applicable from the exhaustive list above. Most of the
time I&amp;rsquo;ll use &lt;code>dev&lt;/code>.&lt;/p>
&lt;p>Once it&amp;rsquo;s done, save the file with &lt;code>:Gwq&lt;/code> (&lt;a href="https://github.com/tpope/vim-fugitive">vim-fugitive&lt;/a>).&lt;/p></description></item><item><title>Link blogs</title><link>https://perrotta.dev/2024/12/link-blogs/</link><pubDate>Sun, 22 Dec 2024 22:16:59 -0300</pubDate><guid>https://perrotta.dev/2024/12/link-blogs/</guid><description>&lt;p>Simon Willison&amp;rsquo;s &amp;ldquo;My approach to running a link blog&amp;rdquo;
(&lt;a href="https://simonwillison.net/2024/Dec/22/link-blog/">via&lt;/a>):&lt;/p>
&lt;blockquote>
&lt;p>The point of that article was to emphasize that blogging doesn’t have to be
about unique insights. The value is in writing frequently and having something
to show for it over time—worthwhile even if you don’t attract much of an
audience (or any audience at all).&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>In that article I proposed two categories of content that are low stakes and
high value: things I learned and descriptions of my projects.&lt;/p></description></item><item><title>MBTI</title><link>https://perrotta.dev/2024/12/mbti/</link><pubDate>Sun, 22 Dec 2024 02:45:11 -0300</pubDate><guid>https://perrotta.dev/2024/12/mbti/</guid><description>&lt;p>&lt;a href="https://dynomight.net/mbti/">https://dynomight.net/mbti/&lt;/a> has the &amp;ldquo;fastest mbti test&amp;rdquo;.&lt;/p>
&lt;p>Indeed, it&amp;rsquo;s quite concise and minimalist.&lt;/p>
&lt;p>In case you are not familiar with it:&lt;/p>
&lt;blockquote>
&lt;p>Tendencies&lt;/p>
&lt;p>Introverts (I) direct their energy inwards, to ideas and thoughts. Extroverts (E) direct their energy outwards, towards people, things, and situations.
Sensing people (S) prefer tangible facts. Intuitive people (N) prefer abstractions and theories.
Feelers (F) look at situations through empathy for the people involved. Thinkers (T) look at situations from a more detached, logical viewpoint.
Judging people (J) prefer a planned and structured approach to life. Perceiving people (P) prefer to be more spontaneous.&lt;/p></description></item><item><title>★ Pre-commit</title><link>https://perrotta.dev/2024/12/pre-commit/</link><pubDate>Sat, 21 Dec 2024 23:24:23 -0300</pubDate><guid>https://perrotta.dev/2024/12/pre-commit/</guid><description>&lt;p>&lt;a href="https://pre-commit.com/">pre-commit&lt;/a> is a CI framework for &lt;code>git&lt;/code>.
For those who are used to google3 tooling: it&amp;rsquo;s akin to the configuration part of &lt;code>TAP Presubmit&lt;/code>.&lt;/p>
&lt;p>You can plug in linters, formatters, code analyzers&amp;hellip;pretty much any tool or binary that analyzes files, potentially emitting errors whenever style or policy violations occur, is a potential good fit for a pre-commit hook.&lt;/p>
&lt;p>Once properly configured the whole pipeline can be run locally with &lt;code>pre-commit run&lt;/code>. By default, only the stashed files are inspected. In order to consider every file in the repository, pass &lt;code>--all-files&lt;/code>. Modified files that were not yet &lt;code>git add&lt;/code>ed are not included.&lt;/p></description></item><item><title>★ Default apps 2024</title><link>https://perrotta.dev/2024/12/default-apps-2024/</link><pubDate>Sat, 21 Dec 2024 16:02:54 -0300</pubDate><guid>https://perrotta.dev/2024/12/default-apps-2024/</guid><description>&lt;p>The list of my default apps for this year.&lt;/p>
&lt;p>In the past I would maintain an &lt;a href="https://uses.tech/">&amp;ldquo;uses&amp;rdquo;&lt;/a> page in my blog, but I no longer believe in it.
User needs change all the time, and it&amp;rsquo;s a chore to keep them up-to-date.
People shouldn&amp;rsquo;t be defined by the software they use.&lt;/p>
&lt;p>That said, having a clean snapshot of the software I use at a fixed point in time isn&amp;rsquo;t a bad proposition.
It doesn&amp;rsquo;t need to be maintained.
I will probably look back at it within 5 years and laugh at myself for how many things changed.
And also for how many didn&amp;rsquo;t.&lt;/p></description></item><item><title>Reply to: I Hate the News</title><link>https://perrotta.dev/2024/12/reply-to-i-hate-the-news/</link><pubDate>Sat, 21 Dec 2024 01:44:16 -0300</pubDate><guid>https://perrotta.dev/2024/12/reply-to-i-hate-the-news/</guid><description>&lt;p>Link to the &lt;a href="http://www.aaronsw.com/weblog/hatethenews">original article&lt;/a> from
2006 from the late Aaron Swartz:&lt;/p>
&lt;blockquote>
&lt;p>Some people start their day by reading The New York Times. Others end it by
watching the nightly news. Some get it from The Daily Show. Others download it
from a variety weblogs. Some keep up-to-the-minute by following CNN. Others
have instant news updates automatically text messaged to their phone. But
everybody seems to agree: it’s a citizen’s responsibility to keep up with the
news. Everybody except me.&lt;/p></description></item><item><title>New theme: BearBlog</title><link>https://perrotta.dev/2024/12/new-theme-bearblog/</link><pubDate>Sat, 21 Dec 2024 01:30:10 -0300</pubDate><guid>https://perrotta.dev/2024/12/new-theme-bearblog/</guid><description>&lt;p>Inspired by &lt;a href="https://bearblog.dev/">Bear Blog&lt;/a>, via &lt;a href="https://sive.rs/now2">Derek
Sivers&lt;/a>, I updated my Hugo theme to resemble its looks and
simplicity.&lt;/p>
&lt;p>The base theme is &lt;a href="https://github.com/janraasch/hugo-bearblog/">hugo-bearblog&lt;/a>,
but I&amp;rsquo;ve overridden most of its files. I should probably fork it at some point.&lt;/p>
&lt;p>Side effect: no JS is served anymore. And it still scores
&lt;a href="https://pagespeed.web.dev/analysis/https-perrotta-dev/eyfna507jk?form_factor=desktop">100&lt;/a>
on lighthouse.&lt;/p></description></item><item><title>Advent of Code: Day 8</title><link>https://perrotta.dev/2024/12/advent-of-code-day-8/</link><pubDate>Fri, 20 Dec 2024 22:47:51 -0300</pubDate><guid>https://perrotta.dev/2024/12/advent-of-code-day-8/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/8">Day #8&lt;/a> puzzle.&lt;/p>
&lt;p>This is a problem in a 2D grid. I like to start by making a frequency map
(dictionary) from the frequencies to the coordinates where they occur:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python3" data-lang="python3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> collections &lt;span style="color:#f92672">import&lt;/span> defaultdict
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># {&amp;#39;0&amp;#39;: ((1,8), ...)}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>freq_map &lt;span style="color:#f92672">=&lt;/span> defaultdict(tuple)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">for&lt;/span> x, line &lt;span style="color:#f92672">in&lt;/span> enumerate(lines):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> y, field &lt;span style="color:#f92672">in&lt;/span> enumerate(line):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> field&lt;span style="color:#f92672">.&lt;/span>isalnum():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> freq_map[field] &lt;span style="color:#f92672">+=&lt;/span> ((x, y),)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then it&amp;rsquo;s just a matter of going through every coordinate pair for a given
frequency. &lt;code>combinations()&lt;/code> from &lt;code>itertools&lt;/code> is great for that:&lt;/p></description></item><item><title>hugo: merge two tags</title><link>https://perrotta.dev/2024/12/hugo-merge-two-tags/</link><pubDate>Fri, 20 Dec 2024 00:46:50 -0300</pubDate><guid>https://perrotta.dev/2024/12/hugo-merge-two-tags/</guid><description>&lt;p>So far I&amp;rsquo;ve been using the &lt;code>dev&lt;/code> and &lt;code>devops&lt;/code> tags pretty much interchangeably
(and inconsistently) in this blog. There&amp;rsquo;s no real difference: Dev and Ops work
overlap quite a lot. It&amp;rsquo;s time to do some house cleaning and merge them. I
choose &lt;code>dev&lt;/code> as it is more generic / agnostic.&lt;/p>
&lt;p>First step, use &lt;code>sed&lt;/code> to rename all &lt;code>devops&lt;/code> tags to &lt;code>dev&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ack -l -- &lt;span style="color:#e6db74">&amp;#34;^ - devops&amp;#34;&lt;/span> | xargs -n &lt;span style="color:#ae81ff">1&lt;/span> gsed -i -e &lt;span style="color:#e6db74">&amp;#39;s/^ - devops/ - dev/g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I use &lt;code>gsed&lt;/code>, the GNU flavour of &lt;code>sed&lt;/code>, in macOS via homebrew. This is necessary
because vanilla &lt;code>/usr/bin/sed&lt;/code> from macOS keeps littering my system with &lt;code>.-e&lt;/code>
files, the original files before inplace modification (&lt;code>-i&lt;/code>), whereas &lt;code>gsed&lt;/code>
doesn&amp;rsquo;t. It saves me from having to do &lt;code>rm **/*.-e&lt;/code> as an extra step.&lt;/p></description></item><item><title>git: push --force with style</title><link>https://perrotta.dev/2024/12/git-push--force-with-style/</link><pubDate>Fri, 20 Dec 2024 00:38:07 -0300</pubDate><guid>https://perrotta.dev/2024/12/git-push--force-with-style/</guid><description>&lt;p>TIL:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>git push --force&lt;/code>: This command forcefully pushes your changes to the remote
branch, even if it results in overwriting or losing commits. It does not
consider the current state of the remote branch. If someone else has pushed
changes to the same branch in the meantime, their changes will be lost.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>&lt;code>git push --force-with-lease&lt;/code>: This command is a safer alternative to git push
— force. It will only force push if the remote branch matches your
expectations. It checks if someone else has pushed changes to the branch in
the meantime. If the branch on the remote repository has not diverged (i.e.,
no new commits were pushed by others), your push will be allowed. If someone
else has pushed changes, the push will be rejected, ensuring you do not
accidentally overwrite someone else’s work.&lt;/p></description></item><item><title>Manage your Kindle library online</title><link>https://perrotta.dev/2024/12/manage-your-kindle-library-online/</link><pubDate>Thu, 19 Dec 2024 22:53:39 -0300</pubDate><guid>https://perrotta.dev/2024/12/manage-your-kindle-library-online/</guid><description>&lt;p>Managing your Kindle library from the ground up directly in your Kindle device
is very slow.&lt;/p>
&lt;p>Instead, do it
&lt;a href="https://www.amazon.ca/hz/mycd/digital-console/contentlist/allcontent/dateDsc">online&lt;/a>]&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>
via your web browser in a computer!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The link is for Amazon Canada 🇨🇦.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>pre-commit: create hooks for unsupported tools</title><link>https://perrotta.dev/2024/12/pre-commit-create-hooks-for-unsupported-tools/</link><pubDate>Tue, 17 Dec 2024 22:46:41 -0300</pubDate><guid>https://perrotta.dev/2024/12/pre-commit-create-hooks-for-unsupported-tools/</guid><description>&lt;p>When using &lt;a href="https://pre-commit.com/">pre-commit.com&lt;/a>, in an ideal world, every
formatter / linter / code analyzer would have a &lt;code>.pre-commit-config.yaml&lt;/code> file
in its repository root.&lt;/p>
&lt;p>In the real world, that&amp;rsquo;s not always the case.&lt;/p>
&lt;p>A recent example: &lt;a href="https://github.com/cloudflare/pint">cloudflare/pint&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Prometheus rule linter/validator&lt;/p>
&lt;/blockquote>
&lt;p>It is a golang binary that lints &lt;a href="https://prometheus.io/">prometheus&lt;/a> rules.&lt;/p>
&lt;p>Can we bridge the gap?&lt;/p>
&lt;p>The end goal is the ability to run &lt;code>pre-commit run --all-files pint&lt;/code> in our git
repository.&lt;/p>
&lt;p>For that, we&amp;rsquo;ll need to define a local / custom hook in our
&lt;code>~/.pre-commit-config.yaml&lt;/code>:&lt;/p></description></item><item><title>skopeo: operate container images and registries</title><link>https://perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/</link><pubDate>Tue, 17 Dec 2024 17:49:31 -0300</pubDate><guid>https://perrotta.dev/2024/12/skopeo-operate-container-images-and-registries/</guid><description>&lt;p>When working with &lt;code>docker&lt;/code> and private image registries, a common workflow is to copy images from one private registry in the cloud to another. This can be done with &lt;a href="https://github.com/containers/skopeo/">&lt;code>skopeo&lt;/code>&lt;/a>.&lt;/p>
&lt;p>This post includes some common recipes for it.&lt;/p>
&lt;h2 id="usage-1-default--root-to-staging">Usage 1) Default / Root to Staging&lt;/h2>
&lt;p>From the default / root account registry to the staging registry:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>skopeo sync &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --src-creds &lt;span style="color:#e6db74">&amp;#34;AWS:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>aws ecr get-login-password --region &lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span> --profile default&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --dest-creds &lt;span style="color:#e6db74">&amp;#34;AWS:&lt;/span>&lt;span style="color:#66d9ef">$(&lt;/span>aws ecr get-login-password --region &lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span> --profile staging&lt;span style="color:#66d9ef">)&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --override-os linux --override-arch amd64 &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> --src docker --dest docker &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">{&lt;/span>account_id_root&lt;span style="color:#f92672">}&lt;/span>.dkr.ecr.&lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span>.amazonaws.com/&lt;span style="color:#f92672">{&lt;/span>org&lt;span style="color:#f92672">}&lt;/span>/&lt;span style="color:#f92672">{&lt;/span>repository&lt;span style="color:#f92672">}&lt;/span>:&lt;span style="color:#f92672">{&lt;/span>tag&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ae81ff">&lt;/span> &lt;span style="color:#f92672">{&lt;/span>account_id_staging&lt;span style="color:#f92672">}&lt;/span>.dkr.ecr.&lt;span style="color:#f92672">{&lt;/span>region&lt;span style="color:#f92672">}&lt;/span>.amazonaws.com/&lt;span style="color:#f92672">{&lt;/span>org&lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example values&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p></description></item><item><title>Kubernetes: tail logs from pods with stern</title><link>https://perrotta.dev/2024/12/kubernetes-tail-logs-from-pods-with-stern/</link><pubDate>Tue, 17 Dec 2024 16:37:16 -0300</pubDate><guid>https://perrotta.dev/2024/12/kubernetes-tail-logs-from-pods-with-stern/</guid><description>&lt;p>You can always use &lt;code>kubectl logs -n {namespace} {pod} [-c {container}] -f&lt;/code> to
inspect logs from a specific pod&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>Nonetheless that doesn&amp;rsquo;t scale when you don&amp;rsquo;t know which pod you want in the
first place.&lt;/p>
&lt;p>You could start with deployments, dive into replica sets, and then into
individual pods, one by one, but&amp;hellip; that is tedious and slow.&lt;/p>
&lt;p>We can do better with &lt;a href="https://github.com/stern/stern">stern&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>⎈ Multi pod and container log tailing for Kubernetes&lt;/p></description></item><item><title>Kubernetes: debugging services</title><link>https://perrotta.dev/2024/12/kubernetes-debugging-services/</link><pubDate>Mon, 16 Dec 2024 10:14:11 -0300</pubDate><guid>https://perrotta.dev/2024/12/kubernetes-debugging-services/</guid><description>&lt;p>I am deploying a new helm chart to our staging environments, and needed a way to
ensure its dependencies in &lt;code>values.yaml&lt;/code> are properly configured.&lt;/p>
&lt;p>From the official kubernetes
&lt;a href="https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/">documentation&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>An issue that comes up rather frequently for new installations of Kubernetes
is that a Service is not working properly. You&amp;rsquo;ve run your Pods through a
Deployment (or other workload controller) and created a Service, but you get
no response when you try to access it. This document will hopefully help you
to figure out what&amp;rsquo;s going wrong.&lt;/p></description></item><item><title>★ Just</title><link>https://perrotta.dev/2024/12/just/</link><pubDate>Fri, 13 Dec 2024 01:16:41 -0300</pubDate><guid>https://perrotta.dev/2024/12/just/</guid><description>&lt;p>&lt;a href="https://github.com/casey/just">Just&lt;/a> is a command runner, a modern replacement
for GNU Make.&lt;/p>
&lt;p>It is written in Rust, has sensible defaults, and lots of syntactic sugar.
A good analogy is &lt;code>fish&lt;/code> versus &lt;code>bash&lt;/code> when comparing &lt;code>just&lt;/code> to &lt;code>make&lt;/code>.&lt;/p>
&lt;p>It&amp;rsquo;s very easy to learn from its
&lt;a href="https://github.com/casey/just?tab=readme-ov-file">README.md&lt;/a> alone as it&amp;rsquo;s
quite comprehensive. There&amp;rsquo;s also a &lt;a href="https://just.systems/man/en/">gitbook&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://til.simonwillison.net/django/just-with-django">Simon Willison&lt;/a> prompted
me to try it out.&lt;/p>
&lt;p>As an exercise I decided to convert the &lt;code>Makefile&lt;/code> used to manage this blog into
a &lt;code>Justfile&lt;/code>.&lt;/p></description></item><item><title>Advent of Code: Day 7</title><link>https://perrotta.dev/2024/12/advent-of-code-day-7/</link><pubDate>Thu, 12 Dec 2024 23:12:31 -0300</pubDate><guid>https://perrotta.dev/2024/12/advent-of-code-day-7/</guid><description>&lt;p>Link to &lt;a href="https://adventofcode.com/2024/day/7">Day #7&lt;/a> puzzle.&lt;/p>
&lt;p>Part one: dynamic programming!&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">calibrate_one&lt;/span>(test_value, operands):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@lru_cache&lt;/span>(maxsize&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">dp_calibrate&lt;/span>(acc, index):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> acc &lt;span style="color:#f92672">==&lt;/span> test_value &lt;span style="color:#f92672">and&lt;/span> index &lt;span style="color:#f92672">==&lt;/span> len(operands):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> acc &lt;span style="color:#f92672">&amp;gt;&lt;/span> test_value &lt;span style="color:#f92672">or&lt;/span> index &lt;span style="color:#f92672">==&lt;/span> len(operands):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> dp_calibrate(acc &lt;span style="color:#f92672">+&lt;/span> operands[index], index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#f92672">or&lt;/span> dp_calibrate(acc &lt;span style="color:#f92672">*&lt;/span> operands[index], index &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> dp_calibrate(operands[&lt;span style="color:#ae81ff">0&lt;/span>], &lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I learned this style from &lt;a href="https://neetcode.io/">NeetCode&lt;/a>. An inner function to
drive the memoization alongside &lt;code>lru_cache&lt;/code>. Beautiful!&lt;/p>
&lt;p>In my initial solution I passed the whole operands tuple as the second argument.
Later on I changed it to pass the current index in the tuple, which is simpler.&lt;/p></description></item><item><title>Advent of Code: discussion group</title><link>https://perrotta.dev/2024/12/advent-of-code-discussion-group/</link><pubDate>Thu, 12 Dec 2024 19:30:53 -0300</pubDate><guid>https://perrotta.dev/2024/12/advent-of-code-discussion-group/</guid><description>&lt;p>Assuming you are following this year&amp;rsquo;s advent of code, you are welcome to join
our Telegram discussion group &lt;a href="https://t.me/+mtPcW45EuFBjNGMx">here&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. It is
a supergroup, one of its channels is &lt;code>#adventofcode&lt;/code>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s a moderated group, and this invitation link will expire within 2
weeks of the time of this post.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item></channel></rss>