<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>¬ just serendipity 🍀</title><link>https://perrotta.dev/posts/</link><description>Recent content on ¬ just serendipity 🍀</description><generator>Hugo</generator><language>en-us</language><managingEditor>serendipity@perrotta.dev (Thiago Perrotta)</managingEditor><webMaster>serendipity@perrotta.dev (Thiago Perrotta)</webMaster><copyright>© 2021 - 2025 Thiago Perrotta ·
[some rights reserved](https://creativecommons.org/licenses/by-nc-sa/4.0/) ·
a fork of [hugo ʕ•ᴥ•ʔ bear](https://github.com/janraasch/hugo-bearblog/)</copyright><lastBuildDate>Fri, 16 May 2025 17:40:26 +0200</lastBuildDate><atom:link href="https://perrotta.dev/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Espanso: hello world</title><link>https://perrotta.dev/2025/05/espanso-hello-world/</link><pubDate>Fri, 16 May 2025 17:40:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/espanso-hello-world/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2025/03/maccy-pin-items/">Previously&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Sometimes it&amp;rsquo;s useful to have certain code snippets be easily accessible from
the clipboard manager.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>This workflow is decent for temporary entries. For semi-permanent ones, I
should look into &lt;a href="https://espanso.org/">Espanso&lt;/a> at some point. For now,
&lt;a href="https://perrotta.dev/2025/01/raycast-snippets/">Raycast Snippets&lt;/a> fills in this
role.&lt;/p>
&lt;/blockquote>
&lt;p>Today is the day!&lt;/p>
&lt;p>&lt;a href="https://espanso.org/">Espanso&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Supercharge your typing| experience.&lt;/p>
&lt;p>Tired of typing the same sentences over and over? Discover the incredible
power of a full-blown text expander.&lt;/p>
&lt;/blockquote>
&lt;p>So?&lt;/p>
&lt;blockquote>
&lt;p>How it works&lt;/p>
&lt;p>Espanso detects when you type a keyword&lt;/p>
&lt;p>Today is :date&lt;/p>
&lt;p>(becomes) Today is 05/16/2025&lt;/p>
&lt;p>and replaces it while you&amp;rsquo;re typing.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s just like &lt;a href="https://www.raycast.com/core-features/snippets">Text Expander&lt;/a>
from Raycast snippets.&lt;/p>
&lt;p>It&amp;rsquo;s available on all major OSes (Windows, Linux, macOS). I am testing it on
macOS. Installation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% brew install espanso
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After installing it and opening it, give it all sorts of System Accessibility
permissions so that it can perform its magic.&lt;/p>
&lt;p>This is just a &amp;ldquo;hello world&amp;rdquo; post, therefore I am not going to list every single
capability it has. Let&amp;rsquo;s just keep it simple and get our feet wet.&lt;/p>
&lt;p>I have to type &lt;code>helm ls -A --max 9999 | grep -i {release}&lt;/code> &lt;a href="https://perrotta.dev/2024/08/helm-list-all-installed-charts-in-the-cluster/">all the time&lt;/a>, and I&amp;rsquo;m fed
up with it.&lt;/p>
&lt;p>I want to create a &lt;code>:helm:ls&lt;/code> expansion that will trigger that command
expansion.&lt;/p>
&lt;p>Run &lt;code>espanso edit&lt;/code>. It opens a stock &lt;code>base.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># espanso match file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># For a complete introduction, visit the official docs at: https://espanso.org/docs/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># You can use this file to define the base matches (aka snippets)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># that will be available in every application when using espanso.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Matches are substitution rules: when you type the &amp;#34;trigger&amp;#34; string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># it gets replaced by the &amp;#34;replace&amp;#34; string.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">matches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Simple text replacement&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:espanso&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;Hi there!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># NOTE: espanso uses YAML to define matches, so pay attention to the indentation!&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># But matches can also be dynamic:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Print the current date&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:date&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;{{mydate}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: mydate
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span>: date
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">format&lt;/span>: &lt;span style="color:#98c379">&amp;#34;%m/%d/%Y&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># Print the output of a shell command&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:shell&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;{{output}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: output
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">type&lt;/span>: shell
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">params&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cmd&lt;/span>: &lt;span style="color:#98c379">&amp;#34;echo &amp;#39;Hello from your shell&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># And much more! For more information, visit the docs: https://espanso.org/docs/&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The file is self-contained and well-documented enough that I do not need to look
up any docs nor use AI to add the desired entry:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># [...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">matches&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># [...]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">trigger&lt;/span>: &lt;span style="color:#98c379">&amp;#34;:helm:ls&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">replace&lt;/span>: &lt;span style="color:#98c379">&amp;#34;helm ls --max 9999 -A | grep -i&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the file is saved, it&amp;rsquo;s magic ✨, and it takes effect immediately.&lt;/p>
&lt;p>Example usage&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>:helm:ls redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&amp;hellip;becomes:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>helm ls --max &lt;span style="color:#d19a66">9999&lt;/span> -A | grep -i redis
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For reference, this is the full path to the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% espanso edit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Editing file: /Users/thiago.perrotta/Library/Application Support/espanso/match/base.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I am particularly excited it&amp;rsquo;s YAML and it&amp;rsquo;s accessible in a stable location: it
should be quite easy to integrate it with my dotfiles later on.&lt;/p>
&lt;p>Its out-of-the-box usability (for developers who prefer text files) and
perceived speed are better than Raycast snippets.&lt;/p>
&lt;p>There are so many possibilities to explore: command &lt;del>espansions&lt;/del> expansions, LLM prompts,
email greetings, canned responses, and so on.&lt;/p>
&lt;p>For Raycast snippets I was using &lt;code>@@&lt;/code> as a prefix. Espanso seems to recommend
&lt;code>:&lt;/code>. Let&amp;rsquo;s see which one I will stick to.&lt;/p>
&lt;p>Also, I&amp;rsquo;d like to thank Farzad for the recommendation via email. It wasn&amp;rsquo;t the
first time I had heard about Espanso, but it has reinforced my desire to try it
out.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>In order to type a plain &lt;code>:helm:ls&lt;/code> without expansion (e.g. for this blog
post), type the folowing: &lt;code>:helm:l{left arrow}{right arrow}s&lt;/code>.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Stack Overflow is almost dead</title><link>https://perrotta.dev/2025/05/stack-overflow-is-almost-dead/</link><pubDate>Thu, 15 May 2025 23:14:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/stack-overflow-is-almost-dead/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2025/01/why-self-answer-questions-in-your-own-blog-instead-of-stack-overflow/">Previously&lt;/a>.&lt;/p>
&lt;p>&lt;a href="https://blog.pragmaticengineer.com/stack-overflow-is-almost-dead/">Stack overflow is almost dead&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> by Gergely Orosz:&lt;/p>
&lt;blockquote>
&lt;p>Four months ago, we asked Are LLMs making Stack Overflow irrelevant? Data at
the time suggested that the answer is likely &amp;ldquo;yes:&amp;rdquo;&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>Since then, things at Stack Overflow went from bad to worse. The volume of
questions asked has nearly dried up, new data shows:&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>This tallies with my memory of feeling that site moderators had gone on a
power trip by closing legitimate questions. I stopped asking questions around
this time because the site felt unwelcome.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>ChatGPT is faster and it&amp;rsquo;s trained on StackOverflow data, so the quality of
answers is similar. Plus, ChatGPT is polite and answers all questions, in
contrast to StackOverflow moderators.&lt;/p>
&lt;/blockquote>
&lt;p>A bit of politeness&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup> goes a long way, eh?&lt;/p>
&lt;p>Where do you ask novel questions these days?&lt;/p>
&lt;p>Stack Exchange is still my to-go site for that, but it&amp;rsquo;s starting to feel like a
ghost town. Oftentimes I end up self-answering my own question, because no one
else does. Nonetheless, I&amp;rsquo;d rather post on my blog if I know the answer in
advance. The reason to post on SE is when &lt;em>I don&amp;rsquo;t know&lt;/em>.&lt;/p>
&lt;p>It feels to me the best place to ask specific questions these days is wherever
the project is developed. GitHub or GitLab issues, Discourse (BBS / forums),
Discord&lt;sup id="fnref:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, Slack&amp;hellip;and so on. There&amp;rsquo;s a lot of fragmentation. Perhaps that&amp;rsquo;s
not too bad after all, but it incurs additional effort.&lt;/p>
&lt;p>And where to ask general questions? Reddit&lt;sup id="fnref1:3">&lt;a href="#fn:3" class="footnote-ref" role="doc-noteref">3&lt;/a>&lt;/sup>, the Fediverse™, social media,
project-agnostic chat platforms / communities&amp;hellip;&lt;/p>
&lt;p>Perhaps one day we&amp;rsquo;ll just be able to tell our LLM agents to go out there in the
dark corners of the Web&lt;sup id="fnref:4">&lt;a href="#fn:4" class="footnote-ref" role="doc-noteref">4&lt;/a>&lt;/sup> to ask a question for us.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I am (nit)picky. Gergely did &lt;strong>not&lt;/strong> capitalize &amp;ldquo;overflow&amp;rdquo;. &lt;em>This is plainly wrong&lt;/em>!!1! 🤷&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>🇨🇦&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:3">
&lt;p>Ewwww.&amp;#160;&lt;a href="#fnref:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&amp;#160;&lt;a href="#fnref1:3" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:4">
&lt;p>Will the Web even be alive by then?&amp;#160;&lt;a href="#fnref:4" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Nostalgia: The Linux Setup - Thiago Perrotta, Student</title><link>https://perrotta.dev/2025/05/nostalgia-the-linux-setup-thiago-perrotta-student/</link><pubDate>Thu, 15 May 2025 22:43:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/nostalgia-the-linux-setup-thiago-perrotta-student/</guid><description>&lt;p>Back in the (g)old(en) days&amp;hellip;in October 2014 I gave an interview to the blog
&amp;ldquo;Linux Rig&amp;rdquo; by &lt;a href="https://steven.ovadia.org/">Steven Ovadia&lt;/a>.&lt;/p>
&lt;p>The original interview was published at
&lt;code>https://linuxrig.com/2015/01/20/the-linux-setup-thiago-perrotta-student/&lt;/code>, but
the link no longer works. It&amp;rsquo;s purposely not hyperlinked because now it&amp;rsquo;s a
&lt;a href="https://en.wikipedia.org/wiki/Domain_parking">parked domain&lt;/a>.&lt;/p>
&lt;p>You can find the original at the &lt;a href="https://web.archive.org/web/20180527155224/https://linuxrig.com/2015/01/20/the-linux-setup-thiago-perrotta-student/">Web
Archive&lt;/a>.
I wanted to reproduce it here&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> for archiving purposes. All credits go to Steven
:)&lt;/p>
&lt;hr>
&lt;h2 id="the-linux-setup--thiago-perrotta-student">The Linux Setup – Thiago Perrotta, Student&lt;/h2>
&lt;p>Steven Ovadia – January 20th, 2015 – 0 Comments&lt;/p>
&lt;p>&lt;em>Thiago touches on a number of interesting points. For instance, he talks about
testing out new distributions and desktops to see what&amp;rsquo;s going on in Linux.
That&amp;rsquo;s something I kind of have to remind myself to do. Everything works well on
my main workhorse (knock wood…) so I have no natural desire to try out other
distributions and desktops. But I try and remember to give different things a
spin, just so I know if there&amp;rsquo;s something better out there, or if there&amp;rsquo;s
something I should steal for my own system. Finally, Thiago pays respect to his
package manager, which is super classy. Package managers are the unsung heroes
of most setups and without them, we&amp;rsquo;d probably have a rougher time trying new
things out.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can find more of The Linux Setup here.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can follow Linux Rig on Google+ here and follow me on Twitter here.&lt;/em>&lt;/p>
&lt;p>&lt;strong>1. Who are you, and what do you do?&lt;/strong>&lt;/p>
&lt;p>I am a Computer and Information Engineering student living in Rio de Janeiro,
Brazil. I usually use the &amp;rsquo;thiagowfx&amp;rsquo; nickname and I&amp;rsquo;d say I am a
free/open source software and community enthusiast. In particular, today I am an
active member of the Arch Linux community. I also have a blog where I write
about projects I&amp;rsquo;m currently working on and new technology and software I&amp;rsquo;m
trying out.&lt;/p>
&lt;p>&lt;strong>2. Why do you use Linux?&lt;/strong>&lt;/p>
&lt;p>Questions we are passionate about are the hardest to answer. But hey, today I&amp;rsquo;d say I use Linux for at least for three reasons (not in any particular order):&lt;/p>
&lt;ul>
&lt;li>community: it is very hard to find a diverse and rich community such as the
GNU/Linux one;&lt;/li>
&lt;li>open source software: this is very important and includes implications on
philosophy and programming (e.g., pull requests);&lt;/li>
&lt;li>package managers!&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>3. What distribution do you run on your main desktop/laptop?&lt;/strong>&lt;/p>
&lt;p>For a long time, on a monthly basis, I was always switching distributions.
However, during the last year I discovered the one I most enjoy today: Arch
Linux. It is a very customizable, follows KISS (&amp;lsquo;Keep it Short &amp;amp; Simple&amp;rsquo;) and is
a user-centered distro, with a very nice and intelligent community. I still test
the latest improvements of other Linux distributions every now and then, even
though this is less frequent today.&lt;/p>
&lt;p>&lt;strong>4. What desktop environment do you use and why do you use it?&lt;/strong>&lt;/p>
&lt;p>I am always switching desktop environments, mainly because I like to keep up to
date with the latest improvements on the Linux desktop (as with distros).
However, I&amp;rsquo;d say the two I use and like most are Cinnamon and i3. Usually I use
Cinnamon at home and i3 elsewhere (when I don&amp;rsquo;t have a mouse with me).&lt;/p>
&lt;p>&lt;strong>5. What one piece of software do you depend upon with this distribution? Why is it so important?&lt;/strong>&lt;/p>
&lt;p>Package manager: it is the piece of software I most value. I don&amp;rsquo;t know how to
live without one anymore. In particular, pacman is my preferred one. Now, if you
were referring to end-user software, I have no doubt that Emacs is the software
I most use today, although I am giving Vim a try. However, I&amp;rsquo;m not dependent of
any software in particular; each task has its own needs.&lt;/p>
&lt;p>&lt;strong>6. What kind of hardware do you run this setup on?&lt;/strong>&lt;/p>
&lt;p>Currently I have a Lenovo Ideapad S400U Ultrabook, which has an Intel Core i5
processor, 4GB RAM and an Intel Graphics HD 4000 graphics card. It
supports Linux pretty well and out-of-the-box with Intel open source drivers. It
has a small SSD (32GB) where I keep the root partition of whichever Linux
distribution I&amp;rsquo;m using at the moment, and a 500GB HDD where I keep my /home and
an alternate Linux distro.&lt;/p>
&lt;p>&lt;strong>7. Will you share a screenshot of your desktop?&lt;/strong>&lt;/p>
&lt;p>As I&amp;rsquo;ve said, I&amp;rsquo;m always switching desktop environments. However, I keep an
album on Flickr with my latest screenshots. This is the last one I
took, on Arch Linux, with KDE 4.14.&lt;/p>
&lt;p>&lt;em>Interview conducted October 5, 2014&lt;/em>&lt;/p>
&lt;hr>
&lt;p>&lt;em>&lt;strong>The Linux Setup&lt;/strong> is a feature where I interview people about their Linux
setups. The concept is borrowed, if not outright stolen, from this site. If
you&amp;rsquo;d like to participate, drop me a line.&lt;/em>&lt;/p>
&lt;p>&lt;em>You can follow Linux Rig on Google+ here, follow me on Twitter here, and subscribe to the feed here.&lt;/em>&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The reproduction was done verbatim, with the exception of hyperlinks.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Cursor</title><link>https://perrotta.dev/2025/05/cursor/</link><pubDate>Thu, 15 May 2025 15:18:53 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/cursor/</guid><description>&lt;p>Meanwhile, in a conversation with a coworker&amp;hellip;&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>Me&lt;/strong>: My &lt;em>aha!&lt;/em> moment from this week was to use
&lt;a href="https://cline.bot/">Cline&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> with this new &amp;ldquo;Use the browser&amp;rdquo; integration.
It opens an embedded web browser within its pane and starts to use the cursor
to click around.&lt;/p>
&lt;p>&lt;strong>Coworker&lt;/strong>: &lt;a href="https://www.cursor.com/">Cursor&lt;/a>&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>, the IDE?&lt;/p>
&lt;p>&lt;strong>Me&lt;/strong>: Nooo, I mean, the mouse cursor, the pointer.&lt;/p>
&lt;/blockquote>
&lt;p>I was waiting for this moment when the overloaded &amp;ldquo;Cursor&amp;rdquo; term would become
ambiguous. It&amp;rsquo;s just somewhat of a funny coincidence that it appeared in the
context of one of its main competitors.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Cline: &lt;em>an AI-powered coding assistant that runs in VS Code&lt;/em>&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Cursor: &lt;em>the AI Code Editor&lt;/em>&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Github: dependabot: group updates</title><link>https://perrotta.dev/2025/05/github-dependabot-group-updates/</link><pubDate>Wed, 14 May 2025 15:08:40 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/github-dependabot-group-updates/</guid><description>&lt;p>&lt;a href="https://docs.github.com/en/code-security/getting-started/dependabot-quickstart-guide">dependabot&lt;/a>
supports
&lt;a href="https://docs.github.com/en/code-security/dependabot/working-with-dependabot/dependabot-options-reference#groups--">grouping&lt;/a>
commits into fewer, targeted pull requests.&lt;/p>
&lt;p>A recent example in the repository of this blog:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>% git show
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>commit 1fa93bed4d0faa9dfcdd6e554201d708baa38dbb (HEAD -&amp;gt; master, origin/master, origin/HEAD)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Author: Thiago Perrotta &amp;lt;tbperrotta@gmail.com&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Date: Wed May 14 15:08:23 2025 +0200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> group dependabot updates
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>diff --git .github/dependabot.yml .github/dependabot.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index d6ca206c..3a5d1b09 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- .github/dependabot.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ .github/dependabot.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -4,7 +4,15 @@ updates:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> directory: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schedule:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> interval: monthly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ groups:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ all:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ patterns:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ - &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> - package-ecosystem: github-actions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> directory: /
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> schedule:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> interval: monthly
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ groups:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ all:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ patterns:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ - &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is better for my workflow because then I will have less pull requests to
deal with at once, instead of having to review them one by one for each
individual github action or git submodule bump.&lt;/p></description></item><item><title>VSCode: Github Pull Requests plug-in: collapse all comments by default</title><link>https://perrotta.dev/2025/05/vscode-github-pull-requests-plug-in-collapse-all-comments-by-default/</link><pubDate>Wed, 14 May 2025 14:40:34 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/vscode-github-pull-requests-plug-in-collapse-all-comments-by-default/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: I am constantly annoyed at opening files in VSCode with
PR comments being automatically expanded by default and occupying precious real
estate. Get rid of these comments!&lt;/p>
&lt;p>&lt;a href="https://github.com/Microsoft/vscode-pull-request-github/issues/665">Github
issue&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>From your user settings with &lt;code>&amp;quot;githubPullRequests.commentExpandState&amp;quot;&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>I added the following to my &lt;code>settings.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;githubPullRequests.commentExpandState&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;collapseAll&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>How to file a great feature request</title><link>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</link><pubDate>Wed, 14 May 2025 13:46:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/how-to-file-a-great-feature-request/</guid><description>&lt;p>Obviously I&amp;rsquo;m biased to say this but I have just
&lt;a href="https://github.com/gruntwork-io/pre-commit/issues/130">filed&lt;/a> a high-quality
feature request for a software project I am interested to adopt. What makes it
great™:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>describe &lt;strong>concisely&lt;/strong> and &lt;strong>precisely&lt;/strong> &lt;strong>what&lt;/strong> you&amp;rsquo;re looking for&lt;/p>
&lt;ul>
&lt;li>being concise is essential: we live in a fast-paced world. If no one looks
at your FR, then it won&amp;rsquo;t move forward. Period.&lt;/li>
&lt;li>being precise (unambiguous) is important to avoid back-and-forth and
potential bikeshedding&lt;/li>
&lt;li>I prefer to write it using my own words. Using an LLM risks making your FR
robotic and unappealing for anyone to consider. YMMV.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>describe &lt;strong>why&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>what is the &lt;em>raison d&amp;rsquo;être&lt;/em> of the feature? What is the rationale behind it?
How does it make the project better? How does it improve the developer
experience?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>(&lt;em>optional&lt;/em>, but &lt;strong>highly recommended&lt;/strong>) suggest &lt;strong>how&lt;/strong> and offer to address it&lt;/p>
&lt;ul>
&lt;li>Everyone wants everything, but few people want to put in the effort to see
changes take place. Your FR has a much higher chance of becoming reality if
you volunteer your time, effort and expertise to implement the feature
yourself, rather than &lt;a href="https://xkcd.com/2347/">demanding&lt;/a> someone (likely an
unpaid volunteer) to do so for you.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>In my experience it&amp;rsquo;s better to file an issue / ticket / FR first, &lt;strong>prior to&lt;/strong>
sending a pull request. You &lt;em>cannot&lt;/em> know in advance whether the FR is welcome
by the project or its maintainers. Sending in a PR just to see its underlying
&lt;em>raison d&amp;rsquo;être&lt;/em> be rejected is a waste of time, besides being a frustrating
experience.&lt;/p>
&lt;p>Furthermore, the ticket doubles-down as documentation for the PR description /
commit message in the future, should the FR be accepted. The small overhead of
time to file a ticket is a reasonable trade-off.&lt;/p>
&lt;p>Now, even if your FR is great and very reasonable&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>, there&amp;rsquo;s absolutely no
guarantee:&lt;/p>
&lt;ul>
&lt;li>you will even get a reply in the first place&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>&lt;/li>
&lt;li>back-and-forth chatter will be quick and responsive&lt;/li>
&lt;li>the maintainers / developers will agree with your sense of &amp;lsquo;usefulness&amp;rsquo;&lt;/li>
&lt;li>the maintainers / developers will agree with &lt;em>how&lt;/em> you believe it should be
tackled or implemented&lt;/li>
&lt;li>your follow-up PR will even be reviewed and, let alone, merged&lt;/li>
&lt;li>your merged PR will make it into a new point release&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Life is hard&lt;/em>. Nonetheless, do not give up! Open source software is beautiful
and serendipitous. :)&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>It&amp;rsquo;s a subjective matter.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Sometimes it takes &lt;a href="https://github.com/funtoo/keychain/issues/119">more than 3
years&lt;/a>.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Logseq: open page in sidebar</title><link>https://perrotta.dev/2025/05/logseq-open-page-in-sidebar/</link><pubDate>Wed, 14 May 2025 00:31:30 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/logseq-open-page-in-sidebar/</guid><description>&lt;p>To open a page in the sidebar in &lt;a href="https://logseq.com/">Logseq&lt;/a>, hold Shift +
click the &lt;code>[[page]]&lt;/code> / &lt;code>#page&lt;/code> link.&lt;/p>
&lt;p>Pages can be stacked in the sidebar, à la &lt;a href="https://dwm.suckless.org/">dwm&lt;/a>.&lt;/p></description></item><item><title>Slack: Github bot: post notifications</title><link>https://perrotta.dev/2025/05/slack-github-bot-post-notifications/</link><pubDate>Mon, 12 May 2025 11:51:18 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/slack-github-bot-post-notifications/</guid><description>&lt;p>Assume your organization has the &lt;a href="https://github.com/integrations/slack">Github
bot&lt;/a> integrated with Slack, and it&amp;rsquo;s
already properly configured.&lt;/p>
&lt;p>Assume you have a channel called &lt;code>#team-reviews&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: subscribe the github repository &lt;code>my-org/my-repo&lt;/code> to post
updates to that channel.&lt;/p>
&lt;p>As per the
&lt;a href="https://github.com/integrations/slack?tab=readme-ov-file#subscribing-and-unsubscribing">documentation&lt;/a>,
use the &lt;code>/subscribe&lt;/code> and &lt;code>/unsubscribe&lt;/code> commands. Send them in the
&lt;code>#team-reviews&lt;/code> channel:&lt;/p>
&lt;pre tabindex="0">&lt;code>/github subscribe my-org/my-repo
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>✅ Subscribed to my-org/my-repo. This channel will receive notifications for
&lt;code>issues&lt;/code>, &lt;code>pulls&lt;/code>, &lt;code>commits&lt;/code>, &lt;code>releases&lt;/code>, &lt;code>deployments&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>In case you wish to subscribe to only pull requests and commits, follow up with:&lt;/p>
&lt;pre tabindex="0">&lt;code>/github unsubscribe my-org/my-repo issues,releases,deployments
&lt;/code>&lt;/pre>&lt;blockquote>
&lt;p>✅ Subscribed to my-org/my-repo. This channel will receive notifications for
&lt;code>pulls&lt;/code>, &lt;code>commits&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>Repeat for as many repositories as needed.&lt;/p></description></item><item><title>Kagi: Small Web</title><link>https://perrotta.dev/2025/05/kagi-small-web/</link><pubDate>Sat, 10 May 2025 18:24:21 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/kagi-small-web/</guid><description>&lt;p>&lt;a href="https://help.kagi.com/kagi/company/">Kagi&lt;/a> is a paid search engine.&lt;/p>
&lt;p>The &lt;a href="https://blog.kagi.com/small-web">Kagi Small Web&lt;/a> is:&lt;/p>
&lt;blockquote>
&lt;p>the non-commercial part of the web, crafted by individuals to express
themselves or share knowledge without seeking any financial gain. This concept
often evokes nostalgia for the early, less commercialized days of the web,
before the ad-supported business model took over the internet (and we started
fighting back!)&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://benhoyt.com/writings/the-small-web-is-beautiful/">Context&lt;/a>.&lt;/p>
&lt;p>Kagi supports searching websites within the Small Web via a &lt;a href="https://help.kagi.com/kagi/features/lenses.html">dedicated
lens&lt;/a> (think of it as a search
scope).&lt;/p>
&lt;p>They also provide a integrated &lt;a href="https://kagi.com/api/v1/smallweb/feed/">RSS
feed&lt;/a> (think of it as a &amp;ldquo;small web
&lt;a href="https://en.wikipedia.org/wiki/Planet_(software)">planet&lt;/a>&amp;rdquo;).&lt;/p>
&lt;p>And, also, a &lt;a href="https://kagi.com/smallweb">navigator&lt;/a> (think of it as StumbleUpon
or Digg in the early days).&lt;/p>
&lt;p>The small web somewhat correlates with the &lt;a href="https://indieweb.org/">IndieWeb&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>What is the IndieWeb?&lt;/p>
&lt;p>The IndieWeb is a people-focused alternative to the &amp;ldquo;corporate web&amp;rdquo;.&lt;/p>
&lt;p>We are a community of independent and personal websites based on the
principles of: owning your domain and using it as your primary online
identity, publishing on your own site first (optionally elsewhere), and owning
your content.&lt;/p>
&lt;/blockquote>
&lt;p>It is a great source of serendipity.&lt;/p></description></item><item><title>helm-secrets + vals: string interpolation</title><link>https://perrotta.dev/2025/05/helm-secrets--vals-string-interpolation/</link><pubDate>Thu, 08 May 2025 15:25:14 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/helm-secrets--vals-string-interpolation/</guid><description>&lt;p>&lt;a href="https://github.com/jkroepke/helm-secrets">helm-secrets&lt;/a> is:&lt;/p>
&lt;blockquote>
&lt;p>a helm plugin that helps to manage secrets with Git workflow and store them
anywhere.&lt;/p>
&lt;/blockquote>
&lt;p>It uses &lt;a href="https://github.com/helmfile/vals">vals&lt;/a> underneath, which is a:&lt;/p>
&lt;blockquote>
&lt;p>Helm-like configuration values loader with support for various sources&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;including, in particular, &lt;a href="https://www.hashicorp.com/en/products/vault">HashiCorp Vault&lt;/a>.&lt;/p>
&lt;p>The &lt;code>vals&lt;/code> syntax is documented
&lt;a href="https://github.com/helmfile/vals?tab=readme-ov-file#expression-syntax">here&lt;/a>.&lt;/p>
&lt;p>&lt;strong>Problem statement&lt;/strong>: construct a string composed of the following two vault
entries:&lt;/p>
&lt;ul>
&lt;li>&lt;code>vault://kv-v2/services/common/postgres/#url&lt;/code>&lt;/li>
&lt;li>&lt;code>vault://kv-v2/services/common/postgres/#params&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;to yield &lt;code>{url}?{params}&lt;/code>.&lt;/p>
&lt;p>How do we concatenate two vault entries?
The secret is in the &lt;code>+&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Finally, the optional trailing &lt;code>+&lt;/code> is the explicit &amp;ldquo;end&amp;rdquo; of the expression.
You usually don&amp;rsquo;t need it, as if omitted, it treats anything after &lt;code>ref+&lt;/code> and
before the new-line or the end-of-line as an expression to be evaluated. An
explicit &lt;code>+&lt;/code> is handy when you want to do a simple string interpolation. That
is, &lt;code>foo ref+SECRET1+ ref+SECRET2+ bar&lt;/code> evaluates to &lt;code>foo SECRET1_VALUE SECRET2_VALUE bar&lt;/code>.&lt;/p>
&lt;/blockquote>
&lt;p>The final result:&lt;/p>
&lt;pre tabindex="0">&lt;code>secrets+literal://ref+vault://kv-v2/services/common/postgres/#url+?ref+vault://kv-v2/services/common/postgres/#params
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;wherein &lt;code>secrets+literal://&lt;/code> comes from &lt;code>helm-secrets&lt;/code>. It needs to appear only
once. &lt;code>ref+vault://&lt;/code> comes from &lt;code>vals&lt;/code>, it appears once for each vault entry.&lt;/p></description></item><item><title>1Password SSH agent error</title><link>https://perrotta.dev/2025/05/1password-ssh-agent-error/</link><pubDate>Wed, 07 May 2025 12:52:00 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/1password-ssh-agent-error/</guid><description>&lt;p>A day in the life:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ssh &lt;span style="color:#56b6c2">{&lt;/span>my-server&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>STDERR:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sign_and_send_pubkey: signing failed &lt;span style="color:#c678dd">for&lt;/span> ED25519 &lt;span style="color:#98c379">&amp;#34;/Users/thiago/.ssh/id_ed25519&amp;#34;&lt;/span> from agent: agent refused operation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> git@github.com: Permission denied &lt;span style="color:#56b6c2">(&lt;/span>publickey&lt;span style="color:#56b6c2">)&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> fatal: Could not &lt;span style="color:#e5c07b">read&lt;/span> from remote repository.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Please make sure you have the correct access rights
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and the repository exists.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>What&amp;rsquo;s the matter?&lt;/p>
&lt;p>My ssh config is integrated with the &lt;a href="https://developer.1password.com/docs/ssh/agent/">1Password ssh
agent&lt;/a>:&lt;/p>
&lt;pre tabindex="0">&lt;code>Host *
 # Use 1Password SSH agent when available
 # macOS only
 # Linux: &amp;#34;~/.1password/agent.sock&amp;#34;
 IdentityAgent &amp;#34;~/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock&amp;#34;
&lt;/code>&lt;/pre>&lt;p>&lt;strong>Solution&lt;/strong>: Ensure 1Password is unlocked, so that the agent can be used.&lt;/p>
&lt;p>It can be unlocked from its macOS app, or from the CLI (&lt;code>op signin --account {my-account}&lt;/code>).&lt;/p></description></item><item><title>ByteBurst Brigade</title><link>https://perrotta.dev/2025/05/byteburst-brigade/</link><pubDate>Tue, 06 May 2025 17:56:02 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/byteburst-brigade/</guid><description>&lt;p>If you have Telegram, you&amp;rsquo;re welcome to join &lt;a href="https://t.me/+OzLfJRhjA69iNWFh">ByteBurst
Brigade&lt;/a>, a supergroup I host with friends to
discuss Tech in general: privacy, self-hosting, news, workflows, etc.&lt;/p>
&lt;p>The noise in the group is low – arguably, that&amp;rsquo;s a feature, à la
&lt;a href="https://lobste.rs/about#invitations">lobsters&lt;/a>.&lt;/p></description></item><item><title>Slack snippets</title><link>https://perrotta.dev/2025/05/slack-snippets/</link><pubDate>Tue, 06 May 2025 17:48:15 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/slack-snippets/</guid><description>&lt;p>In order to post a large text file to Slack, use a &lt;a href="https://slack.com/intl/en-gb/help/articles/204145658-Create-or-paste-code-snippets-in-Slack">snippet&lt;/a>.
Snippet is short for &amp;ldquo;code snippet&amp;rdquo;.&lt;/p>
&lt;p>Type in &lt;code>/snippet&lt;/code>, then complete the wizard.&lt;/p>
&lt;p>You can choose the language – typically YAML, JSON or Shell – for syntax
highlighting.&lt;/p>
&lt;p>This is better than dumping the entire source within a pair of three backticks.&lt;/p></description></item><item><title>Do you like to live in danger?</title><link>https://perrotta.dev/2025/05/do-you-like-to-live-in-danger/</link><pubDate>Mon, 05 May 2025 18:11:23 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/do-you-like-to-live-in-danger/</guid><description>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% claude --dangerously-skip-permissions &lt;span style="color:#98c379">&amp;#34;fix the zizmor issue: pre-commit run --all-files zizmor&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╭─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╮
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ WARNING: Claude Code running in Bypass Permissions mode │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ In Bypass Permissions mode, Claude Code will not ask &lt;span style="color:#c678dd">for&lt;/span> your approval before running potentially dangerous commands. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ This mode should only be used in a sandboxed container/VM that has restricted internet access and can easily be restored &lt;span style="color:#c678dd">if&lt;/span> damaged. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ By proceeding, you accept all responsibility &lt;span style="color:#c678dd">for&lt;/span> actions taken &lt;span style="color:#c678dd">while&lt;/span> running in Bypass Permissions mode. │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ https://docs.anthropic.com/s/claude-code-security │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ❯ 1. No, &lt;span style="color:#e5c07b">exit&lt;/span> │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 2. Yes, I accept │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Enter to confirm · Esc to &lt;span style="color:#e5c07b">exit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">[&lt;/span>...&lt;span style="color:#56b6c2">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>⏺ Great! The zizmor pre-commit check now passes. Let&amp;#39;s summarize the changes we made:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. Removed user-provided inputs &lt;span style="color:#c678dd">for&lt;/span> version numbers that could potentially be used &lt;span style="color:#c678dd">for&lt;/span> code injection
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2. Replaced them with an auto-generated timestamp-based version when the workflow is manually triggered
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3. Maintained the existing behavior &lt;span style="color:#c678dd">for&lt;/span> automatic triggers &lt;span style="color:#56b6c2">(&lt;/span>using &lt;span style="color:#98c379">&amp;#34;latest&amp;#34;&lt;/span> tag&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This approach is more secure since:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 1. No user inputs are used in any &lt;span style="color:#e5c07b">command&lt;/span> execution context
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2. The version tag is generated from a trusted &lt;span style="color:#e5c07b">source&lt;/span> &lt;span style="color:#56b6c2">(&lt;/span>the system timestamp&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 3. The workflow still provides versioned images when manually triggered, just with an automatically generated version instead of a user-provided one
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let the agentic overlords take over 😬🤖.&lt;/p>
&lt;p>How does it know it can do so?&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% grep -i bypass ~/.claude.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#98c379">&amp;#34;bypassPermissionsModeAccepted&amp;#34;&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview#control-claude-code-with-commands">Anthropic Docs&lt;/a>.&lt;/p></description></item><item><title>bkt: bypass cache</title><link>https://perrotta.dev/2025/05/bkt-bypass-cache/</link><pubDate>Mon, 05 May 2025 15:21:19 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/bkt-bypass-cache/</guid><description>&lt;p>&lt;a href="https://perrotta.dev/2024/12/bkt-cache-command-outputs/">Previously&lt;/a>.&lt;/p>
&lt;p>Whenever using &lt;a href="https://www.bkt.rs/">&lt;code>bkt&lt;/code>&lt;/a>, sometimes you may need to evict the
cache to get fresh data.&lt;/p>
&lt;p>Use the &lt;code>--force&lt;/code> option to do so. Usage:&lt;/p>
&lt;p>Replace:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% bkt --ttl 30d -- &lt;span style="color:#56b6c2">{&lt;/span>my cool command&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% bkt --force --ttl 30d -- &lt;span style="color:#56b6c2">{&lt;/span>my cool command&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Github: pull request template</title><link>https://perrotta.dev/2025/05/github-pull-request-template/</link><pubDate>Sun, 04 May 2025 21:10:34 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/github-pull-request-template/</guid><description>&lt;p>To create a pull request template for a github repository, create a
&lt;code>.github/pull_request_template.md&lt;/code> file.&lt;/p>
&lt;p>Take advantage of &lt;a href="https://www.markdownguide.org/basic-syntax/">markdown
formatting&lt;/a>.&lt;/p>
&lt;p>I found the following prompt useful as a starting point for &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
within the repository:&lt;/p>
&lt;blockquote>
&lt;p>Suggest a template for this repository for new github PRs.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository">Upstream
docs&lt;/a>.&lt;/p></description></item><item><title>Kagi</title><link>https://perrotta.dev/2025/05/kagi/</link><pubDate>Sun, 04 May 2025 19:18:48 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/kagi/</guid><description>&lt;p>&lt;strong>TL;DR&lt;/strong>: &lt;a href="https://kagi.com/">Kagi&lt;/a> is a web search engine.&lt;/p>
&lt;p>Why would you use something other than Google, you may ask? &lt;a href="https://blog.kagi.com/age-pagerank-over">That&amp;rsquo;s out of scope
of this post&lt;/a>. If you think Google is
the best and there&amp;rsquo;s no need to replace your search engine, this post is not for
you.&lt;/p>
&lt;p>A while ago I had &lt;a href="https://perrotta.dev/2024/12/switching-from-google-to-chatgpt-search/">switched&lt;/a> my default search
engine from Google to ChatGPT Search, but that didn&amp;rsquo;t last long; eventually I
settled on &lt;a href="http://duckduckgo.com/">DuckDuckGo&lt;/a>.&lt;/p>
&lt;p>Last week, a friend told me he got a trial of Kagi. It wasn&amp;rsquo;t the first time
I&amp;rsquo;ve heard of it: &lt;a href="https://daringfireball.net/2025/04/try_switching_to_kagi">John
Gruber&lt;/a> also blogged
about it.&lt;/p>
&lt;p>Then I decided to try it out myself as well. In general I am happy with
DuckDuckGo, but we can always try something new, and the company materials have
really impressed me.&lt;/p>
&lt;p>I emailed someone at the company and got an 1-month trial of their
&lt;a href="https://kagi.com/pricing">Professional plan&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> – which includes &lt;strong>unlimited&lt;/strong>
searches. This is important: there should be no decision fatigue nor anxiety
about hitting a ceiling in the number of monthly searches.&lt;/p>
&lt;p>What is Kagi? In a Nutshell:&lt;/p>
&lt;blockquote>
&lt;p>Kagi has no ads and is fully supported only by its users. We worked very hard
to provide high quality, fast and tracking-free results at a minimum cost to
ensure sustainability of our operation. By choosing a paid Kagi plan, you are
also helping accelerate our mission of humanizing the web.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Why should I pay for search?&lt;/p>
&lt;p>You&amp;rsquo;re already paying with your time and attention to advertisers who
manipulate your search results, waste your time, and exploit your privacy. Pay
with your wallet instead of your life, and get pure, powerful search that
works for you - not advertisers. Read more.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>What happens if I don&amp;rsquo;t use any searches?&lt;/p>
&lt;p>In months where you don&amp;rsquo;t utilize any searches on your plan, we will
automatically apply a full credit to your account. This credit will be applied
to your next billing cycle, effectively covering your subsequent month&amp;rsquo;s
subscription at no additional cost.&lt;/p>
&lt;/blockquote>
&lt;p>See also their &lt;a href="https://help.kagi.com/kagi/faq/faq.html">FAQ&lt;/a> and &lt;a href="https://kagi.com/privacy">privacy
policy&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Why does Kagi return so few results?&lt;/p>
&lt;p>Kagi only shows you actually relevant search results, so you may be confused
when Kagi returns 57 results and another, ad supported, search engine returns
2.6 million results. This is, in part, because ad supported search engines
have different incentives and want you to stay on their site longer, going
through pages and pages of results, as every interaction is another
opportunity to serve ads.&lt;/p>
&lt;p>Kagi, conversely, strives to deliver the most relevant, unique results within
the top three.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>What data does Kagi collect?&lt;/p>
&lt;p>Only bare necessities to run the service. Please see our privacy policy and
our documentation about privacy protection for more information.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>Kagi&amp;rsquo;s business model is unlike any other search engine in the world. This
means we don&amp;rsquo;t need or want your personal information (it would just be an
unwelcome liability). By choosing this business model we know that we are
going to have far less users than mainstream search engine for example, but we
have also removed any incentive to misuse any information you have shared with
us.&lt;/p>
&lt;p>Privacy is a Kagi Feature&lt;/p>
&lt;p>At Kagi, you are our customer, not the product being sold The deal is simple:
Our customers pay for a service and we provide them with a service. This
business model ensures Kagi&amp;rsquo;s and our customers&amp;rsquo; interests are always aligned.&lt;/p>
&lt;p>We value your privacy, and whenever possible we will choose not to require or
save any user data. For Kagi, user data is only a liability - we do not need
or want it. Still, operating a paid service may require some basic information
from our customers, and this document describes how we use it to the best of
our ability.&lt;/p>
&lt;p>See for yourself Our technology choices show we&amp;rsquo;re serious about privacy. You
can check them in your browser.&lt;/p>
&lt;p>Unlike most websites, we do not load any analytics or telemetry.&lt;/p>
&lt;p>Unlike most search engines, we do not track which search result you choose to
click.&lt;/p>
&lt;p>When viewing images, videos or other media results, or using the Kagi
Assistant, we protect your privacy by proxying all connections and data
through our servers.&lt;/p>
&lt;p>We store only the bare minimum of cookies, those required to handle basic
application functionality, such as logging in.&lt;/p>
&lt;/blockquote>
&lt;p>I am currently digging through their
&lt;a href="https://help.kagi.com/kagi/">documentation&lt;/a>. There&amp;rsquo;s a lot to read! There&amp;rsquo;s no
need to, but I am trying to assess whether to pay for them once the trial ends.&lt;/p>
&lt;p>Overall I am quite bullish about them. I have already updated all my browsers in
all my devices (including work) to them. I believe immersion is a very effective
way to evaluate a product.&lt;/p>
&lt;p>They support &lt;a href="https://help.kagi.com/kagi/features/bangs.html">bangs&lt;/a>, just like
DuckDuckGo, meaning that I can append (for example) &lt;code>!g&lt;/code> or &lt;code>!ddg&lt;/code> to bail out
to Google or DuckDuckGo, respectively. I find their user experience around bangs
much better than DuckDuckGo&amp;rsquo;s:&lt;/p>
&lt;ul>
&lt;li>first, there&amp;rsquo;s a &lt;a href="https://kbe.smaertness.net/">bang explorer&lt;/a>
(community-created), and the bang sources are
&lt;a href="https://github.com/kagisearch/bangs">open&lt;/a>&lt;/li>
&lt;li>it&amp;rsquo;s possible to add custom bangs&lt;/li>
&lt;li>it&amp;rsquo;s possible to add custom search engines&lt;/li>
&lt;/ul>
&lt;p>As a practical example: I can invoke their
&lt;a href="https://kagi.com/summarizer">Summarizer&lt;/a> to make a summary of a page:&lt;/p>
&lt;pre tabindex="0">&lt;code>!sum &amp;lt;url&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Or &amp;ldquo;I am feeling lucky&amp;rdquo; with &lt;code>! {search term}&lt;/code>.&lt;/p>
&lt;p>There&amp;rsquo;s &lt;a href="https://help.kagi.com/kagi/api/overview.html">API access&lt;/a>.&lt;/p>
&lt;p>There&amp;rsquo;s built-in &lt;a href="https://blog.kagi.com/kagi-translate">Translation&lt;/a> (Kagi
Translate), accessible at
&lt;a href="https://translate.kagi.com/">https://translate.kagi.com/&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Add translate.kagi.com/ before any URL for instant translation. No apps
needed. Access 244 languages with zero tracking. Install our browser
bookmarklet for quick access.&lt;/p>
&lt;p>Kagi Translate is free for everyone. If you&amp;rsquo;re not a logged in Kagi user,
you&amp;rsquo;ll encounter a simple captcha to prevent automated abuse - a small step
that helps us maintain quality while keeping the service free. Kagi members
get direct access without captchas, integrating seamlessly with their existing
workflow.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://kagi.com/stats">Kagi Search Stats&lt;/a>: it keeps healthily growing.&lt;/p>
&lt;p>&lt;a href="https://help.kagi.com/kagi/search-details/search-speed.html">Kagi Performance&lt;/a>:
it is fast and lightweight.&lt;/p>
&lt;p>If you append a question mark (&lt;code>?&lt;/code>) to a search query, then it automatically
invokes a LLM (&lt;a href="https://help.kagi.com/kagi/ai/quick-answer.html">&amp;lsquo;quick
answer&amp;rsquo;&lt;/a>) to summarize results:&lt;/p>
&lt;blockquote>
&lt;p>Even with an engine as powerful as Kagi you may not be interested in reading
every resulting page and want a synthesis of the information as well as
references to important pages in the search result. Kagi&amp;rsquo;s Quick Answer
quickly produces a summary of the results across the pages returned and
provides references to the pages that are used. This functionality allows you
to quickly consume the desired information from the search while giving you
the pointers to dive deeper into the information if desired.&lt;/p>
&lt;p>Once you have search results returned you can select Quick Answer to quickly
transform the information on the page into the easier to digest format.
Additionally, if you add a question mark at the end of your query (&amp;quot;?&amp;quot;) Quick
Answers will trigger automatically, making it even more convenient to get to
the information you need swiftly. You can also trigger Quick Answer by
pressing &amp;lsquo;q&amp;rsquo; on your keyboard, after the results have loaded.&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ll end this post now, otherwise I&amp;rsquo;d just be parroting the entire Kagi
Documentation here. &lt;strong>TL;DR&lt;/strong>: So far, so good.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Edit(2025-05-14)&lt;/strong>: After using Kagi for about 10 days, I am happy to report
that I&amp;rsquo;ve been quite happy with them. There&amp;rsquo;s no doubt they have a great
product.&lt;/p>
&lt;p>The question to ask yourself is whether it&amp;rsquo;s worth paying $10 / month for
their professional plan, or whether DuckDuckGo is enough for you. If you can
have your company expense them, then it&amp;rsquo;s definitely a no-brainer.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Their standard &lt;a href="https://kagi.com/pricing">trial&lt;/a> sign-up has a limitation
of 100 searches.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Logseq: list all pages of a tag</title><link>https://perrotta.dev/2025/05/logseq-list-all-pages-of-a-tag/</link><pubDate>Sun, 04 May 2025 13:24:52 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/logseq-list-all-pages-of-a-tag/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given a couple of pages in &lt;a href="https://logseq.com/">Logseq&lt;/a>
tagged with a given &lt;code>content&lt;/code> tag:&lt;/p>
&lt;pre tabindex="0">&lt;code>tags:: content
&lt;/code>&lt;/pre>&lt;p>&amp;hellip;dynamically list all of them.&lt;/p>
&lt;p>We can do so with the following logseq query&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-logseq" data-lang="logseq">#+BEGIN_QUERY
{
 :title &amp;#34;Ideas 💡 (-&amp;gt;)&amp;#34;
 :query (property :tags &amp;#34;idea&amp;#34;)
}
#+END_QUERY
&lt;/code>&lt;/pre>&lt;p>This is a static query, not meant to be changed.&lt;/p>
&lt;p>Alternatively it&amp;rsquo;s possible to create a live query, which allows one to tweak it
on-the-fly:&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-logseq" data-lang="logseq">{{query (property :tags &amp;#34;idea&amp;#34;)}}
&lt;/code>&lt;/pre>&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>The query syntax is somewhat a blend of &lt;a href="https://orgmode.org">orgmode&lt;/a> +
emacs lisp from emacs.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>JIRA: stand-up mode</title><link>https://perrotta.dev/2025/05/jira-stand-up-mode/</link><pubDate>Fri, 02 May 2025 17:06:53 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/jira-stand-up-mode/</guid><description>&lt;p>&lt;a href="https://www.jakeworth.com/tils/jira-standup-mode/">Jira Standup Mode&lt;/a> via Jake
Worth:&lt;/p>
&lt;blockquote>
&lt;p>Jira recently launched &amp;lsquo;Standup Mode&amp;rsquo; feature, and love it!&lt;/p>
&lt;p>When you click the &amp;ldquo;Start Standup&amp;rdquo; button on any Jira board, your board
converts to a simplified, presentation version.&lt;/p>
&lt;p>On the left, each team member is listed in random order, which you can
re-shuffle. I like to avoid the same order of reports every day, so this helps
me.&lt;/p>
&lt;p>You can assign a timer for each member that restarts as you switch.&lt;/p>
&lt;/blockquote>
&lt;p>The default is 2 minutes. I like it.&lt;/p></description></item><item><title>Terminal autocorrection</title><link>https://perrotta.dev/2025/05/terminal-autocorrection/</link><pubDate>Fri, 02 May 2025 16:43:42 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/05/terminal-autocorrection/</guid><description>&lt;p>Appreciate this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gitp ushm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>zsh: correct &lt;span style="color:#98c379">&amp;#39;gitp&amp;#39;&lt;/span> to &lt;span style="color:#98c379">&amp;#39;git&amp;#39;&lt;/span> &lt;span style="color:#56b6c2">[&lt;/span>nyae&lt;span style="color:#56b6c2">]&lt;/span>? y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WARNING: You called a Git &lt;span style="color:#e5c07b">command&lt;/span> named &lt;span style="color:#98c379">&amp;#39;ushm&amp;#39;&lt;/span>, which does not exist.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Continuing in 1.0 seconds, assuming that you meant &lt;span style="color:#98c379">&amp;#39;pushm&amp;#39;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>branch &lt;span style="color:#98c379">&amp;#39;master&amp;#39;&lt;/span> &lt;span style="color:#e5c07b">set&lt;/span> up to track &lt;span style="color:#98c379">&amp;#39;origin/master&amp;#39;&lt;/span> by rebasing.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Everything up-to-date
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;a href="https://hunden.linuxkompis.se/2018/08/04/spell-check-and-auto-correction-of-commands-in-zsh.html">&lt;code>zsh&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://andycarter.dev/blog/auto-correct-git-commands">&lt;code>git&lt;/code> autocorrection&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>The ack + xargs + sed pattern</title><link>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</link><pubDate>Wed, 30 Apr 2025 16:20:24 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-ack--xargs--sed-pattern/</guid><description>&lt;p>I employ this pattern almost every day:&lt;/p>
&lt;ul>
&lt;li>use &lt;a href="https://beyondgrep.com/">&lt;code>ack&lt;/code>&lt;/a> to search for a given string in a codebase (git repo)&lt;/li>
&lt;li>use &lt;a href="https://man.archlinux.org/man/xargs.1">&lt;code>xargs&lt;/code>&lt;/a> to iterate through each finding&lt;/li>
&lt;li>use &lt;a href="https://www.gnu.org/software/sed/manual/sed.html">&lt;code>sed&lt;/code>&lt;/a> to make a text transformation&lt;/li>
&lt;/ul>
&lt;p>Example of the day:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l | xargs -n &lt;span style="color:#d19a66">1&lt;/span> gsed -i -e &lt;span style="color:#98c379">&amp;#39;s/limit: 2/limit: 5/g&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Given multiple &lt;a href="https://argo-cd.readthedocs.io/en/stable/">ArgoCD app manifests&lt;/a> in the form:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">syncPolicy&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">retry&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">limit&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">backoff&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">duration&lt;/span>: 5s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">factor&lt;/span>: &lt;span style="color:#d19a66">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">maxDuration&lt;/span>: 1m
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>limit: 2&lt;/code> with &lt;code>limit: 5&lt;/code> in all files. That&amp;rsquo;s what the command above
does:&lt;/p>
&lt;ul>
&lt;li>&lt;code>ack -l&lt;/code> lists all files that match the given pattern&lt;/li>
&lt;li>pipe to &lt;code>xargs -n 1&lt;/code> iterates on each of them&lt;/li>
&lt;li>&lt;code>gsed -i&lt;/code> (GNU &lt;code>sed&lt;/code>) makes a text transformation in-place&lt;/li>
&lt;/ul>
&lt;p>It&amp;rsquo;s not bulletproof, but it works most of the time.&lt;/p>
&lt;p>Sometimes I use &lt;a href="https://github.com/sharkdp/fd">&lt;code>fd&lt;/code>&lt;/a> to narrow the search down
to a file pattern. For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% fd -e yaml | xargs ack &lt;span style="color:#98c379">&amp;#34;limit: 2&amp;#34;&lt;/span> -l
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In this case, though, &lt;code>ack --yaml&lt;/code> would be even simpler.&lt;/p>
&lt;p>When &lt;code>sed&lt;/code> isn&amp;rsquo;t up for the job, &lt;code>awk&lt;/code> tends to be a decent alternative.&lt;/p>
&lt;p>Regular expression replacements aren&amp;rsquo;t always precise.
False positives can easily take place.
Adding &lt;code>\b&lt;/code> (word boundaries) sometimes helps.&lt;/p>
&lt;p>Other times it&amp;rsquo;s better to use a syntax-aware tool instead of &lt;code>sed&lt;/code>.&lt;/p>
&lt;p>For YAML, there&amp;rsquo;s &lt;a href="https://github.com/mikefarah/yq">&lt;code>yq&lt;/code>&lt;/a>.&lt;/p>
&lt;p>For JSON, there&amp;rsquo;s &lt;a href="https://jqlang.org/">&lt;code>jq&lt;/code>&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>jq&lt;/code> is like &lt;code>sed&lt;/code> for JSON data - you can use it to slice and filter and map
and transform structured data with the same ease that &lt;code>sed&lt;/code>, &lt;code>awk&lt;/code>, &lt;code>grep&lt;/code> and
friends let you play with text.&lt;/p>
&lt;/blockquote></description></item><item><title>YAML: complex keys</title><link>https://perrotta.dev/2025/04/yaml-complex-keys/</link><pubDate>Tue, 29 Apr 2025 13:06:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/yaml-complex-keys/</guid><description>&lt;p>&lt;strong>Today I learned&lt;/strong>: YAML complex keys (&lt;a href="https://stackoverflow.com/questions/33987316/what-is-a-complex-mapping-key-in-yaml">stack
overflow&lt;/a>).&lt;/p>
&lt;p>From the &lt;a href="https://yaml.org/spec/1.2.2/">spec&lt;/a>, § 2.11:&lt;/p>
&lt;blockquote>
&lt;p>A question mark and space (&lt;code>&amp;quot;? &amp;quot;&lt;/code>) indicate a complex mapping key. Within a
block collection, key/value pairs can start immediately following the dash,
colon, or question mark.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>? - Detroit Tigers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - Chicago cubs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: - 2001-07-23
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>? [ New York Yankees,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Atlanta Braves ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>: [ 2001-07-02, 2001-08-12,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 2001-08-14 ]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I noticed it when saving a &lt;code>values.yaml&lt;/code> file from &lt;a href="https://helm.sh/">helm&lt;/a> in
VSCode, which has auto-formatted it like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-diff" data-lang="diff">&lt;span style="display:flex;">&lt;span>diff --git a/helm/argocd/values.yaml b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>index b0884b26d..928c02eb3 100644
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">--- a/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+++ b/helm/argocd/values.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span>@@ -471,10 +471,12 @@ argo-cd:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # Do not trigger a reconciliation when the reported status of a HorizontalPodAutoscaler or ExternalSecret changes.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # That would mean reconciling every application with a hpa every 5 seconds which is heavy on the cpu.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> # https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#finding-resources-to-ignore
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.autoscaling_HorizontalPodAutoscaler
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">- resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret: |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">&lt;/span>&lt;span style="color:#98c379;font-weight:bold">+ ? resource.customizations.ignoreResourceUpdates.external-secrets.io_ExternalSecret
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">+ : |
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379;font-weight:bold">&lt;/span> jsonPointers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - /status
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initially I thought this was a mistake that would yield a parse error.
Upon running &lt;code>helm template&lt;/code>, however, I observed it&amp;rsquo;s in fact a no-op.&lt;/p>
&lt;p>The LLM says:&lt;/p>
&lt;blockquote>
&lt;p>VS Code is reformatting your YAML that way because it&amp;rsquo;s interpreting the
structure as YAML mapping with complex keys.&lt;/p>
&lt;p>This happens when your keys contain special characters (like dots or
underscores) or are long strings — YAML interpreters sometimes use the &lt;code>? key :&lt;/code> value syntax to denote explicit mapping entries with complex keys.&lt;/p>
&lt;/blockquote>
&lt;p>I surely cannot deny it&amp;rsquo;s a long key. Go blame
&lt;a href="https://argo-cd.readthedocs.io/en/stable/operator-manual/reconcile/#system-level-configuration">ArgoCD&lt;/a>
:P&lt;/p></description></item><item><title>GitHub: create a pull request from CLI</title><link>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</link><pubDate>Mon, 28 Apr 2025 14:12:57 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-create-a-pull-request-from-cli/</guid><description>&lt;p>Using the &lt;a href="https://cli.github.com/">&lt;code>gh&lt;/code>&lt;/a> tool (the official GitHub CLI tool):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will prompt for more information.&lt;/p>
&lt;p>To skip all prompts and simply use the commit message to fill in the PR Title
and the PR description, pass &lt;code>--fill&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --fill
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% gh pr create --help | grep -- --fill
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> to skip this, or use &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span> to autofill these values from git commits.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>alongside &lt;span style="color:#98c379">`&lt;/span>--fill&lt;span style="color:#98c379">`&lt;/span>, the values specified by &lt;span style="color:#98c379">`&lt;/span>--title&lt;span style="color:#98c379">`&lt;/span> and/or &lt;span style="color:#98c379">`&lt;/span>--body&lt;span style="color:#98c379">`&lt;/span> will
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --fill Use commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-first Use first commit info &lt;span style="color:#c678dd">for&lt;/span> title and body
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --fill-verbose Use commits msg+body &lt;span style="color:#c678dd">for&lt;/span> description
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>macOS: delete file, bypass trash</title><link>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</link><pubDate>Fri, 25 Apr 2025 16:37:28 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/macos-delete-file-bypass-trash/</guid><description>&lt;p>To delete a file in Finder on macOS without moving it to the trash, press
&lt;code>Option&lt;/code> + &lt;code>Command&lt;/code> + &lt;code>Delete&lt;/code> upon selecting the file.&lt;/p>
&lt;p>When using the CLI, of course, &lt;code>rm&lt;/code> is enough.&lt;/p></description></item><item><title>Delete newlines in a pipe</title><link>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</link><pubDate>Fri, 25 Apr 2025 11:59:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/delete-newlines-in-a-pipe/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Given &lt;code>{cmd}&lt;/code> that emits lots of blank lines, delete all
blank lines in a pipe.&lt;/p>
&lt;p>The following is a very elegant (and easy to remember!) way to do so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | awk &lt;span style="color:#98c379">&amp;#39;NF&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>From the LLM:&lt;/p>
&lt;blockquote>
&lt;p>When you use awk &amp;lsquo;NF&amp;rsquo;, it evaluates to true for lines where NF is greater than
zero—that is, lines that are not empty or do not consist solely of whitespace.
This makes it a concise way to filter out blank lines.&lt;/p>
&lt;/blockquote>
&lt;p>Other ways with classic tools and regular expressions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | grep -v &lt;span style="color:#98c379">&amp;#39;^[[:space:]]*$&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>cmd&lt;span style="color:#56b6c2">}&lt;/span> | sed -e &lt;span style="color:#98c379">&amp;#39;/^[[:space:]]*$/d&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>They are just a bit harder to remember.&lt;/p></description></item><item><title>The LLM journey</title><link>https://perrotta.dev/2025/04/the-llm-journey/</link><pubDate>Thu, 24 Apr 2025 03:14:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-llm-journey/</guid><description>&lt;p>&lt;em>Narrator&amp;rsquo;s voice&lt;/em>: &lt;a href="https://harper.blog/2025/04/17/an-llm-codegen-heros-journey/">An LLM Codegen Hero&amp;rsquo;s Journey
&lt;/a> by Harper Reed.&lt;/p>
&lt;p>I don&amp;rsquo;t have anything to add, go read Harper&amp;rsquo;s post.&lt;/p></description></item><item><title>HashiCorp Vault from helm values</title><link>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</link><pubDate>Wed, 23 Apr 2025 16:56:16 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/hashicorp-vault-from-helm-values/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: Populate HashiCorp Vault with select keys from &lt;code>helm get values&lt;/code> for a given chart release.&lt;/p>
&lt;p>The following script works:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#7f848e"># Usage: Tweak entries as needed and then run the script.&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">set&lt;/span> -euo pipefail
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># It&amp;#39;s an associative array: a dictionary, a hash map&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Key: the entry to be populated in vault&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e"># Value: a `jq` JSON selector from the output of `helm get values -o json`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e5c07b">declare&lt;/span> -A &lt;span style="color:#e06c75">entries&lt;/span>&lt;span style="color:#56b6c2">=(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted start&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.accessKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.accessKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.aws.secretKey&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.aws.secretKey&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiPassword&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiPassword&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.cronjob.apiUser&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.cronjob.apiUser&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.adminpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.adminpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.password&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.password&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.ropass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.ropass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.postgresql.rwpass&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.postgresql.rwpass&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.token&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.token&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#56b6c2">[&lt;/span>config.slack.verificationToken&lt;span style="color:#56b6c2">]=&lt;/span>&lt;span style="color:#98c379">&amp;#34;.config.slack.verificationToken&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#7f848e"># keep-sorted end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main&lt;span style="color:#56b6c2">()&lt;/span> &lt;span style="color:#56b6c2">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault login
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">for&lt;/span> entry in &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>!entries[@]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>; &lt;span style="color:#c678dd">do&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$entry&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">value&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#98c379">${&lt;/span>&lt;span style="color:#e06c75">entries&lt;/span>[&lt;span style="color:#e06c75">$entry&lt;/span>]&lt;span style="color:#98c379">}&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">content&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>helm get values -n tools mychart -o json | jq -r &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$value&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">echo&lt;/span> &lt;span style="color:#98c379">&amp;#34;Populating vault &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379"> from helm value &lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">: &lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">[[&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$FIRST&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">==&lt;/span> &lt;span style="color:#98c379">&amp;#34;1&amp;#34;&lt;/span> &lt;span style="color:#56b6c2">]]&lt;/span>; &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv put -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">FIRST&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#d19a66">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">else&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv patch -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart/&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#e06c75">$key&lt;/span>&lt;span style="color:#98c379">=&lt;/span>&lt;span style="color:#e06c75">$content&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">done&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> vault kv get -mount&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;kv-v2&amp;#34;&lt;/span> &lt;span style="color:#98c379">&amp;#34;services/mychart&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rm ~/.vault-token
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>FIRST&lt;/code>: In the first time we need to create an entry (&lt;code>vault kv put&lt;/code>), in the
second time we need to patch it (&lt;code>vault kv patch&lt;/code>).&lt;/p></description></item><item><title>Github PRs: do not submit</title><link>https://perrotta.dev/2025/04/github-prs-do-not-submit/</link><pubDate>Wed, 23 Apr 2025 12:47:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-prs-do-not-submit/</guid><description>&lt;p>Sometimes you want to send a pull request for review to your teammates and want
to ensure they do not accidentally prematurely merge it.&lt;/p>
&lt;p>One way to do so is to note in the commit message / PR description that it
should not be merged. Nonetheless, humans don&amp;rsquo;t always read instructions, our
attention span is quite limited.&lt;/p>
&lt;p>It would be more robust to employ a mechanism to prevent the PR from being
submitted, even if someone attempts to do so.&lt;/p>
&lt;p>You could leave the PR as a draft. However, this could have the side effect that
not all CI checks may run. You don&amp;rsquo;t want surprising failures later on, that
could slow you down.&lt;/p>
&lt;p>I like the following approach, which is partly inspired by an internal presubmit
check at Google: write &amp;ldquo;DO NOT SUBMIT&amp;rdquo; in the PR title, and have a CI check
(github action&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>) fail in this situation. Mark the action as
&lt;a href="https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks">required&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>If status checks are required for a repository, the required status checks
must pass before you can merge your branch into the protected branch. For more
information, see About protected branches.&lt;/p>
&lt;/blockquote>
&lt;p>Use the following github action (&lt;code>.github/workflows/pr-checks.yml&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">name&lt;/span>: PR Checks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">permissions&lt;/span>: read-all
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">on&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pull_request&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">types&lt;/span>: [opened, edited, synchronize]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">concurrency&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">group&lt;/span>: ${{ github.workflow }}-${{ github.ref }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">cancel-in-progress&lt;/span>: &lt;span style="color:#e5c07b">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">jobs&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">pr-checks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">runs-on&lt;/span>: ubuntu-latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">name&lt;/span>: &lt;span style="color:#98c379">&amp;#39;&amp;#34;DO NOT SUBMIT&amp;#34; check&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">env&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">PR_TITLE&lt;/span>: ${{ github.event.pull_request.title }}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">run&lt;/span>: |&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;Title: $PR_TITLE&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> if [[ &amp;#34;${PR_TITLE,,}&amp;#34; =~ &amp;#34;do not submit&amp;#34; ]]; then
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> echo &amp;#34;::error::PR title &amp;#39;$PR_TITLE&amp;#39; must not contain &amp;#39;DO NOT SUBMIT&amp;#39;&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> exit 1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#98c379"> fi&lt;/span> 
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>${PR_TITLE,,}&lt;/code> converts the PR title to lowercase so that the comparison is
case insensitive.&lt;/p>
&lt;p>&lt;code>=~ &amp;quot;do not submit&amp;quot;&lt;/code> is a regular expression to check if the title includes the
&amp;ldquo;DO NOT SUBMIT&amp;rdquo; string.&lt;/p>
&lt;p>With the action in place, I can just update my PR title by prepending &lt;code>DO NOT SUBMIT:&lt;/code> to it. The prefix doubles down as a documentation of my intent.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I don&amp;rsquo;t think I&amp;rsquo;ll ever remember the difference between a github action
and a github workflow. One is reusable, the other one is not. I always
forget which one.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Bracket City</title><link>https://perrotta.dev/2025/04/bracket-city/</link><pubDate>Mon, 21 Apr 2025 13:51:39 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/bracket-city/</guid><description>&lt;p>&lt;a href="https://www.theatlantic.com/games/bracket-city/">Bracket City&lt;/a> by The Atlantic
via &lt;a href="https://news.ycombinator.com/item?id=43622719">Hacker News&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>Hi hn - I co-own a diner where I co-host a puzzle night that is kind of like a
diner-themed escape room. At the last one, I made a puzzle that was
crossword-like clues nested in brackets. People at the diner seemed to like
it, so I resolved to make it a real game and Bracket City was born:
&lt;a href="https://bracket.city/">https://bracket.city&lt;/a>.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>I posted Bracket City to HN on February 24th and the game went live yesterday
on The Atlantic (!)&lt;/p>
&lt;p>The game will stay free to play (and not require logging in). Also, I&amp;rsquo;m still
making all the puzzles!&lt;/p>
&lt;/blockquote>
&lt;p>Very cool!&lt;/p>
&lt;p>Daily-puzzle-acquired-by-major-newspaper reminds me of
&lt;a href="https://www.nytimes.com/games/wordle/index.html">Wordle&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Acquired by The New York Times.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Finding the table manual</title><link>https://perrotta.dev/2025/04/finding-the-table-manual/</link><pubDate>Sun, 20 Apr 2025 18:26:55 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/finding-the-table-manual/</guid><description>&lt;p>&lt;strong>Problem statement&lt;/strong>: I bought an used table, it&amp;rsquo;s not from IKEA, now I need to
find its PDF manual to figure out how to properly assemble it. The previous
owner did not have a copy available.&lt;/p>
&lt;p>First step: Figure out what the make (manufacturer) is. Easy, there&amp;rsquo;s a label
attached to the table, it&amp;rsquo;s Finori. The label, unfortunately, does not include
the model name.&lt;/p>
&lt;p>Second step: Try to find the table model in the Finori website. No success.&lt;/p>
&lt;p>I go to &lt;a href="https://www.idealo.de/">idealo&lt;/a> and search for &amp;ldquo;Finori
Ausziehtisch&amp;rdquo;. I couldn&amp;rsquo;t find the exact model, but I got a similar one.&lt;/p>
&lt;p>Somehow I ended up in Otto and found the right model&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>. There&amp;rsquo;s no PDF manual
though.&lt;/p>
&lt;p>Then I go to &lt;a href="https://chatgpt.com/">SearchGPT&lt;/a> and prompt, with both search and
thinking enabled:&lt;/p>
&lt;blockquote>
&lt;p>Can you help me find the manual of this table? {link to the otto.de listing}&lt;/p>
&lt;/blockquote>
&lt;p>It got me some similar models, but not the exact one.&lt;/p>
&lt;p>At some point I got linked to an IKEA extendable table assembly video on
YouTube. The video was enough to figure out the remaining steps.&lt;/p>
&lt;p>The conclusion is: IKEA is like the
&lt;a href="https://wiki.archlinux.org/title/Main_page">ArchWiki&lt;/a> of assembling furniture.
Even when assembling models from other manufacturers, it will surely help you!&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>No need to link to it from here though.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Alpine Linux: the maintainer workflow</title><link>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</link><pubDate>Sun, 20 Apr 2025 15:12:09 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/alpine-linux-the-maintainer-workflow/</guid><description>&lt;p>I maintain &lt;a href="https://pkgs.alpinelinux.org/packages?name=&amp;amp;branch=edge&amp;amp;repo=&amp;amp;arch=x86_64&amp;amp;origin=&amp;amp;flagged=&amp;amp;maintainer=Thiago+Perrotta">a couple of
packages&lt;/a>
on Alpine Linux.&lt;/p>
&lt;p>Every now and then, a new software version is released, and it&amp;rsquo;s my duty&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup> as an
active package maintainer to update my packages.&lt;/p>
&lt;p>The typical workflow looks like the following.&lt;/p>
&lt;p>First I get an email notification from &amp;ldquo;Alpine Package DB&amp;rdquo;:&lt;/p>
&lt;blockquote>
&lt;p>Dear Thiago Perrotta&lt;/p>
&lt;p>This is an automatic message send from pkgs.alpinelinux.org
One or more of your aports have been flagged out of date based on
Anitya monitoring system &lt;a href="https://release-monitoring.org/">https://release-monitoring.org/&lt;/a>&lt;/p>
&lt;p>argocd current: 2.14.2-r1 new: 2.14.9&lt;/p>
&lt;p>To update the package you can use our helper script:&lt;/p>
&lt;p>abump aport-version&lt;/p>
&lt;p>If the provided information is incorrect, please let us know on IRC
or &lt;a href="mailto:alpine-infra@alpinelinux.org">alpine-infra@alpinelinux.org&lt;/a>. Thanks!&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s important not to &lt;a href="https://opensource.com/business/15/12/avoid-burnout-live-happy">burn oneself
out&lt;/a>.&lt;/p>
&lt;p>I treat these notifications as an FYI. They &lt;em>are not&lt;/em> prompts to make me
immediately go and update the packages&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>. For packages with frequent updates,
like &lt;code>argocd&lt;/code>, I&amp;rsquo;ll let a few patch versions accumulate before I take action.
Other times it is handy to batch package upgrades together so to do them all at
once. I use my personal judgment here. At the very least, this email will
trigger a TODO in my task list, so that it will not be forgotten. &lt;em>At some
point&lt;/em> it will be taken care of.&lt;/p>
&lt;p>Once I am ready to update the package, I &lt;code>ssh&lt;/code> to my Alpine Linux server. There
is absolutely no requirement to update alpine linux packages from alpine linux,
but it&amp;rsquo;s the most convenient to do, and I already have an alpine linux system
anyway.&lt;/p>
&lt;p>Then &lt;code>cd aports/&lt;/code>. This is a local git clone of the &lt;a href="https://gitlab.alpinelinux.org/alpine/aports">aports
tree&lt;/a>
(&lt;a href="https://wiki.alpinelinux.org/wiki/Aports_tree">wiki&lt;/a>).&lt;/p>
&lt;p>&lt;code>git pull&lt;/code>. I tend to clean up after myself, so the last branch is likely
already &lt;code>master&lt;/code>. But, if not, then &lt;code>git reset --hard &amp;amp;&amp;amp; git checkout master &amp;amp;&amp;amp; git pull&lt;/code>. Amen.&lt;/p>
&lt;p>Now the real fun starts. And it&amp;rsquo;s surprisingly quick and simple, it feels like
cheating:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% abump argocd-2.14.9
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will update the version and checksums in the corresponding &lt;code>APKBUILD&lt;/code> and
trigger a package build.&lt;/p>
&lt;p>It&amp;rsquo;s sensible to check the package release notes or changelog to find potential
incompatibilities and/or updates to the build process. It&amp;rsquo;s also sensible to
look at the package diffs to inspect for potential malware, which is becoming
increasingly more common these days in open source packages. &amp;ldquo;Secure your supply
chain&amp;rdquo;, as they say it.&lt;/p>
&lt;p>If the build completes successfully, create a new branch (&lt;code>git nb argocd&lt;/code>),
commit, push it (&lt;code>git pushm&lt;/code>), then create a merge request (MR) on
&lt;a href="https://gitlab.alpinelinux.org/">GitLab&lt;/a>. I normally use the Web UI to do so,
but it&amp;rsquo;s also possible to do it with the CLI. A link to create the MR is printed
to stdout upon pushing the branch, which makes the process even easier.&lt;/p>
&lt;p>It could happen that the MR fails CI for some architectures (even if it works
locally on my machine™). These errors need to be dealt with.&lt;/p>
&lt;p>The commit message must follow a certain style. I have a pre-commit script set
up that does it for me. It is typically in this form:&lt;/p>
&lt;pre tabindex="0">&lt;code>testing/argocd: upgrade to 2.14.9
&lt;/code>&lt;/pre>&lt;p>There&amp;rsquo;s a rule: only one package per merge request.&lt;/p>
&lt;p>If there are more packages to upgrade, I run &lt;code>git bd&lt;/code> (&amp;ldquo;branch delete&amp;rdquo;) and then
restart this process. It&amp;rsquo;s quite manageable, as I don&amp;rsquo;t maintain a lot of
packages. Perhaps it could be further automated if there were more packages
and/or if the package upgrades were more frequent.&lt;/p>
&lt;p>The final MR looks like the following:
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/83026">!83026&lt;/a>.&lt;/p>
&lt;p>Now I sit tight and wait for approval.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>On a &lt;a href="https://xkcd.com/2347/">&lt;em>best-effort&lt;/em>&lt;/a> basis.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>Unless it&amp;rsquo;s a security risk or incident (e.g. whenever there&amp;rsquo;s a CVE
associated with it).&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>The Smalltalk Question</title><link>https://perrotta.dev/2025/04/the-smalltalk-question/</link><pubDate>Sun, 20 Apr 2025 15:04:20 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/the-smalltalk-question/</guid><description>&lt;p>&lt;a href="http://www.aaronsw.com/weblog/smalltalkq">The Smalltalk Question&lt;/a> by Aaron
Swartz, via
&lt;a href="https://www.goodreads.com/book/show/24091886-raw-thought-raw-nerve">Raw Thought, Raw Nerve: Inside the Mind of Aaron Swartz&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>One of the minor puzzles of American life is what question to ask people at
parties and suchly to get to know them.&lt;/p>
&lt;p>&amp;ldquo;How ya doin&amp;rsquo;?&amp;rdquo; is of course mere formality, only the most troubled would
answer honestly for anything but the positive.&lt;/p>
&lt;p>&amp;ldquo;What do you do?&amp;rdquo; is somewhat offensive. First, it really means &amp;ldquo;what
occupation do you hold?&amp;rdquo; and thus implies you do little outside your
occupation. Second, it implies that one&amp;rsquo;s occupation is the most salient fact
about them. Third, it rarely leads to further useful inquiry. For only a
handful of occupations, you will be able to say something somewhat relevant,
but even this will no doubt be slightly annoying or offensive. (&amp;ldquo;Oh yeah, I
always thought about studying history.&amp;rdquo;)&lt;/p>
&lt;p>&amp;ldquo;Where are you from?&amp;rdquo; is even less fruitful.&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>I propose instead that one ask &lt;strong>&amp;ldquo;What have you been thinking about lately?&amp;rdquo;&lt;/strong>
First, the question is extremely open-ended. The answer could be a book, a
movie, a relationship, a class, a job, a hobby, etc. Even better, it will be
whichever of these is most interesting at the moment. Second, it sends the
message that thinking, and thinking about thinking, is a fundamental human
activity, and thus encourages it. Third, it&amp;rsquo;s easiest to answer, since by its
nature its asking about what&amp;rsquo;s already on the person&amp;rsquo;s mind. Fourth, it&amp;rsquo;s
likely to lead to productive dialog, as you can discuss the topic together and
hopefully make progress. Fifth, the answer is quite likely to be novel. Unlike
books and occupations, people&amp;rsquo;s thoughts seem to be endlessly varied. Sixth,
it helps capture a person&amp;rsquo;s essence. A job can be forced by circumstance and
parentage, but our thoughts are all our own. I can think of little better way
to quickly gauge what a person is really like.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;em>(emphasis mine)&lt;/em>&lt;/p>
&lt;p>So, what have you been thinking about lately?&lt;/p></description></item><item><title>Overnight Oats</title><link>https://perrotta.dev/2025/04/overnight-oats/</link><pubDate>Sun, 20 Apr 2025 13:09:31 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/overnight-oats/</guid><description>&lt;p>This post premieres a &lt;a href="https://perrotta.dev/tags/recipe">&lt;code>#recipe&lt;/code>&lt;/a> tag in this blog.&lt;/p>
&lt;p>What I like about this recipe is that it is quite freestyle, one can mix and
match whichever ingredients are available at hand. In my place most
ingredients are almost always available, only fresh fruits have high churn.&lt;/p>
&lt;p>And it&amp;rsquo;s easy to make it fun by adding / removing ingredients at the last
minute, tweaking the overall result each time. The sky is the limit.&lt;/p>
&lt;p>I recommend to have it for &lt;strong>breakfast&lt;/strong> (it&amp;rsquo;s enough!) or as an &lt;strong>afternoon snack&lt;/strong>
(for example, bring a Tupperware to work).&lt;/p>
&lt;h2 id="ingredients">Ingredients&lt;/h2>
&lt;p>The most important ingredients are &lt;strong>in bold&lt;/strong>.&lt;/p>
&lt;p>The coolest™ ingredients are &lt;em>in italics&lt;/em>.&lt;/p>
&lt;ul>
&lt;li>base (pick at least one)
&lt;ul>
&lt;li>&lt;strong>milk&lt;/strong> (animal or not; prefer low-fat)&lt;/li>
&lt;li>plain yogurt (greek, vanilla also OK)&lt;/li>
&lt;li>high-protein yogurt&lt;/li>
&lt;li>&lt;em>semolina pudding&lt;/em>&lt;/li>
&lt;li>avoid: water&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>grains (pick at least two)
&lt;ul>
&lt;li>&lt;strong>oats&lt;/strong> (steel-cut or rolled -&amp;gt; auf Deutsch: Haferflocken)&lt;/li>
&lt;li>&lt;strong>chia seeds&lt;/strong>&lt;/li>
&lt;li>flax seeds&lt;/li>
&lt;li>hemp seeds&lt;/li>
&lt;li>avoid&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>: quick oats&lt;/li>
&lt;li>avoid: porridge&lt;/li>
&lt;li>avoid: cereal (Müsli)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>sweet(ener) (pick at least one)
&lt;ul>
&lt;li>&lt;strong>peanut butter&lt;/strong>&lt;/li>
&lt;li>almond butter&lt;/li>
&lt;li>&lt;em>maple syrup&lt;/em>&lt;/li>
&lt;li>&lt;em>acacia honey&lt;/em>&lt;/li>
&lt;li>&lt;em>raw honey&lt;/em>&lt;/li>
&lt;li>wild honey&lt;/li>
&lt;li>date syrup&lt;/li>
&lt;li>&lt;strong>cinnamon&lt;/strong>&lt;/li>
&lt;li>vanilla extract&lt;/li>
&lt;li>avoid: sugar / brown sugar&lt;/li>
&lt;li>avoid: hazelnut butter / Nutella™&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>fruits (pick at least one)
&lt;ul>
&lt;li>bananas&lt;/li>
&lt;li>strawberries&lt;/li>
&lt;li>raspberries&lt;/li>
&lt;li>blueberries&lt;/li>
&lt;li>cherries&lt;/li>
&lt;li>figs&lt;/li>
&lt;li>avoid: dry figs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="preparation">Preparation&lt;/h2>
&lt;h3 id="the-first-day">The first day&lt;/h3>
&lt;p>These are overnight oats, therefore they should ideally be prepared one day
before you intend to consume them. The intent is to leave them simmering in the
fridge while you&amp;rsquo;re sleeping. Needless to say, it will be served &lt;strong>cold&lt;/strong>.
There&amp;rsquo;s a variant of this recipe that is served hot, but it&amp;rsquo;s out of scope of
this post.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Grab a dish to mix the ingredients within. Ideally, &lt;strong>a container with a lid&lt;/strong>
so that it can be stored in the fridge right away once we&amp;rsquo;re done.
Alternatively, a bowl will also do. Don&amp;rsquo;t get a plate. Some people like to do it
in cups (preferably a big cup if you want to eat enough!).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Start by adding the base. Normally I will do milk (always available) + some
plain yogurt if available. Cold milk, do not add hot milk! Room temperature is
also OK.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your grains. Oats are essential. Chia and flex seeds are nice to have.
Anything else is a bonus.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add your sweet(ener)s. Unless you&amp;rsquo;re on a diet. But frankly, even if you are,
do add some, just be moderate. Peanut or almond butter are perfect. I also
love to add maple syrup, but I typically defer it for later, right before
eating the oats. The same applies to honey.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Mix everything. Preferably with a spoon.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put the container in the fridge. Good night!&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="the-second-day">The second day&lt;/h3>
&lt;p>The fruits should be cut in small pieces. Add them to the container.&lt;/p>
&lt;p>Add other sweeteneers (as previously mentioned: maple syrup, honey, etc).&lt;/p>
&lt;p>It&amp;rsquo;s done. Enjoy!&lt;/p>
&lt;p>&lt;strong>Note&lt;/strong>: When in a rush, you can prepare and eat the oats within the same day.
Just leave them in the fridge for &lt;em>at least&lt;/em> one hour.&lt;/p>
&lt;p>&lt;strong>Disclaimer&lt;/strong>: This post was written without AI, and without any web searches, it&amp;rsquo;s purely from
my memory and experience. Consume (pun intended!) this information at your own
risk.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>What triggers &lt;em>&amp;ldquo;avoid&amp;rdquo;&lt;/em> is one of: (i) experience, (ii) moral, or (iii)
diet.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Serendipity vs Gatekeeping</title><link>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</link><pubDate>Sun, 13 Apr 2025 01:35:29 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/serendipity-vs-gatekeeping/</guid><description>&lt;p>Serendipity, via
&lt;a href="https://duckduckgo.com/?q=serendipity+definition&amp;amp;ia=web&amp;amp;iax=definition">DuckDuckGo&lt;/a> dictionary:&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>1.&lt;/strong> The faculty of making fortunate discoveries by accident.&lt;/p>
&lt;p>&lt;strong>6.&lt;/strong> Good luck in making unexpected and fortunate discoveries.&lt;/p>
&lt;/blockquote>
&lt;p>Gatekeeping, via
&lt;a href="https://dictionary.cambridge.org/dictionary/english/gatekeeping">Cambridge&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;p>The activity of trying to control who gets particular resources, power, or
opportunities, and who does not.&lt;/p>
&lt;/blockquote>
&lt;p>Serendipity spreader, via &lt;a href="https://perrotta.dev/">yours truly&lt;/a>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>:&lt;/p>
&lt;blockquote>
&lt;ol>
&lt;li>One who facilitates (spreads) serendipity amongst its acquaintances and
peers.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Gatekeeper, via &lt;a href="https://duckduckgo.com/?q=gatekeeper+define&amp;amp;ia=web">DuckDuckGo&lt;/a>
dictionary:&lt;/p>
&lt;blockquote>
&lt;ol start="3">
&lt;li>One who controls access to something, such as information or services.&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>Definitions set, here comes the fun part:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Lemma #1&lt;/strong>: Gatekeepers are, by definition, the opposite of serendipity
spreaders. You can visualize them in a 2D scale, from left to right, somewhat
akin to how people attempt to project politics onto a line.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #2&lt;/strong>: Open Source Software (OSS) is a gift™ driven primarily by
serendipity spreaders.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #3&lt;/strong>: In terms of friendships, the optimal point of joy and
satisfaction lies within seeking and maintaining serendipity spreaders whilst
avoiding gatekeepers at all costs. It yields a rewarding continuous feedback
loop.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #4&lt;/strong>: Gatekeepers drag serendipity spreaders down. They are like
leeches (parasites).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #5&lt;/strong>: Serendipity spreaders thrive together.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #6&lt;/strong>: In a set full of serendipity spreaders, one gatekeeper is enough
to &lt;a href="https://en.wikipedia.org/wiki/Paradox_of_tolerance">disrupt&lt;/a> the entire
group, thereby leading to the conversion of new gatekeepers.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Lemma #7&lt;/strong>: In a set full of gatekeepers, one serendipity spreader is enough
to spread serendipity; however, the bar to convert to more serendipity
spreaders is extremely high, and it&amp;rsquo;s very taxing.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Several conclusions can be drawn from these lemmas; nonetheless, this is not a
blog about philosophy or morals, therefore the exercise is left to the reader.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I coined this term myself, inspired by hearing about
&lt;a href="https://en.wikipedia.org/wiki/Superspreading_event">superspreaders&lt;/a> during
the COVID-19 pandemic. The definition was written without AI. This is a
badge of honour these days, isn&amp;rsquo;t it? I&amp;rsquo;ll take it.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>GitHub: vacation mode</title><link>https://perrotta.dev/2025/04/github-vacation-mode/</link><pubDate>Sun, 13 Apr 2025 01:02:03 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-vacation-mode/</guid><description>&lt;p>&lt;a href="https://github.blog/changelog/2019-01-08-set-your-status/">Since 2019&lt;/a> GitHub
allows setting a status on your profile page:&lt;/p>
&lt;blockquote>
&lt;p>You can now set your status on GitHub! Use your status to share specific
information with only your organization, or share a status with all of GitHub!
Optionally, you can indicate that you&amp;rsquo;re busy so your collaborators can
determine whether to mention someone else for a quicker response.&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a href="https://docs.github.com/en/account-and-profile/setting-up-and-managing-your-github-profile/customizing-your-profile/personalizing-your-profile#setting-a-status">Documentation&lt;/a>.
&lt;strong>TL;DR&lt;/strong>: The most practical use case is to set your profile to &amp;ldquo;Busy&amp;rdquo; whenever
you take time off (whether it&amp;rsquo;s vacation or sick leave).&lt;/p>
&lt;p>It&amp;rsquo;s possible to limit the status visibility to a single organization, so that
it is not publicly visible.&lt;/p>
&lt;p>It&amp;rsquo;s also possible to automatically clear the status after a given period (e.g.
one week).&lt;/p>
&lt;p>Why is this useful?&lt;/p>
&lt;ul>
&lt;li>signal to your teammates that you&amp;rsquo;re OOO, without leaving then wondering why
you&amp;rsquo;re taking forever to review their PRs&lt;/li>
&lt;li>prevent team assignments in PR reviews to automatically select you when you&amp;rsquo;re
OOO:&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>If you select the &amp;ldquo;Busy&amp;rdquo; option, when people @mention your username, assign
you an issue or pull request, or request a pull request review from you, a
note next to your username will show that you&amp;rsquo;re busy. You will also be
excluded from automatic review assignment for pull requests assigned to any
teams you belong to. For more information, see Managing code review settings
for your team.&lt;/p>
&lt;/blockquote></description></item><item><title>Pipe to Claude</title><link>https://perrotta.dev/2025/04/pipe-to-claude/</link><pubDate>Wed, 09 Apr 2025 17:56:05 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/pipe-to-claude/</guid><description>&lt;p>One of the most effective ways to resolve random software development problems
in 2025:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#56b6c2">{&lt;/span>&lt;span style="color:#e5c07b">command&lt;/span> that emits warnings or errors&lt;span style="color:#56b6c2">}&lt;/span> | claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>claude&lt;/code> is Anthropic&amp;rsquo;s &lt;a href="https://docs.anthropic.com/en/docs/agents-and-tools/claude-code/overview">Claude
Code&lt;/a>
CLI LLM agent tool:&lt;/p>
&lt;blockquote>
&lt;p>Learn about Claude Code, an agentic coding tool made by Anthropic. Currently
in beta as a research preview.&lt;/p>
&lt;/blockquote>
&lt;p>There is a series of little / simple tasks I&amp;rsquo;ve been procrastinating (e.g.
linter issues) that can be quickly resolved with the assistance of a LLM tool.&lt;/p>
&lt;p>There&amp;rsquo;s no silver bullet here: all changes need to be properly reviewed and
tested. Nonetheless, even if the tool is wrong 50% of the time, it&amp;rsquo;s still
faster for me to use the LLM tool as an initial suggestion than having to
do the research myself from scratch.&lt;/p></description></item><item><title>Github Actions: ubuntu-latest tools</title><link>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</link><pubDate>Wed, 09 Apr 2025 01:00:47 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/github-actions-ubuntu-latest-tools/</guid><description>&lt;p>Which tools are installed in the Github Actions environment for &lt;code>ubuntu-latest&lt;/code>?&lt;/p>
&lt;p>&lt;a href="https://github.com/actions/runner-images/blob/main/images/ubuntu/Ubuntu2404-Readme.md">This
repository&lt;/a>
has the answer.&lt;/p></description></item><item><title>Against names</title><link>https://perrotta.dev/2025/04/against-names/</link><pubDate>Sun, 06 Apr 2025 12:54:04 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/against-names/</guid><description>&lt;p>&lt;a href="https://steveklabnik.com/writing/against-names/">Against Names&lt;/a> by Steve
Klabnik:&lt;/p>
&lt;blockquote>
&lt;p>Specifically, if naming things is so hard… why do we insist on doing it all
the time?&lt;/p>
&lt;/blockquote>
&lt;p>I&amp;rsquo;ve been meaning to convert to &lt;a href="https://github.com/jj-vcs/jj">&lt;code>jj&lt;/code>&lt;/a>. The post
has an extra argument to do so.&lt;/p></description></item><item><title>Sentimental versioning</title><link>https://perrotta.dev/2025/04/sentimental-versioning/</link><pubDate>Thu, 03 Apr 2025 11:31:17 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/sentimental-versioning/</guid><description>&lt;p>&lt;a href="https://github.com/dominictarr/sentimental-versioning">Sentimental Versioning&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;h2 id="tex-and-metafont">TeX and Metafont&lt;/h2>
&lt;h3 id="by-donald-knuth">by Donald Knuth&lt;/h3>
&lt;p>In his seminal text layout system, TeX, and his equally
brilliant typeface design system, METAFONT, Donald uses a versioning number
system that asymptotically approaches perfection. The version numbers of TeX
approach π (the current version is &lt;code>3.14159265&lt;/code>) and the version numbers of
METAFONT approach &lt;code>e&lt;/code>. It has been prophesied that the last change not be made
until after the day Donald ascends to heaven on a shining cloud. At that point,
Donald will make one last ssh connection down from heaven to his server at
Stanford University and set the version number unto π &lt;em>exactly&lt;/em>. At that point
all remaining bugs will be declared features, and the output from TeX will
remain the same for all eternity.&lt;/p>
&lt;/blockquote></description></item><item><title>First Alpine Linux package in Community</title><link>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</link><pubDate>Tue, 01 Apr 2025 14:27:41 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/first-alpine-linux-package-in-community/</guid><description>&lt;p>How wholesome: someone sent a MR (Merge Request)
&lt;a href="https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/82047">!82047&lt;/a> in
&lt;code>alpine/aports&lt;/code> with the &lt;a href="https://github.com/google/yamlfmt">&lt;code>yamlfmt&lt;/code>&lt;/a> package
I maintain, moving it from &lt;code>testing/&lt;/code> to &lt;code>community/&lt;/code>&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>This means the package will be included in the next release of Alpine (3.22) as
part of its official repositories (unlike &amp;ldquo;testing&amp;rdquo;, which is only included in
&amp;ldquo;edge&amp;rdquo;).&lt;/p>
&lt;p>&lt;strong>In other words&lt;/strong>: This is the first time a package I maintain will make it to the
official repositories of a Linux distro I like!&lt;/p>
&lt;p>&lt;strong>Next milestone&lt;/strong>: Follow suit with a project I maintain.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>I did not initiate this: it has just happened organically / spontaneously.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>DEFCON radio</title><link>https://perrotta.dev/2025/04/defcon-radio/</link><pubDate>Tue, 01 Apr 2025 13:52:32 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/defcon-radio/</guid><description>&lt;p>Back in my Windows days, in my first desktop computer, I would happily launch
&lt;a href="https://bsplayer.com/">BSPlayer&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Somewhat later, in my desktop Linux, I would happily launch
&lt;a href="https://www.clementine-player.org/">Clementine&lt;/a> and listen to radio stations.&lt;/p>
&lt;p>Now, in macOS, I mostly browse Spotify. But there isn&amp;rsquo;t a lot of serendipity
there: I just find myself browsing the same songs over and over again. Spotify
used to be social, if you connected it to Facebook, you could find what your
friends were listening to. Many of my favorite artists were discovered this way.
These days, however, my generation no longer uses Facebook, and Spotify is
barely social anymore.&lt;/p>
&lt;p>&lt;a href="https://somafm.com/defcon/">DEFCON Radio&lt;/a> can bring some of that nostalgia
back. Well, the entire &lt;a href="http://somafm.com/">soma fm&lt;/a> network is quite decent,
for that matter:&lt;/p>
&lt;blockquote>
&lt;p>Over 30 unique channels of listener-supported, commercial-free,
underground/alternative radio broadcasting to the world. All music hand-picked
by SomaFM&amp;rsquo;s award-winning DJs and music directors.&lt;/p>
&lt;/blockquote></description></item><item><title>AppleScript discoverability: more Amphetamine</title><link>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</link><pubDate>Tue, 01 Apr 2025 13:32:26 +0200</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/04/applescript-discoverability-more-amphetamine/</guid><description>&lt;p>Previously: &lt;a href="https://perrotta.dev/2025/03/amphetamine-keep-awake/">Amphetamine: Keep awake&lt;/a>.&lt;/p>
&lt;p>The previous setup would turn my external monitor off upon:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span> &lt;span style="color:#c678dd">to&lt;/span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I needed to modify it to issue that command only when the session is not yet
active.&lt;/p>
&lt;p>Via &lt;a href="https://apple.stackexchange.com/questions/46521/how-do-i-find-out-the-applescript-commands-available-for-a-particular-app">Apple Stack
Exchange&lt;/a>
I noticed I could open the &lt;code>Script Editor.app&lt;/code>, then &lt;code>File &amp;gt; Open Dictionary...&lt;/code>, then select &lt;code>Amphetamine.app&lt;/code>.&lt;/p>
&lt;p>This would open a new window with a list of all available AppleScript commands
to my disposal.&lt;/p>
&lt;p>I quickly spotted one called &lt;code>session is active&lt;/code>:&lt;/p>
&lt;blockquote>
&lt;p>Returns boolean - true or false - indicating whether there is an active session&lt;/p>
&lt;/blockquote>
&lt;p>&amp;hellip;that&amp;rsquo;s exactly what I needed!&lt;/p>
&lt;p>Now I just needed to combine &lt;code>if&lt;/code> + &lt;code>session is active&lt;/code> + &lt;code>start a new session&lt;/code>.&lt;/p>
&lt;p>I don&amp;rsquo;t know AppleScript, and I didn&amp;rsquo;t intend to specialize on it now. In the
old days, I would have used a search engine and/or consulted a Stack Exchange
website to figure out what is the &lt;code>if&lt;/code> syntax. Or maybe even have introspected
the AppleScript documentation / manual.&lt;/p>
&lt;p>But we&amp;rsquo;re in 2025.&lt;/p>
&lt;p>I write &lt;code>llm applescript if &amp;quot;session is active&amp;quot; tell application to start new session&lt;/code> in Chrome. &lt;code>llm&lt;/code> is aliased to
&lt;code>https://chatgpt.com/?hints=search&amp;amp;ref=ext&amp;amp;q=%s&lt;/code>. ChatGPT Search happily tells
me what the correct syntax is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-applescript" data-lang="applescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">tell&lt;/span> &lt;span style="color:#e5c07b">application&lt;/span> &lt;span style="color:#98c379">&amp;#34;Amphetamine&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">if&lt;/span> &lt;span style="color:#56b6c2">not&lt;/span> (&lt;span style="color:#e06c75">session&lt;/span> &lt;span style="color:#56b6c2">is&lt;/span> &lt;span style="color:#e06c75">active&lt;/span>) &lt;span style="color:#c678dd">then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e5c07b">start&lt;/span> &lt;span style="color:#e5c07b">new&lt;/span> &lt;span style="color:#e06c75">session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">if&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c678dd">end&lt;/span> &lt;span style="color:#c678dd">tell&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I follow up with &lt;code>inline in osascript&lt;/code>, which results in:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Exactly what I was looking for.&lt;/p>
&lt;p>Moments later there&amp;rsquo;s a new commit in my corp dotfiles:&lt;/p>
&lt;pre tabindex="0">&lt;code>% git show b306e31597b63007bb8c3aadb56340cdb6f52703
commit b306e31597b63007bb8c3aadb56340cdb6f52703
Author: Thiago Perrotta &amp;lt;tbperrotta@gmail.com&amp;gt;
Date: Tue Apr 1 13:31:33 2025 +0200

 better amphetamine

diff --git profile/.profile.d/functions_corp.sh profile/.profile.d/functions_corp.sh
index e58333a..365c176 100644
--- profile/.profile.d/functions_corp.sh
+++ profile/.profile.d/functions_corp.sh
@@ -19,7 +19,7 @@ redacted_login() {
 # Run at the start of the work day
 prodaccess() {
 echo &amp;#34;--&amp;gt; Amphetamine&amp;#34;
- osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;
+ osascript -e &amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to if not (session is active) then start new session&amp;#39;
&lt;/code>&lt;/pre></description></item><item><title>Experts</title><link>https://perrotta.dev/2025/03/experts/</link><pubDate>Sat, 29 Mar 2025 18:08:37 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/experts/</guid><description>&lt;p>Suddenly it feels like everyone is an expert on &amp;ldquo;AI&amp;rdquo;.&lt;/p>
&lt;p>For example, MCP (Model Context Protocol) got released quite recently and some
folks are already writing extensive articles about it, as if they had been
working with the technology for ages&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>It resembles people giving advice about COVID-19 a few years ago, or about
finance and/or taxes and/or parenting in general.&lt;/p>
&lt;p>I am guessing that surfing the {insert current hype wave} is the way to go,
assuming you follow internet advice™.&lt;/p>
&lt;p>Nonetheless the challenge is, as everything else in life, to develop the ability
to tell apart &lt;a href="https://simonwillison.net/">the&lt;/a>
&lt;a href="https://danielmiessler.com/">good&lt;/a> from the bad ones&lt;sup id="fnref:2">&lt;a href="#fn:2" class="footnote-ref" role="doc-noteref">2&lt;/a>&lt;/sup>.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>Which makes me wonder how much of these articles were written with or
assisted by Gen AI itself.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;li id="fn:2">
&lt;p>I won&amp;rsquo;t link to bad ones as a matter of principle, and also because they
don&amp;rsquo;t deserve more attention.&amp;#160;&lt;a href="#fnref:2" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>llm: remove stored key</title><link>https://perrotta.dev/2025/03/llm-remove-stored-key/</link><pubDate>Fri, 28 Mar 2025 14:09:41 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/llm-remove-stored-key/</guid><description>&lt;p>I was just trying &lt;a href="https://simonwillison.net/">Simon Willison&lt;/a>&amp;rsquo;s excellent CLI
&lt;a href="https://llm.datasette.io/en/stable/index.html">llm&lt;/a> tool:&lt;/p>
&lt;blockquote>
&lt;p>A CLI utility and Python library for interacting with Large Language Models,
both via remote APIs and models that can be installed and run on your own
machine.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s straightforward to set API Keys with it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>I wanted to set one for &lt;a href="https://www.anthropic.com/claude">Anthropic Claude&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> claude
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>But it turns out the correct name is &lt;code>anthropic&lt;/code>, not &lt;code>claude&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm key &lt;span style="color:#e5c07b">set&lt;/span> anthropic
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I wanted to clean up the &lt;code>claude&lt;/code> entry.&lt;/p>
&lt;p>Surprisingly, there&amp;rsquo;s no &lt;code>llm key remove&lt;/code> or &lt;code>llm key delete&lt;/code> command!
&lt;a href="https://llm.datasette.io/en/stable/help.html#llm-keys-help">Docs&lt;/a>.&lt;/p>
&lt;p>The workaround: edit the &lt;code>keys.json&lt;/code> file directly:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output above is from macOS.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% &lt;span style="color:#e06c75">$EDITOR&lt;/span> &lt;span style="color:#98c379">&amp;#34;&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>llm keys path&lt;span style="color:#c678dd">)&lt;/span>&lt;span style="color:#98c379">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/Users/thiago.perrotta/Library/Application Support/io.datasette.llm/keys.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>keys.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;claude&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Remove &lt;code>claude&lt;/code> from it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;// Note&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;This file stores secret API credentials. Do not share!&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;openai&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-{redacted}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">&amp;#34;anthropic&amp;#34;&lt;/span>: &lt;span style="color:#98c379">&amp;#34;sk-ant-api03-{redacted}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And it&amp;rsquo;s done! Verify with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% llm keys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anthropic
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>openai
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Badminton</title><link>https://perrotta.dev/2025/03/badminton/</link><pubDate>Fri, 28 Mar 2025 00:38:18 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/badminton/</guid><description>&lt;p>One of the coolest sports in the world I&amp;rsquo;ve become acquainted with is
&lt;a href="https://en.wikipedia.org/wiki/Badminton">Badminton&lt;/a>. In the beginning it is
quite odd to understand its finesse, but after a while it gets easily
internalized and becomes quite natural.&lt;/p>
&lt;p>You can play it in singles or in doubles. Arguably most of the fun happens when
playing in doubles. You&amp;rsquo;re supposed to develop synergy with your court partner
and understand their play style, and then adapt accordingly. The style need not
be immutable: it&amp;rsquo;s perfectly fine (and common, even) to change tactics as the
game progresses.&lt;/p>
&lt;p>I love how I can express myself freely in the court, whilst have little regard
to formal expectations. I can comfortably (and on-demand) change hands, jump,
squat, put either foot forward, serve the shuttle short or long, position myself
close to the center or close to the edge of the court, go left and right or
backwards and forward. The sky is the limit for freedom and creativity of
movements. It&amp;rsquo;s like a dance wherein you get fully immersed, borderline poetic.&lt;/p>
&lt;p>Few sports give you this much freedom to express yourself as you see fit.&lt;/p></description></item><item><title>Amphetamine: Keep awake</title><link>https://perrotta.dev/2025/03/amphetamine-keep-awake/</link><pubDate>Fri, 28 Mar 2025 00:14:32 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/amphetamine-keep-awake/</guid><description>&lt;p>&lt;a href="https://apps.apple.com/us/app/amphetamine/id937984704?mt=12">Amphetamine&lt;/a>:&lt;/p>
&lt;blockquote>
&lt;p>The most awesome keep-awake app ever created for macOS. Amphetamine can keep
your Mac, and optionally its display(s), awake through a super simple on/off
switch, or automatically through easy-to-configure Triggers. Amphetamine is
extremely powerful and includes advanced features for those who need them, yet
remains intuitive and easy-to-use for those who don&amp;rsquo;t need all of the bells
and whistles.&lt;/p>
&lt;/blockquote>
&lt;p>It&amp;rsquo;s like &lt;a href="https://www.caffeine-app.net/">Caffeine&lt;/a> (or one of its dozen
clones), but better.&lt;/p>
&lt;p>Here&amp;rsquo;s how I use it:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>on my personal laptop, whenever I am streaming a movie or a TV show (e.g. via
&lt;a href="https://jellyfin.org/">jellyfin&lt;/a>, so that it doesn&amp;rsquo;t cut off the streaming in
the middle&lt;/p>
&lt;/li>
&lt;li>
&lt;p>on my work computer, as soon as I start the work day, so that the VPN stays
connected for the whole day, as well as my SSH sessions&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>Upon launching it a system tray icon appears. A left-click opens up its
contextual menu, exposing lots of knobs and details. A right-click toggles it on
/ off.&lt;/p>
&lt;p>I configure the toggle so that it stays awake for a default of 4 hours for my
personal laptop, and 8-10 hours for my work computer (=the duration of an usual
work day).&lt;/p>
&lt;p>If you don&amp;rsquo;t specify a limit then it stays awake indefinitely, which is
counterproductive: (i) spending more energy and battery than necessary and (ii)
from an operational security perspective, it &lt;em>should&lt;/em> ideally self-lock at some
point, in case you forget to do so.&lt;/p>
&lt;p>I just care about keeping internet and sessions connectivity alive, but it&amp;rsquo;s
also possible to configure it to keep the display on.&lt;/p>
&lt;p>For bonus productivity, configure it to always launch at login, so that
activating it is just one (right) click away.&lt;/p>
&lt;p>Apparently I activated it more than 180 times in my personal laptop, effectively
keeping it awake for more than 24 days. At work, more than 250 sessions for more
than 8 days&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>.&lt;/p>
&lt;p>When writing this post, I just learned that I can activate it via
&lt;a href="https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/introduction/ASLR_intro.html">AppleScript&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>% osascript -e &lt;span style="color:#98c379">&amp;#39;tell application &amp;#34;Amphetamine&amp;#34; to start new session&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now I can augment my &lt;a href="https://perrotta.dev/2024/10/prodaccess/">&lt;code>prodaccess&lt;/code>&lt;/a> script
with that.&lt;/p>
&lt;div class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1">
&lt;p>There is definitely something odd with these numbers.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div></description></item><item><title>Unemployment is not the problem</title><link>https://perrotta.dev/2025/03/unemployment-is-not-the-problem/</link><pubDate>Fri, 28 Mar 2025 00:09:38 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/unemployment-is-not-the-problem/</guid><description>&lt;p>&lt;a href="https://whynothugo.nl/journal/2025/03/27/unemployment-is-not-the-problem/">Unemployment is not the problem&lt;/a> by Hugo Barrera:&lt;/p>
&lt;blockquote>
&lt;p>Modern society faces a paradox: the more efficient we become, the fewer
workers we need to sustain ourselves. Yet we still demand that people work
long hours just to earn survival. If 50 people working full-time can produce
enough for 100, why do we deny the other 50 access to those goods—instead of
letting all 100 work half the hours and share the benefits?&lt;/p>
&lt;p>[&amp;hellip;]&lt;/p>
&lt;p>But if we already produce enough, why must we keep labouring like we don&amp;rsquo;t?
The real disincentive is forcing unemployment on some while overworking others
in a system that, by its own efficiency, has made so many jobs unnecessary.&lt;/p>
&lt;p>The solution isn&amp;rsquo;t to invent useless busywork or cling to outdated 40-hour
weeks—it&amp;rsquo;s to distribute necessary labor fairly. A shorter work week wouldn&amp;rsquo;t
mean less gets done; it would mean what must get done is made by the work of
all, freeing time for life beyond work. The obstacle isn&amp;rsquo;t economics, but our
insistence that survival must be earned through toil, even when toil is no
longer needed.&lt;/p>
&lt;/blockquote>
&lt;p>We humans are little complicated beings.&lt;/p>
&lt;p>AI uprising or not, first we need to figure out ourselves.&lt;/p></description></item><item><title>pre-commit: make a hook opt-in</title><link>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</link><pubDate>Thu, 27 Mar 2025 13:22:44 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/pre-commit-make-a-hook-opt-in/</guid><description>&lt;p>Recently we added the following hook to our &lt;a href="https://pre-commit.com">pre-commit&lt;/a>
setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be triggered with &lt;code>pre-commit run --all-files helm-lock&lt;/code>.&lt;/p>
&lt;p>It turned out to be an issue because not every developer has read-only access
to our helm repositories.&lt;/p>
&lt;p>The workaround was to make this hook opt-in.&lt;/p>
&lt;p>We can do so by adding it to the &lt;a href="https://pre-commit.com/#confining-hooks-to-run-at-certain-stages">manual stage&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">repos&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">repo&lt;/span>: https://github.com/sbrunner/hooks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">rev: ee105bd276e163fce85744b39104ca563f923c47 # frozen&lt;/span>: &lt;span style="color:#d19a66">1.4.0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">hooks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#e06c75">id&lt;/span>: helm-lock
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e06c75">stages&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - manual
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It can be then invoked like this: &lt;code>pre-commit run --all-files helm-lock --hook-stage manual&lt;/code>.&lt;/p>
&lt;p>An alternative could have been to instruct people to set
&lt;a href="https://pre-commit.com/#temporarily-disabling-hooks">&lt;code>SKIP=helm-lock&lt;/code>&lt;/a>, however
&lt;a href="https://world.hey.com/jason/software-defaults-15955a8e">defaults&lt;/a> are powerful.&lt;/p></description></item><item><title>1password CLI + direnv integration</title><link>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</link><pubDate>Wed, 26 Mar 2025 14:15:15 +0100</pubDate><author>serendipity@perrotta.dev (Thiago Perrotta)</author><guid>https://perrotta.dev/2025/03/1password-cli--direnv-integration/</guid><description>&lt;p>Let&amp;rsquo;s stay you&amp;rsquo;re working on a terraform module that has a sensitive variable
named &lt;code>api_key&lt;/code> in &lt;code>variables.tf&lt;/code>.&lt;/p>
&lt;p>When running &lt;code>terraform apply&lt;/code>, you&amp;rsquo;ll need to supply its value. Every. Single.
Time.&lt;/p>
&lt;p>We can make it persistent by setting &lt;code>export TF_VAR_api_key={my value}&lt;/code>.
However this is only persistent within the current shell.&lt;/p>
&lt;p>To make it persistent across multiple sessions, create a &lt;code>.envrc&lt;/code> file at the
root module:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">={&lt;/span>my value&lt;span style="color:#56b6c2">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then source it: &lt;code>source ~/.envrc&lt;/code>. Now you have to source it every single time
you open a new shell.&lt;/p>
&lt;p>We can use &lt;a href="http://direnv.net/">&lt;code>direnv&lt;/code>&lt;/a> to do so automatically. It has been
&lt;a href="https://perrotta.dev/2022/01/direnv-automate-your-environment-variables/">previously covered&lt;/a>. But&amp;hellip;now we have
a secret stored as plain text in our filesystem.&lt;/p>
&lt;p>We could store it in a more secure place, like a password manager, and then have
a mechanism automatically fetch its value.&lt;/p>
&lt;h2 id="first-approach">First approach&lt;/h2>
&lt;p>When using 1Password, the &lt;a href="https://developer.1password.com/docs/cli/">1Password
CLI&lt;/a> is such a mechanism.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>&lt;span style="color:#e5c07b">export&lt;/span> &lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#c678dd">$(&lt;/span>op run --no-masking -- op &lt;span style="color:#e5c07b">read&lt;/span> &lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>&lt;span style="color:#c678dd">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can fetch the secret reference path from 1Password:
&lt;a href="https://developer.1password.com/docs/cli/secret-references/">docs&lt;/a>. Click &amp;ldquo;Copy
Secret Reference&amp;rdquo; in the corresponding entry item.&lt;/p>
&lt;h2 id="second-approach">Second approach&lt;/h2>
&lt;p>The above is one possibility, and it works flawlessly, but there&amp;rsquo;s a second
approach that uses &lt;code>op run&lt;/code> alone with a secret reference that is dynamically
replaced.&lt;/p>
&lt;p>Create an &lt;code>.env&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e06c75">TF_VAR_api_key&lt;/span>&lt;span style="color:#56b6c2">=&lt;/span>&lt;span style="color:#98c379">&amp;#34;op://{vault name}/{entry name}/{item name}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Update the &lt;code>.envrc&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#7f848e">&lt;/span>dotenv
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now run &lt;code>terraform apply&lt;/code> via &lt;code>op run&lt;/code>, as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#abb2bf;background-color:#282c34;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>op run --env-file&lt;span style="color:#56b6c2">=&lt;/span>.env -- terraform apply
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/">https://mattedwards.org/2024/01/inject-secrets-into-terraform-environment-using-1password/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://nshipster.com/1password-cli/">https://nshipster.com/1password-cli/&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>